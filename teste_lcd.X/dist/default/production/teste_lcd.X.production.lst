

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 07 01:38:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 05/05/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F46K22 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _ANSELD	set	3899
    53  0000                     _ANSELC	set	3898
    54  0000                     _ANSELB	set	3897
    55  0000                     _ANSELA	set	3896
    56  0000                     _PORTD	set	3971
    57  0000                     _TRISD	set	3989
    58  0000                     _PORTCbits	set	3970
    59  0000                     _TRISCbits	set	3988
    60                           
    61                           	psect	smallconst
    62  001000                     __psmallconst:
    63                           	callstack 0
    64  001000  00                 	db	0
    65  001001                     STR_1:
    66  001001  47                 	db	71	;'G'
    67  001002  75                 	db	117	;'u'
    68  001003  73                 	db	115	;'s'
    69  001004  74                 	db	116	;'t'
    70  001005  61                 	db	97	;'a'
    71  001006  76                 	db	118	;'v'
    72  001007  6F                 	db	111	;'o'
    73  001008  20                 	db	32
    74  001009  53                 	db	83	;'S'
    75  00100A  6F                 	db	111	;'o'
    76  00100B  61                 	db	97	;'a'
    77  00100C  72                 	db	114	;'r'
    78  00100D  65                 	db	101	;'e'
    79  00100E  73                 	db	115	;'s'
    80  00100F  00                 	db	0
    81  001010  00                 	db	0	; dummy byte at the end
    82  0000                     
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  001324                     __pcinit:
    87                           	callstack 0
    88  001324                     start_initialization:
    89                           	callstack 0
    90  001324                     __initialization:
    91                           	callstack 0
    92  001324                     end_of_initialization:
    93                           	callstack 0
    94  001324                     __end_of__initialization:
    95                           	callstack 0
    96  001324  0E00               	movlw	low (__Lsmallconst shr (0+16))
    97  001326  6EF8               	movwf	tblptru,c
    98  001328  0E10               	movlw	high __Lsmallconst
    99  00132A  6EF7               	movwf	tblptrh,c
   100  00132C  0100               	movlb	0
   101  00132E  EF25  F009         	goto	_main	;jump to C main() function
   102                           
   103                           	psect	cstackCOMRAM
   104  000001                     __pcstackCOMRAM:
   105                           	callstack 0
   106  000001                     LCD_pos@coluna:
   107                           	callstack 0
   108  000001                     LCD_printchar@character:
   109                           	callstack 0
   110  000001                     LCD_initialize@i:
   111                           	callstack 0
   112                           
   113                           ; 2 bytes @ 0x0
   114  000001                     	ds	1
   115  000002                     ??_LCD_pos:
   116  000002                     LCD_printchar@i:
   117                           	callstack 0
   118                           
   119                           ; 2 bytes @ 0x1
   120  000002                     	ds	1
   121  000003                     LCD_pos@pos:
   122                           	callstack 0
   123                           
   124                           ; 1 bytes @ 0x2
   125  000003                     	ds	1
   126  000004                     LCD_pos@cte:
   127                           	callstack 0
   128  000004                     LCD_printstring@s:
   129                           	callstack 0
   130                           
   131                           ; 2 bytes @ 0x3
   132  000004                     	ds	1
   133  000005                     LCD_pos@linha:
   134                           	callstack 0
   135                           
   136                           ; 1 bytes @ 0x4
   137  000005                     	ds	1
   138  000006                     LCD_pos@i:
   139                           	callstack 0
   140                           
   141                           ; 2 bytes @ 0x5
   142  000006                     	ds	2
   143  000008                     ??_main:
   144                           
   145                           ; 1 bytes @ 0x7
   146  000008                     	ds	2
   147                           
   148 ;;
   149 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   150 ;;
   151 ;; *************** function _main *****************
   152 ;; Defined at:
   153 ;;		line 11 in file "main.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;  i               1    0        unsigned char 
   158 ;; Return value:  Size  Location     Type
   159 ;;                  1    wreg      void 
   160 ;; Registers used:
   161 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   169 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   170 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   171 ;;Total ram usage:        3 bytes
   172 ;; Hardware stack levels required when called:    2
   173 ;; This function calls:
   174 ;;		_LCD_initialize
   175 ;;		_LCD_pos
   176 ;;		_LCD_printstring
   177 ;; This function is called by:
   178 ;;		Startup code after reset
   179 ;; This function uses a non-reentrant model
   180 ;;
   181                           
   182                           	psect	text0
   183  00124A                     __ptext0:
   184                           	callstack 0
   185  00124A                     _main:
   186                           	callstack 29
   187  00124A                     
   188                           ;main.c: 16:     ANSELA = 0x01;
   189  00124A  0E01               	movlw	1
   190  00124C  010F               	movlb	15	; () banked
   191  00124E  6F38               	movwf	56,b	;volatile
   192                           
   193                           ;main.c: 17:     ANSELB = 0x00;
   194  001250  0E00               	movlw	0
   195  001252  6F39               	movwf	57,b	;volatile
   196                           
   197                           ;main.c: 18:     ANSELC = 0x00;
   198  001254  0E00               	movlw	0
   199  001256  6F3A               	movwf	58,b	;volatile
   200                           
   201                           ;main.c: 19:     ANSELD = 0x00;
   202  001258  0E00               	movlw	0
   203  00125A  6F3B               	movwf	59,b	;volatile
   204  00125C                     
   205                           ; BSR set to: 15
   206                           ;main.c: 22:     TRISCbits.RC2 = 0;
   207  00125C  9494               	bcf	148,2,c	;volatile
   208  00125E                     
   209                           ; BSR set to: 15
   210                           ;main.c: 25:     PORTCbits.RC2 = 0;
   211  00125E  9482               	bcf	130,2,c	;volatile
   212  001260                     
   213                           ; BSR set to: 15
   214                           ;main.c: 27:     LCD_initialize();
   215  001260  EC09  F008         	call	_LCD_initialize	;wreg free
   216  001264                     
   217                           ;main.c: 29:     LCD_pos (1,4);
   218  001264  0E04               	movlw	4
   219  001266  6E01               	movwf	LCD_pos@coluna^0,c
   220  001268  0E01               	movlw	1
   221  00126A  ECBF  F008         	call	_LCD_pos
   222  00126E                     
   223                           ;main.c: 30:     LCD_printstring("Gustavo Soares");
   224  00126E  0E01               	movlw	low STR_1
   225  001270  6E04               	movwf	LCD_printstring@s^0,c
   226  001272  0E10               	movlw	high STR_1
   227  001274  6E05               	movwf	(LCD_printstring@s+1)^0,c
   228  001276  EC77  F009         	call	_LCD_printstring	;wreg free
   229  00127A                     l1065:
   230                           
   231                           ;main.c: 33:         PORTCbits.RC2 ^= 1;
   232  00127A  7482               	btg	130,2,c	;volatile
   233  00127C                     
   234                           ;main.c: 34:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   235  00127C  0E1A               	movlw	26
   236  00127E  6E09               	movwf	(??_main+1)^0,c
   237  001280  0E5E               	movlw	94
   238  001282  6E08               	movwf	??_main^0,c
   239  001284  0E6E               	movlw	110
   240  001286                     u287:
   241  001286  2EE8               	decfsz	wreg,f,c
   242  001288  D7FE               	bra	u287
   243  00128A  2E08               	decfsz	??_main^0,f,c
   244  00128C  D7FC               	bra	u287
   245  00128E  2E09               	decfsz	(??_main+1)^0,f,c
   246  001290  D7FA               	bra	u287
   247  001292  D000               	nop2	
   248  001294  EF3D  F009         	goto	l1065
   249  001298  EF00  F000         	goto	start
   250  00129C                     __end_of_main:
   251                           	callstack 0
   252                           
   253 ;; *************** function _LCD_printstring *****************
   254 ;; Defined at:
   255 ;;		line 124 in file "gm_lcd.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;  s               2    3[COMRAM] PTR const unsigned char 
   258 ;;		 -> STR_1(15), 
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;Total ram usage:        2 bytes
   275 ;; Hardware stack levels used:    1
   276 ;; Hardware stack levels required when called:    1
   277 ;; This function calls:
   278 ;;		_LCD_printchar
   279 ;; This function is called by:
   280 ;;		_main
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	text1
   285  0012EE                     __ptext1:
   286                           	callstack 0
   287  0012EE                     _LCD_printstring:
   288                           	callstack 29
   289  0012EE                     
   290                           ;gm_lcd.c: 124:  void LCD_printstring(const char *s);gm_lcd.c: 125:  {;gm_lcd.c: 126:   
      +                             while(*s)
   291  0012EE  EF83  F009         	goto	l1051
   292  0012F2                     l1047:
   293                           
   294                           ;gm_lcd.c: 127:      {;gm_lcd.c: 128:          LCD_printchar(*s);
   295  0012F2  C004  FFF6         	movff	LCD_printstring@s,tblptrl
   296  0012F6  C005  FFF7         	movff	LCD_printstring@s+1,tblptrh
   297  0012FA                     	if	0	;tblptru may be non-zero
   298  0012FA                     	endif
   299  0012FA                     	if	0	;tblptru may be non-zero
   300  0012FA                     	endif
   301  0012FA  0008               	tblrd		*
   302  0012FC  50F5               	movf	tablat,w,c
   303  0012FE  EC4E  F009         	call	_LCD_printchar
   304  001302                     
   305                           ;gm_lcd.c: 129:          s++;
   306  001302  4A04               	infsnz	LCD_printstring@s^0,f,c
   307  001304  2A05               	incf	(LCD_printstring@s+1)^0,f,c
   308  001306                     l1051:
   309                           
   310                           ;gm_lcd.c: 126:      while(*s)
   311  001306  C004  FFF6         	movff	LCD_printstring@s,tblptrl
   312  00130A  C005  FFF7         	movff	LCD_printstring@s+1,tblptrh
   313  00130E                     	if	0	;tblptru may be non-zero
   314  00130E                     	endif
   315  00130E                     	if	0	;tblptru may be non-zero
   316  00130E                     	endif
   317  00130E  0008               	tblrd		*
   318  001310  50F5               	movf	tablat,w,c
   319  001312  0900               	iorlw	0
   320  001314  A4D8               	btfss	status,2,c
   321  001316  EF8F  F009         	goto	u271
   322  00131A  EF91  F009         	goto	u270
   323  00131E                     u271:
   324  00131E  EF79  F009         	goto	l1047
   325  001322                     u270:
   326  001322  0012               	return		;funcret
   327  001324                     __end_of_LCD_printstring:
   328                           	callstack 0
   329                           
   330 ;; *************** function _LCD_printchar *****************
   331 ;; Defined at:
   332 ;;		line 105 in file "gm_lcd.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;  character       1    wreg     unsigned char 
   335 ;; Auto vars:     Size  Location     Type
   336 ;;  character       1    0[COMRAM] unsigned char 
   337 ;;  i               2    1[COMRAM] unsigned int 
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   348 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;Total ram usage:        3 bytes
   352 ;; Hardware stack levels used:    1
   353 ;; This function calls:
   354 ;;		Nothing
   355 ;; This function is called by:
   356 ;;		_LCD_printstring
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text2
   361  00129C                     __ptext2:
   362                           	callstack 0
   363  00129C                     _LCD_printchar:
   364                           	callstack 29
   365                           
   366                           ;incstack = 0
   367                           ;LCD_printchar@character stored from wreg
   368  00129C  6E01               	movwf	LCD_printchar@character^0,c
   369  00129E                     
   370                           ;gm_lcd.c: 108:     PORTD = character;
   371  00129E  C001  FF83         	movff	LCD_printchar@character,3971	;volatile
   372  0012A2                     
   373                           ;gm_lcd.c: 109:     PORTCbits.RC1 = 1;
   374  0012A2  8282               	bsf	130,1,c	;volatile
   375  0012A4                     
   376                           ;gm_lcd.c: 110:     PORTCbits.RC0 = 1;
   377  0012A4  8082               	bsf	130,0,c	;volatile
   378  0012A6                     
   379                           ;gm_lcd.c: 111:     for (i = 0; i < 100; i++);
   380  0012A6  0E00               	movlw	0
   381  0012A8  6E03               	movwf	(LCD_printchar@i+1)^0,c
   382  0012AA  0E00               	movlw	0
   383  0012AC  6E02               	movwf	LCD_printchar@i^0,c
   384  0012AE                     l781:
   385  0012AE  4A02               	infsnz	LCD_printchar@i^0,f,c
   386  0012B0  2A03               	incf	(LCD_printchar@i+1)^0,f,c
   387  0012B2  5003               	movf	(LCD_printchar@i+1)^0,w,c
   388  0012B4  E109               	bnz	u10
   389  0012B6  0E64               	movlw	100
   390  0012B8  5C02               	subwf	LCD_printchar@i^0,w,c
   391  0012BA  A0D8               	btfss	status,0,c
   392  0012BC  EF62  F009         	goto	u11
   393  0012C0  EF64  F009         	goto	u10
   394  0012C4                     u11:
   395  0012C4  EF57  F009         	goto	l781
   396  0012C8                     u10:
   397  0012C8                     
   398                           ;gm_lcd.c: 112:     PORTCbits.RC0 = 0;
   399  0012C8  9082               	bcf	130,0,c	;volatile
   400  0012CA                     
   401                           ;gm_lcd.c: 113:     for (i = 0; i < 200; i++);
   402  0012CA  0E00               	movlw	0
   403  0012CC  6E03               	movwf	(LCD_printchar@i+1)^0,c
   404  0012CE  0E00               	movlw	0
   405  0012D0  6E02               	movwf	LCD_printchar@i^0,c
   406  0012D2                     l791:
   407  0012D2  4A02               	infsnz	LCD_printchar@i^0,f,c
   408  0012D4  2A03               	incf	(LCD_printchar@i+1)^0,f,c
   409  0012D6  5003               	movf	(LCD_printchar@i+1)^0,w,c
   410  0012D8  E109               	bnz	u20
   411  0012DA  0EC8               	movlw	200
   412  0012DC  5C02               	subwf	LCD_printchar@i^0,w,c
   413  0012DE  A0D8               	btfss	status,0,c
   414  0012E0  EF74  F009         	goto	u21
   415  0012E4  EF76  F009         	goto	u20
   416  0012E8                     u21:
   417  0012E8  EF69  F009         	goto	l791
   418  0012EC                     u20:
   419  0012EC  0012               	return		;funcret
   420  0012EE                     __end_of_LCD_printchar:
   421                           	callstack 0
   422                           
   423 ;; *************** function _LCD_pos *****************
   424 ;; Defined at:
   425 ;;		line 84 in file "gm_lcd.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;  linha           1    wreg     unsigned char 
   428 ;;  coluna          1    0[COMRAM] unsigned char 
   429 ;; Auto vars:     Size  Location     Type
   430 ;;  linha           1    4[COMRAM] unsigned char 
   431 ;;  i               2    5[COMRAM] unsigned int 
   432 ;;  cte             1    3[COMRAM] unsigned char 
   433 ;;  pos             1    2[COMRAM] unsigned char 
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, status,2, status,0
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   443 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   444 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;Total ram usage:        7 bytes
   448 ;; Hardware stack levels used:    1
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text3
   457  00117E                     __ptext3:
   458                           	callstack 0
   459  00117E                     _LCD_pos:
   460                           	callstack 30
   461                           
   462                           ;incstack = 0
   463                           ;LCD_pos@linha stored from wreg
   464  00117E  6E05               	movwf	LCD_pos@linha^0,c
   465  001180                     
   466                           ;gm_lcd.c: 86:     unsigned char cte, pos;;gm_lcd.c: 88:     cte = 0; pos = 0;
   467  001180  0E00               	movlw	0
   468  001182  6E04               	movwf	LCD_pos@cte^0,c
   469  001184  0E00               	movlw	0
   470  001186  6E03               	movwf	LCD_pos@pos^0,c
   471  001188                     
   472                           ;gm_lcd.c: 90:     if (linha == 1) cte = 0;
   473  001188  0405               	decf	LCD_pos@linha^0,w,c
   474  00118A  A4D8               	btfss	status,2,c
   475  00118C  EFCA  F008         	goto	u211
   476  001190  EFCC  F008         	goto	u210
   477  001194                     u211:
   478  001194  EFD0  F008         	goto	l1007
   479  001198                     u210:
   480  001198  0E00               	movlw	0
   481  00119A  6E04               	movwf	LCD_pos@cte^0,c
   482  00119C  EFF7  F008         	goto	l1019
   483  0011A0                     l1007:
   484  0011A0  0E02               	movlw	2
   485  0011A2  1805               	xorwf	LCD_pos@linha^0,w,c
   486  0011A4  A4D8               	btfss	status,2,c
   487  0011A6  EFD7  F008         	goto	u221
   488  0011AA  EFD9  F008         	goto	u220
   489  0011AE                     u221:
   490  0011AE  EFDD  F008         	goto	l1011
   491  0011B2                     u220:
   492  0011B2  0E40               	movlw	64
   493  0011B4  6E04               	movwf	LCD_pos@cte^0,c
   494  0011B6  EFF7  F008         	goto	l1019
   495  0011BA                     l1011:
   496  0011BA  0E03               	movlw	3
   497  0011BC  1805               	xorwf	LCD_pos@linha^0,w,c
   498  0011BE  A4D8               	btfss	status,2,c
   499  0011C0  EFE4  F008         	goto	u231
   500  0011C4  EFE6  F008         	goto	u230
   501  0011C8                     u231:
   502  0011C8  EFEA  F008         	goto	l1015
   503  0011CC                     u230:
   504  0011CC  0E14               	movlw	20
   505  0011CE  6E04               	movwf	LCD_pos@cte^0,c
   506  0011D0  EFF7  F008         	goto	l1019
   507  0011D4                     l1015:
   508  0011D4  0E04               	movlw	4
   509  0011D6  1805               	xorwf	LCD_pos@linha^0,w,c
   510  0011D8  A4D8               	btfss	status,2,c
   511  0011DA  EFF1  F008         	goto	u241
   512  0011DE  EFF3  F008         	goto	u240
   513  0011E2                     u241:
   514  0011E2  EFF7  F008         	goto	l70
   515  0011E6                     u240:
   516  0011E6  0E54               	movlw	84
   517  0011E8  6E04               	movwf	LCD_pos@cte^0,c
   518  0011EA  EFF7  F008         	goto	l1019
   519  0011EE                     l70:
   520  0011EE                     l1019:
   521                           
   522                           ;gm_lcd.c: 95:     pos = cte + coluna - 1;
   523  0011EE  5004               	movf	LCD_pos@cte^0,w,c
   524  0011F0  2401               	addwf	LCD_pos@coluna^0,w,c
   525  0011F2  6E02               	movwf	??_LCD_pos^0,c
   526  0011F4  0402               	decf	??_LCD_pos^0,w,c
   527  0011F6  6E03               	movwf	LCD_pos@pos^0,c
   528  0011F8                     
   529                           ;gm_lcd.c: 97:     PORTD = pos | 0x80 ;
   530  0011F8  5003               	movf	LCD_pos@pos^0,w,c
   531  0011FA  0980               	iorlw	128
   532  0011FC  6E83               	movwf	131,c	;volatile
   533  0011FE                     
   534                           ;gm_lcd.c: 98:     PORTCbits.RC1 = 0;
   535  0011FE  9282               	bcf	130,1,c	;volatile
   536  001200                     
   537                           ;gm_lcd.c: 99:     PORTCbits.RC0 = 1;
   538  001200  8082               	bsf	130,0,c	;volatile
   539                           
   540                           ;gm_lcd.c: 100:     for (i = 0; i < 100; i++);
   541  001202  0E00               	movlw	0
   542  001204  6E07               	movwf	(LCD_pos@i+1)^0,c
   543  001206  0E00               	movlw	0
   544  001208  6E06               	movwf	LCD_pos@i^0,c
   545  00120A                     l1031:
   546  00120A  4A06               	infsnz	LCD_pos@i^0,f,c
   547  00120C  2A07               	incf	(LCD_pos@i+1)^0,f,c
   548  00120E  5007               	movf	(LCD_pos@i+1)^0,w,c
   549  001210  E109               	bnz	u250
   550  001212  0E64               	movlw	100
   551  001214  5C06               	subwf	LCD_pos@i^0,w,c
   552  001216  A0D8               	btfss	status,0,c
   553  001218  EF10  F009         	goto	u251
   554  00121C  EF12  F009         	goto	u250
   555  001220                     u251:
   556  001220  EF05  F009         	goto	l1031
   557  001224                     u250:
   558  001224                     
   559                           ;gm_lcd.c: 101:     PORTCbits.RC0 = 0;
   560  001224  9082               	bcf	130,0,c	;volatile
   561  001226                     
   562                           ;gm_lcd.c: 102:     for (i = 0; i < 200; i++);
   563  001226  0E00               	movlw	0
   564  001228  6E07               	movwf	(LCD_pos@i+1)^0,c
   565  00122A  0E00               	movlw	0
   566  00122C  6E06               	movwf	LCD_pos@i^0,c
   567  00122E                     l1041:
   568  00122E  4A06               	infsnz	LCD_pos@i^0,f,c
   569  001230  2A07               	incf	(LCD_pos@i+1)^0,f,c
   570  001232  5007               	movf	(LCD_pos@i+1)^0,w,c
   571  001234  E109               	bnz	u260
   572  001236  0EC8               	movlw	200
   573  001238  5C06               	subwf	LCD_pos@i^0,w,c
   574  00123A  A0D8               	btfss	status,0,c
   575  00123C  EF22  F009         	goto	u261
   576  001240  EF24  F009         	goto	u260
   577  001244                     u261:
   578  001244  EF17  F009         	goto	l1041
   579  001248                     u260:
   580  001248  0012               	return		;funcret
   581  00124A                     __end_of_LCD_pos:
   582                           	callstack 0
   583                           
   584 ;; *************** function _LCD_initialize *****************
   585 ;; Defined at:
   586 ;;		line 26 in file "gm_lcd.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  i               2    0[COMRAM] unsigned int 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;Total ram usage:        2 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text4
   614  001012                     __ptext4:
   615                           	callstack 0
   616  001012                     _LCD_initialize:
   617                           	callstack 30
   618  001012                     
   619                           ;gm_lcd.c: 30:     TRISD = 0x00;
   620  001012  0E00               	movlw	0
   621  001014  6E95               	movwf	149,c	;volatile
   622  001016                     
   623                           ;gm_lcd.c: 31:     TRISCbits.RC0 = 0;
   624  001016  9094               	bcf	148,0,c	;volatile
   625  001018                     
   626                           ;gm_lcd.c: 32:     TRISCbits.RC1 = 0;
   627  001018  9294               	bcf	148,1,c	;volatile
   628                           
   629                           ;gm_lcd.c: 35:     PORTD = 0x00;
   630  00101A  0E00               	movlw	0
   631  00101C  6E83               	movwf	131,c	;volatile
   632  00101E                     
   633                           ;gm_lcd.c: 36:     PORTCbits.RC1 = 0;
   634  00101E  9282               	bcf	130,1,c	;volatile
   635  001020                     
   636                           ;gm_lcd.c: 37:     PORTCbits.RC0 = 0;
   637  001020  9082               	bcf	130,0,c	;volatile
   638                           
   639                           ;gm_lcd.c: 38:     for (i = 0; i < 100; i++);
   640  001022  0E00               	movlw	0
   641  001024  6E02               	movwf	(LCD_initialize@i+1)^0,c
   642  001026  0E00               	movlw	0
   643  001028  6E01               	movwf	LCD_initialize@i^0,c
   644  00102A                     l809:
   645  00102A  4A01               	infsnz	LCD_initialize@i^0,f,c
   646  00102C  2A02               	incf	(LCD_initialize@i+1)^0,f,c
   647  00102E  5002               	movf	(LCD_initialize@i+1)^0,w,c
   648  001030  E109               	bnz	u30
   649  001032  0E64               	movlw	100
   650  001034  5C01               	subwf	LCD_initialize@i^0,w,c
   651  001036  A0D8               	btfss	status,0,c
   652  001038  EF20  F008         	goto	u31
   653  00103C  EF22  F008         	goto	u30
   654  001040                     u31:
   655  001040  EF15  F008         	goto	l809
   656  001044                     u30:
   657  001044                     
   658                           ;gm_lcd.c: 41:     PORTD = 0x01;
   659  001044  0E01               	movlw	1
   660  001046  6E83               	movwf	131,c	;volatile
   661  001048                     
   662                           ;gm_lcd.c: 42:     PORTCbits.RC1 = 0;
   663  001048  9282               	bcf	130,1,c	;volatile
   664  00104A                     
   665                           ;gm_lcd.c: 43:     PORTCbits.RC0 = 1;
   666  00104A  8082               	bsf	130,0,c	;volatile
   667                           
   668                           ;gm_lcd.c: 44:     for (i = 0; i < 100; i++);
   669  00104C  0E00               	movlw	0
   670  00104E  6E02               	movwf	(LCD_initialize@i+1)^0,c
   671  001050  0E00               	movlw	0
   672  001052  6E01               	movwf	LCD_initialize@i^0,c
   673  001054                     l823:
   674  001054  4A01               	infsnz	LCD_initialize@i^0,f,c
   675  001056  2A02               	incf	(LCD_initialize@i+1)^0,f,c
   676  001058  5002               	movf	(LCD_initialize@i+1)^0,w,c
   677  00105A  E109               	bnz	u40
   678  00105C  0E64               	movlw	100
   679  00105E  5C01               	subwf	LCD_initialize@i^0,w,c
   680  001060  A0D8               	btfss	status,0,c
   681  001062  EF35  F008         	goto	u41
   682  001066  EF37  F008         	goto	u40
   683  00106A                     u41:
   684  00106A  EF2A  F008         	goto	l823
   685  00106E                     u40:
   686  00106E                     
   687                           ;gm_lcd.c: 45:     PORTCbits.RC0 = 0;
   688  00106E  9082               	bcf	130,0,c	;volatile
   689  001070                     
   690                           ;gm_lcd.c: 46:     for (i = 0; i < 10000; i++);
   691  001070  0E00               	movlw	0
   692  001072  6E02               	movwf	(LCD_initialize@i+1)^0,c
   693  001074  0E00               	movlw	0
   694  001076  6E01               	movwf	LCD_initialize@i^0,c
   695  001078                     l833:
   696  001078  4A01               	infsnz	LCD_initialize@i^0,f,c
   697  00107A  2A02               	incf	(LCD_initialize@i+1)^0,f,c
   698  00107C  0E10               	movlw	16
   699  00107E  5C01               	subwf	LCD_initialize@i^0,w,c
   700  001080  0E27               	movlw	39
   701  001082  5802               	subwfb	(LCD_initialize@i+1)^0,w,c
   702  001084  A0D8               	btfss	status,0,c
   703  001086  EF47  F008         	goto	u51
   704  00108A  EF49  F008         	goto	u50
   705  00108E                     u51:
   706  00108E  EF3C  F008         	goto	l833
   707  001092                     u50:
   708  001092                     
   709                           ;gm_lcd.c: 49:     PORTD = 0x38;
   710  001092  0E38               	movlw	56
   711  001094  6E83               	movwf	131,c	;volatile
   712  001096                     
   713                           ;gm_lcd.c: 50:     PORTCbits.RC1 = 0;
   714  001096  9282               	bcf	130,1,c	;volatile
   715  001098                     
   716                           ;gm_lcd.c: 51:     PORTCbits.RC0 = 1;
   717  001098  8082               	bsf	130,0,c	;volatile
   718                           
   719                           ;gm_lcd.c: 52:     for (i = 0; i < 100; i++);
   720  00109A  0E00               	movlw	0
   721  00109C  6E02               	movwf	(LCD_initialize@i+1)^0,c
   722  00109E  0E00               	movlw	0
   723  0010A0  6E01               	movwf	LCD_initialize@i^0,c
   724  0010A2                     l847:
   725  0010A2  4A01               	infsnz	LCD_initialize@i^0,f,c
   726  0010A4  2A02               	incf	(LCD_initialize@i+1)^0,f,c
   727  0010A6  5002               	movf	(LCD_initialize@i+1)^0,w,c
   728  0010A8  E109               	bnz	u60
   729  0010AA  0E64               	movlw	100
   730  0010AC  5C01               	subwf	LCD_initialize@i^0,w,c
   731  0010AE  A0D8               	btfss	status,0,c
   732  0010B0  EF5C  F008         	goto	u61
   733  0010B4  EF5E  F008         	goto	u60
   734  0010B8                     u61:
   735  0010B8  EF51  F008         	goto	l847
   736  0010BC                     u60:
   737  0010BC                     
   738                           ;gm_lcd.c: 53:     PORTCbits.RC0 = 0;
   739  0010BC  9082               	bcf	130,0,c	;volatile
   740  0010BE                     
   741                           ;gm_lcd.c: 54:     for (i = 0; i < 200; i++);
   742  0010BE  0E00               	movlw	0
   743  0010C0  6E02               	movwf	(LCD_initialize@i+1)^0,c
   744  0010C2  0E00               	movlw	0
   745  0010C4  6E01               	movwf	LCD_initialize@i^0,c
   746  0010C6                     l857:
   747  0010C6  4A01               	infsnz	LCD_initialize@i^0,f,c
   748  0010C8  2A02               	incf	(LCD_initialize@i+1)^0,f,c
   749  0010CA  5002               	movf	(LCD_initialize@i+1)^0,w,c
   750  0010CC  E109               	bnz	u70
   751  0010CE  0EC8               	movlw	200
   752  0010D0  5C01               	subwf	LCD_initialize@i^0,w,c
   753  0010D2  A0D8               	btfss	status,0,c
   754  0010D4  EF6E  F008         	goto	u71
   755  0010D8  EF70  F008         	goto	u70
   756  0010DC                     u71:
   757  0010DC  EF63  F008         	goto	l857
   758  0010E0                     u70:
   759  0010E0                     
   760                           ;gm_lcd.c: 57:     PORTD = 0x0E;
   761  0010E0  0E0E               	movlw	14
   762  0010E2  6E83               	movwf	131,c	;volatile
   763  0010E4                     
   764                           ;gm_lcd.c: 58:     PORTCbits.RC1 = 0;
   765  0010E4  9282               	bcf	130,1,c	;volatile
   766  0010E6                     
   767                           ;gm_lcd.c: 59:     PORTCbits.RC0 = 1;
   768  0010E6  8082               	bsf	130,0,c	;volatile
   769                           
   770                           ;gm_lcd.c: 60:     for (i = 0; i < 100; i++);
   771  0010E8  0E00               	movlw	0
   772  0010EA  6E02               	movwf	(LCD_initialize@i+1)^0,c
   773  0010EC  0E00               	movlw	0
   774  0010EE  6E01               	movwf	LCD_initialize@i^0,c
   775  0010F0                     l871:
   776  0010F0  4A01               	infsnz	LCD_initialize@i^0,f,c
   777  0010F2  2A02               	incf	(LCD_initialize@i+1)^0,f,c
   778  0010F4  5002               	movf	(LCD_initialize@i+1)^0,w,c
   779  0010F6  E109               	bnz	u80
   780  0010F8  0E64               	movlw	100
   781  0010FA  5C01               	subwf	LCD_initialize@i^0,w,c
   782  0010FC  A0D8               	btfss	status,0,c
   783  0010FE  EF83  F008         	goto	u81
   784  001102  EF85  F008         	goto	u80
   785  001106                     u81:
   786  001106  EF78  F008         	goto	l871
   787  00110A                     u80:
   788  00110A                     
   789                           ;gm_lcd.c: 61:     PORTCbits.RC0 = 0;
   790  00110A  9082               	bcf	130,0,c	;volatile
   791  00110C                     
   792                           ;gm_lcd.c: 62:     for (i = 0; i < 200; i++);
   793  00110C  0E00               	movlw	0
   794  00110E  6E02               	movwf	(LCD_initialize@i+1)^0,c
   795  001110  0E00               	movlw	0
   796  001112  6E01               	movwf	LCD_initialize@i^0,c
   797  001114                     l881:
   798  001114  4A01               	infsnz	LCD_initialize@i^0,f,c
   799  001116  2A02               	incf	(LCD_initialize@i+1)^0,f,c
   800  001118  5002               	movf	(LCD_initialize@i+1)^0,w,c
   801  00111A  E109               	bnz	u90
   802  00111C  0EC8               	movlw	200
   803  00111E  5C01               	subwf	LCD_initialize@i^0,w,c
   804  001120  A0D8               	btfss	status,0,c
   805  001122  EF95  F008         	goto	u91
   806  001126  EF97  F008         	goto	u90
   807  00112A                     u91:
   808  00112A  EF8A  F008         	goto	l881
   809  00112E                     u90:
   810  00112E                     
   811                           ;gm_lcd.c: 65:     PORTD = 0x06;
   812  00112E  0E06               	movlw	6
   813  001130  6E83               	movwf	131,c	;volatile
   814  001132                     
   815                           ;gm_lcd.c: 66:     PORTCbits.RC1 = 0;
   816  001132  9282               	bcf	130,1,c	;volatile
   817  001134                     
   818                           ;gm_lcd.c: 67:     PORTCbits.RC0 = 1;
   819  001134  8082               	bsf	130,0,c	;volatile
   820                           
   821                           ;gm_lcd.c: 68:     for (i = 0; i < 100; i++);
   822  001136  0E00               	movlw	0
   823  001138  6E02               	movwf	(LCD_initialize@i+1)^0,c
   824  00113A  0E00               	movlw	0
   825  00113C  6E01               	movwf	LCD_initialize@i^0,c
   826  00113E                     l895:
   827  00113E  4A01               	infsnz	LCD_initialize@i^0,f,c
   828  001140  2A02               	incf	(LCD_initialize@i+1)^0,f,c
   829  001142  5002               	movf	(LCD_initialize@i+1)^0,w,c
   830  001144  E109               	bnz	u100
   831  001146  0E64               	movlw	100
   832  001148  5C01               	subwf	LCD_initialize@i^0,w,c
   833  00114A  A0D8               	btfss	status,0,c
   834  00114C  EFAA  F008         	goto	u101
   835  001150  EFAC  F008         	goto	u100
   836  001154                     u101:
   837  001154  EF9F  F008         	goto	l895
   838  001158                     u100:
   839  001158                     
   840                           ;gm_lcd.c: 69:     PORTCbits.RC0 = 0;
   841  001158  9082               	bcf	130,0,c	;volatile
   842  00115A                     
   843                           ;gm_lcd.c: 70:     for (i = 0; i < 200; i++);
   844  00115A  0E00               	movlw	0
   845  00115C  6E02               	movwf	(LCD_initialize@i+1)^0,c
   846  00115E  0E00               	movlw	0
   847  001160  6E01               	movwf	LCD_initialize@i^0,c
   848  001162                     l905:
   849  001162  4A01               	infsnz	LCD_initialize@i^0,f,c
   850  001164  2A02               	incf	(LCD_initialize@i+1)^0,f,c
   851  001166  5002               	movf	(LCD_initialize@i+1)^0,w,c
   852  001168  E109               	bnz	u110
   853  00116A  0EC8               	movlw	200
   854  00116C  5C01               	subwf	LCD_initialize@i^0,w,c
   855  00116E  A0D8               	btfss	status,0,c
   856  001170  EFBC  F008         	goto	u111
   857  001174  EFBE  F008         	goto	u110
   858  001178                     u111:
   859  001178  EFB1  F008         	goto	l905
   860  00117C                     u110:
   861  00117C  0012               	return		;funcret
   862  00117E                     __end_of_LCD_initialize:
   863                           	callstack 0
   864                           
   865                           	psect	rparam
   866  0000                     
   867                           	psect	idloc
   868                           
   869                           ;Config register IDLOC0 @ 0x200000
   870                           ;	unspecified, using default values
   871  200000                     	org	2097152
   872  200000  FF                 	db	255
   873                           
   874                           ;Config register IDLOC1 @ 0x200001
   875                           ;	unspecified, using default values
   876  200001                     	org	2097153
   877  200001  FF                 	db	255
   878                           
   879                           ;Config register IDLOC2 @ 0x200002
   880                           ;	unspecified, using default values
   881  200002                     	org	2097154
   882  200002  FF                 	db	255
   883                           
   884                           ;Config register IDLOC3 @ 0x200003
   885                           ;	unspecified, using default values
   886  200003                     	org	2097155
   887  200003  FF                 	db	255
   888                           
   889                           ;Config register IDLOC4 @ 0x200004
   890                           ;	unspecified, using default values
   891  200004                     	org	2097156
   892  200004  FF                 	db	255
   893                           
   894                           ;Config register IDLOC5 @ 0x200005
   895                           ;	unspecified, using default values
   896  200005                     	org	2097157
   897  200005  FF                 	db	255
   898                           
   899                           ;Config register IDLOC6 @ 0x200006
   900                           ;	unspecified, using default values
   901  200006                     	org	2097158
   902  200006  FF                 	db	255
   903                           
   904                           ;Config register IDLOC7 @ 0x200007
   905                           ;	unspecified, using default values
   906  200007                     	org	2097159
   907  200007  FF                 	db	255
   908                           
   909                           	psect	config
   910                           
   911                           ; Padding undefined space
   912  300000                     	org	3145728
   913  300000  FF                 	db	255
   914                           
   915                           ;Config register CONFIG1H @ 0x300001
   916                           ;	Oscillator Selection bits
   917                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
   918                           ;	4X PLL Enable
   919                           ;	PLLCFG = OFF, Oscillator used directly
   920                           ;	Primary clock enable bit
   921                           ;	PRICLKEN = ON, Primary clock is always enabled
   922                           ;	Fail-Safe Clock Monitor Enable bit
   923                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   924                           ;	Internal/External Oscillator Switchover bit
   925                           ;	IESO = OFF, Oscillator Switchover mode disabled
   926  300001                     	org	3145729
   927  300001  22                 	db	34
   928                           
   929                           ;Config register CONFIG2L @ 0x300002
   930                           ;	Power-up Timer Enable bit
   931                           ;	PWRTEN = OFF, Power up timer disabled
   932                           ;	Brown-out Reset Enable bits
   933                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   934                           ;	Brown Out Reset Voltage bits
   935                           ;	BORV = 190, VBOR set to 1.90 V nominal
   936  300002                     	org	3145730
   937  300002  19                 	db	25
   938                           
   939                           ;Config register CONFIG2H @ 0x300003
   940                           ;	Watchdog Timer Enable bits
   941                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   942                           ;	Watchdog Timer Postscale Select bits
   943                           ;	WDTPS = 32768, 1:32768
   944  300003                     	org	3145731
   945  300003  3C                 	db	60
   946                           
   947                           ; Padding undefined space
   948  300004                     	org	3145732
   949  300004  FF                 	db	255
   950                           
   951                           ;Config register CONFIG3H @ 0x300005
   952                           ;	CCP2 MUX bit
   953                           ;	CCP2MX = PORTB3, CCP2 input/output is multiplexed with RB3
   954                           ;	PORTB A/D Enable bit
   955                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
   956                           ;	P3A/CCP3 Mux bit
   957                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
   958                           ;	HFINTOSC Fast Start-up
   959                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   960                           ;	Timer3 Clock input mux bit
   961                           ;	T3CMX = PORTB5, T3CKI is on RB5
   962                           ;	ECCP2 B output mux bit
   963                           ;	P2BMX = PORTD2, P2B is on RD2
   964                           ;	MCLR Pin Enable bit
   965                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   966  300005                     	org	3145733
   967  300005  A8                 	db	168
   968                           
   969                           ;Config register CONFIG4L @ 0x300006
   970                           ;	Stack Full/Underflow Reset Enable bit
   971                           ;	STVREN = ON, Stack full/underflow will cause Reset
   972                           ;	Single-Supply ICSP Enable bit
   973                           ;	LVP = OFF, Single-Supply ICSP disabled
   974                           ;	Extended Instruction Set Enable bit
   975                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   976                           ;	Background Debug
   977                           ;	DEBUG = 0x1, unprogrammed default
   978  300006                     	org	3145734
   979  300006  81                 	db	129
   980                           
   981                           ; Padding undefined space
   982  300007                     	org	3145735
   983  300007  FF                 	db	255
   984                           
   985                           ;Config register CONFIG5L @ 0x300008
   986                           ;	Code Protection Block 0
   987                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   988                           ;	Code Protection Block 1
   989                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   990                           ;	Code Protection Block 2
   991                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   992                           ;	Code Protection Block 3
   993                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   994  300008                     	org	3145736
   995  300008  0F                 	db	15
   996                           
   997                           ;Config register CONFIG5H @ 0x300009
   998                           ;	Boot Block Code Protection bit
   999                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1000                           ;	Data EEPROM Code Protection bit
  1001                           ;	CPD = OFF, Data EEPROM not code-protected
  1002  300009                     	org	3145737
  1003  300009  C0                 	db	192
  1004                           
  1005                           ;Config register CONFIG6L @ 0x30000A
  1006                           ;	Write Protection Block 0
  1007                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1008                           ;	Write Protection Block 1
  1009                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1010                           ;	Write Protection Block 2
  1011                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1012                           ;	Write Protection Block 3
  1013                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1014  30000A                     	org	3145738
  1015  30000A  0F                 	db	15
  1016                           
  1017                           ;Config register CONFIG6H @ 0x30000B
  1018                           ;	Configuration Register Write Protection bit
  1019                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1020                           ;	Boot Block Write Protection bit
  1021                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1022                           ;	Data EEPROM Write Protection bit
  1023                           ;	WRTD = OFF, Data EEPROM not write-protected
  1024  30000B                     	org	3145739
  1025  30000B  E0                 	db	224
  1026                           
  1027                           ;Config register CONFIG7L @ 0x30000C
  1028                           ;	Table Read Protection Block 0
  1029                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1030                           ;	Table Read Protection Block 1
  1031                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1032                           ;	Table Read Protection Block 2
  1033                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1034                           ;	Table Read Protection Block 3
  1035                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1036  30000C                     	org	3145740
  1037  30000C  0F                 	db	15
  1038                           
  1039                           ;Config register CONFIG7H @ 0x30000D
  1040                           ;	Boot Block Table Read Protection bit
  1041                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1042  30000D                     	org	3145741
  1043  30000D  40                 	db	64
  1044                           tosu	equ	0xFFF
  1045                           tosh	equ	0xFFE
  1046                           tosl	equ	0xFFD
  1047                           stkptr	equ	0xFFC
  1048                           pclatu	equ	0xFFB
  1049                           pclath	equ	0xFFA
  1050                           pcl	equ	0xFF9
  1051                           tblptru	equ	0xFF8
  1052                           tblptrh	equ	0xFF7
  1053                           tblptrl	equ	0xFF6
  1054                           tablat	equ	0xFF5
  1055                           prodh	equ	0xFF4
  1056                           prodl	equ	0xFF3
  1057                           indf0	equ	0xFEF
  1058                           postinc0	equ	0xFEE
  1059                           postdec0	equ	0xFED
  1060                           preinc0	equ	0xFEC
  1061                           plusw0	equ	0xFEB
  1062                           fsr0h	equ	0xFEA
  1063                           fsr0l	equ	0xFE9
  1064                           wreg	equ	0xFE8
  1065                           indf1	equ	0xFE7
  1066                           postinc1	equ	0xFE6
  1067                           postdec1	equ	0xFE5
  1068                           preinc1	equ	0xFE4
  1069                           plusw1	equ	0xFE3
  1070                           fsr1h	equ	0xFE2
  1071                           fsr1l	equ	0xFE1
  1072                           bsr	equ	0xFE0
  1073                           indf2	equ	0xFDF
  1074                           postinc2	equ	0xFDE
  1075                           postdec2	equ	0xFDD
  1076                           preinc2	equ	0xFDC
  1077                           plusw2	equ	0xFDB
  1078                           fsr2h	equ	0xFDA
  1079                           fsr2l	equ	0xFD9
  1080                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    LCD_printstring@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_LCD_pos
    _LCD_printstring->_LCD_printchar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     797
                                              7 COMRAM     3     3      0
                     _LCD_initialize
                            _LCD_pos
                    _LCD_printstring
 ---------------------------------------------------------------------------------
 (1) _LCD_printstring                                      2     0      2     196
                                              3 COMRAM     2     0      2
                      _LCD_printchar
 ---------------------------------------------------------------------------------
 (2) _LCD_printchar                                        3     3      0      75
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_pos                                              7     6      1     330
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _LCD_initialize                                       2     2      0     270
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_initialize
   _LCD_pos
   _LCD_printstring
     _LCD_printchar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      A       A       1       10.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BIGRAM             F37      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 07 01:38:27 2021

                      l50 110A                        l42 106E                        l54 1158  
                      l46 10BC                        l70 11EE                        l57 117C  
                      l82 12C8                        l75 1224                        l91 1322  
                      l85 12EC                        l78 1248                        u10 12C8  
                      u11 12C4                        u20 12EC                        u21 12E8  
                      u30 1044                        u31 1040                        u40 106E  
                      u41 106A                        u50 1092                        u51 108E  
                      u60 10BC                        u61 10B8                        u70 10E0  
                      u71 10DC                        u80 110A                        u81 1106  
                      u90 112E                        u91 112A                       l801 101E  
                     l811 102E                       l803 1020                       l813 1044  
                     l823 1054                       l815 1048                       l905 1162  
                     l841 1098                       l833 1078                       l825 1058  
                     l817 104A                       l809 102A                       l907 1166  
                     l851 10BE                       l835 107C                       l827 1070  
                     l771 12A2                       l861 10E0                       l837 1092  
                     l781 12AE                       l773 12A4                       l871 10F0  
                     l863 10E4                       l847 10A2                       l839 1096  
                     l791 12D2                       l783 12B2                       l775 12A6  
                     l767 129E                       l881 1114                       l873 10F4  
                     l865 10E6                       l857 10C6                       l849 10A6  
                     l793 12D6                       l785 12CA                       l769 129E  
                     l883 1118                       l875 110C                       l859 10CA  
                     l795 1012                       l885 112E                       l797 1016  
                     l895 113E                       l887 1132                       l799 1018  
                     l897 1142                       l889 1134                       l899 115A  
                     u100 1158                       u101 1154                       u110 117C  
                     u111 1178                       u210 1198                       u211 1194  
                     u220 11B2                       u221 11AE                       u230 11CC  
                     u231 11C8                       u240 11E6                       u241 11E2  
                     u250 1224                       u251 1220                       u260 1248  
                     u261 1244                       u270 1322                       u271 131E  
                     u287 1286                       wreg 000FE8          LCD_printstring@s 0004  
         __end_of_LCD_pos 124A                      l1001 1180                      l1011 11BA  
                    l1003 1188                      l1021 11F8                      l1013 11CC  
                    l1005 1198                      l1031 120A                      l1023 11FE  
                    l1015 11D4                      l1007 11A0                      l1041 122E  
                    l1033 120E                      l1025 1200                      l1017 11E6  
                    l1009 11B2                      l1043 1232                      l1035 1226  
                    l1019 11EE                      l1051 1306                      l1045 12EE  
                    l1061 1264                      l1053 124A                      l1047 12F2  
                    l1063 126E                      l1055 125C                      l1049 1302  
                    l1065 127A                      l1057 125E                      l1067 127C  
                    l1059 1260                      STR_1 1001                      _main 124A  
                    start 0000              ___param_bank 000000    __size_of_LCD_printchar 0052  
 __size_of_LCD_initialize 016C                     ?_main 0001                     _PORTD 000F83  
                   _TRISD 000F95                     tablat 000FF5                     status 000FD8  
         __initialization 1324              __end_of_main 129C                    ??_main 0008  
           __activetblptr 000001                 ??_LCD_pos 0002             _LCD_printchar 129C  
                  _ANSELA 000F38                    _ANSELB 000F39                    _ANSELC 000F3A  
                  _ANSELD 000F3B           LCD_initialize@i 0001              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
          ?_LCD_printchar 0001            LCD_printchar@i 0002                __accesstop 0060  
 __end_of__initialization 1324             ___rparam_used 000001            __pcstackCOMRAM 0001  
          _LCD_initialize 1012              LCD_pos@linha 0005  __size_of_LCD_printstring 0036  
  __end_of_LCD_initialize 117E                   _LCD_pos 117E           ??_LCD_printchar 0001  
                 __Hparam 0000                   __Lparam 0000           ?_LCD_initialize 0001  
            __psmallconst 1000                   __pcinit 1324                   __ramtop 1000  
                 __ptext0 124A                   __ptext1 12EE                   __ptext2 129C  
                 __ptext3 117E                   __ptext4 1012      end_of_initialization 1324  
  LCD_printchar@character 0001         ??_LCD_printstring 0006                 _PORTCbits 000F82  
               _TRISCbits 000F94       start_initialization 1324                LCD_pos@cte 0004  
              LCD_pos@pos 0003             LCD_pos@coluna 0001                  ?_LCD_pos 0001  
                LCD_pos@i 0006          ??_LCD_initialize 0001               __smallconst 1000  
   __end_of_LCD_printchar 12EE           _LCD_printstring 12EE          __size_of_LCD_pos 00CC  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 1000  
 __end_of_LCD_printstring 1324             __size_of_main 0052          ?_LCD_printstring 0004  
