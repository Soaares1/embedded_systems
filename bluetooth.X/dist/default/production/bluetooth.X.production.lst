

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 07 02:31:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 05/05/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F46K22 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    67  0000                     
    68 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    69  0000                     
    70 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    71  0000                     
    72                           	psect	nvCOMRAM
    73  00001C                     __pnvCOMRAM:
    74                           	callstack 0
    75  00001C                     _EUSART1_ErrorHandler:
    76                           	callstack 0
    77  00001C                     	ds	2
    78  00001E                     _EUSART1_OverrunErrorHandler:
    79                           	callstack 0
    80  00001E                     	ds	2
    81  000020                     _EUSART1_FramingErrorHandler:
    82                           	callstack 0
    83  000020                     	ds	2
    84  0000                     _ANSELD	set	3899
    85  0000                     _ANSELC	set	3898
    86  0000                     _ANSELB	set	3897
    87  0000                     _ANSELA	set	3896
    88  0000                     _TXREG1	set	4013
    89  0000                     _RCREG1	set	4014
    90  0000                     _RCSTA1bits	set	4011
    91  0000                     _TXSTA1bits	set	4012
    92  0000                     _SPBRGH1	set	4016
    93  0000                     _SPBRG1	set	4015
    94  0000                     _TXSTA1	set	4012
    95  0000                     _RCSTA1	set	4011
    96  0000                     _BAUDCON1	set	4024
    97  0000                     _PORTD	set	3971
    98  0000                     _TRISD	set	3989
    99  0000                     _PIE1bits	set	3997
   100  0000                     _INTCONbits	set	4082
   101  0000                     _RCONbits	set	4048
   102  0000                     _OSCTUNE	set	3995
   103  0000                     _OSCCON2	set	4050
   104  0000                     _OSCCON	set	4051
   105  0000                     _TRISCbits	set	3988
   106  0000                     _PORTCbits	set	3970
   107  0000                     _PIR1bits	set	3998
   108                           
   109                           	psect	smallconst
   110  001000                     __psmallconst:
   111                           	callstack 0
   112  001000  00                 	db	0
   113  001001  41                 	db	65	;'A'
   114  001002  54                 	db	84	;'T'
   115  001003  2B                 	db	43
   116  001004  55                 	db	85	;'U'
   117  001005  41                 	db	65	;'A'
   118  001006  52                 	db	82	;'R'
   119  001007  54                 	db	84	;'T'
   120  001008  3D                 	db	61	;'='
   121  001009  31                 	db	49	;'1'
   122  00100A  31                 	db	49	;'1'
   123  00100B  35                 	db	53	;'5'
   124  00100C  32                 	db	50	;'2'
   125  00100D  30                 	db	48	;'0'
   126  00100E  30                 	db	48	;'0'
   127  00100F  2C                 	db	44
   128  001010  30                 	db	48	;'0'
   129  001011  2C                 	db	44
   130  001012  30                 	db	48	;'0'
   131  001013  0D                 	db	13
   132  001014  0A                 	db	10
   133  001015  00                 	db	0
   134  001016  41                 	db	65	;'A'
   135  001017  54                 	db	84	;'T'
   136  001018  2B                 	db	43
   137  001019  4E                 	db	78	;'N'
   138  00101A  41                 	db	65	;'A'
   139  00101B  4D                 	db	77	;'M'
   140  00101C  45                 	db	69	;'E'
   141  00101D  3D                 	db	61	;'='
   142  00101E  48                 	db	72	;'H'
   143  00101F  43                 	db	67	;'C'
   144  001020  2D                 	db	45
   145  001021  30                 	db	48	;'0'
   146  001022  35                 	db	53	;'5'
   147  001023  0D                 	db	13
   148  001024  0A                 	db	10
   149  001025  00                 	db	0
   150  001026  41                 	db	65	;'A'
   151  001027  54                 	db	84	;'T'
   152  001028  2B                 	db	43
   153  001029  50                 	db	80	;'P'
   154  00102A  53                 	db	83	;'S'
   155  00102B  57                 	db	87	;'W'
   156  00102C  44                 	db	68	;'D'
   157  00102D  3D                 	db	61	;'='
   158  00102E  31                 	db	49	;'1'
   159  00102F  32                 	db	50	;'2'
   160  001030  33                 	db	51	;'3'
   161  001031  34                 	db	52	;'4'
   162  001032  0D                 	db	13
   163  001033  0A                 	db	10
   164  001034  00                 	db	0
   165  001035                     STR_4:
   166  001035  44                 	db	68	;'D'
   167  001036  65                 	db	101	;'e'
   168  001037  73                 	db	115	;'s'
   169  001038  6C                 	db	108	;'l'
   170  001039  69                 	db	105	;'i'
   171  00103A  67                 	db	103	;'g'
   172  00103B  61                 	db	97	;'a'
   173  00103C  64                 	db	100	;'d'
   174  00103D  6F                 	db	111	;'o'
   175  00103E  20                 	db	32
   176  00103F  21                 	db	33
   177  001040  0D                 	db	13
   178  001041  0A                 	db	10
   179  001042  00                 	db	0
   180  001043                     STR_3:
   181  001043  44                 	db	68	;'D'
   182  001044  65                 	db	101	;'e'
   183  001045  73                 	db	115	;'s'
   184  001046  6C                 	db	108	;'l'
   185  001047  69                 	db	105	;'i'
   186  001048  67                 	db	103	;'g'
   187  001049  61                 	db	97	;'a'
   188  00104A  64                 	db	100	;'d'
   189  00104B  6F                 	db	111	;'o'
   190  00104C  20                 	db	32
   191  00104D  21                 	db	33
   192  00104E  00                 	db	0
   193  00104F  41                 	db	65	;'A'
   194  001050  54                 	db	84	;'T'
   195  001051  2B                 	db	43
   196  001052  52                 	db	82	;'R'
   197  001053  45                 	db	69	;'E'
   198  001054  53                 	db	83	;'S'
   199  001055  45                 	db	69	;'E'
   200  001056  54                 	db	84	;'T'
   201  001057  0D                 	db	13
   202  001058  0A                 	db	10
   203  001059  00                 	db	0
   204  00105A                     STR_2:
   205  00105A  4C                 	db	76	;'L'
   206  00105B  69                 	db	105	;'i'
   207  00105C  67                 	db	103	;'g'
   208  00105D  61                 	db	97	;'a'
   209  00105E  64                 	db	100	;'d'
   210  00105F  6F                 	db	111	;'o'
   211  001060  20                 	db	32
   212  001061  21                 	db	33
   213  001062  0D                 	db	13
   214  001063  0A                 	db	10
   215  001064  00                 	db	0
   216  001065                     STR_1:
   217  001065  4C                 	db	76	;'L'
   218  001066  69                 	db	105	;'i'
   219  001067  67                 	db	103	;'g'
   220  001068  61                 	db	97	;'a'
   221  001069  64                 	db	100	;'d'
   222  00106A  6F                 	db	111	;'o'
   223  00106B  20                 	db	32
   224  00106C  21                 	db	33
   225  00106D  00                 	db	0
   226  00106E  41                 	db	65	;'A'
   227  00106F  54                 	db	84	;'T'
   228  001070  0D                 	db	13
   229  001071  0A                 	db	10
   230  001072  00                 	db	0
   231  001073  00                 	db	0	; dummy byte at the end
   232  0000                     
   233                           ; #config settings
   234                           
   235                           	psect	cinit
   236  00153C                     __pcinit:
   237                           	callstack 0
   238  00153C                     start_initialization:
   239                           	callstack 0
   240  00153C                     __initialization:
   241                           	callstack 0
   242                           
   243                           ; Clear objects allocated to COMRAM (7 bytes)
   244  00153C  EE00  F015         	lfsr	0,__pbssCOMRAM
   245  001540  0E07               	movlw	7
   246  001542                     clear_0:
   247  001542  6AEE               	clrf	postinc0,c
   248  001544  06E8               	decf	wreg,f,c
   249  001546  E1FD               	bnz	clear_0
   250  001548                     end_of_initialization:
   251                           	callstack 0
   252  001548                     __end_of__initialization:
   253                           	callstack 0
   254  001548  9022               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   255  00154A  9222               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   256  00154C  0100               	movlb	0
   257  00154E  EF0D  F00A         	goto	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMRAM
   260  000015                     __pbssCOMRAM:
   261                           	callstack 0
   262  000015                     _rcvdata:
   263                           	callstack 0
   264  000015                     	ds	5
   265  00001A                     _eusart1RxLastError:
   266                           	callstack 0
   267  00001A                     	ds	1
   268  00001B                     _k:
   269                           	callstack 0
   270  00001B                     	ds	1
   271                           
   272                           	psect	cstackCOMRAM
   273  000001                     __pcstackCOMRAM:
   274                           	callstack 0
   275  000001                     LCD_printchar@character:
   276                           	callstack 0
   277  000001                     EUSART1_Write@txData:
   278                           	callstack 0
   279  000001                     i2LCD_pos@coluna:
   280                           	callstack 0
   281  000001                     LCD_clear@i:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x0
   285  000001                     	ds	1
   286  000002                     ??i2_LCD_pos:
   287  000002                     LCD_printchar@i:
   288                           	callstack 0
   289  000002                     EUSART1_Write_Text@s:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x1
   293  000002                     	ds	1
   294  000003                     i2LCD_pos@pos:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x2
   298  000003                     	ds	1
   299  000004                     i2LCD_pos@cte:
   300                           	callstack 0
   301  000004                     LCD_printstring@s:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x3
   305  000004                     	ds	1
   306  000005                     i2LCD_pos@linha:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x4
   310  000005                     	ds	1
   311  000006                     i2LCD_pos@i:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x5
   315  000006                     	ds	2
   316  000008                     ??_interrupcao:
   317                           
   318                           ; 1 bytes @ 0x7
   319  000008                     	ds	5
   320  00000D                     interrupcao@data:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0xC
   324  00000D                     	ds	1
   325  00000E                     LCD_pos@coluna:
   326                           	callstack 0
   327  00000E                     LCD_initialize@i:
   328                           	callstack 0
   329  00000E                     EUSART1_SetFramingErrorHandler@interruptHandler:
   330                           	callstack 0
   331  00000E                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   332                           	callstack 0
   333  00000E                     EUSART1_SetErrorHandler@interruptHandler:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0xD
   337  00000E                     	ds	1
   338  00000F                     ??_LCD_pos:
   339                           
   340                           ; 1 bytes @ 0xE
   341  00000F                     	ds	1
   342  000010                     LCD_pos@pos:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0xF
   346  000010                     	ds	1
   347  000011                     LCD_pos@cte:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x10
   351  000011                     	ds	1
   352  000012                     LCD_pos@linha:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x11
   356  000012                     	ds	1
   357  000013                     LCD_pos@i:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x12
   361  000013                     	ds	2
   362  000015                     
   363                           ; 1 bytes @ 0x14
   364 ;;
   365 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   366 ;;
   367 ;; *************** function _main *****************
   368 ;; Defined at:
   369 ;;		line 42 in file "main.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;  i               1    0        unsigned char 
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, status,2, status,0, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   387 ;;Total ram usage:        1 bytes
   388 ;; Hardware stack levels required when called:    5
   389 ;; This function calls:
   390 ;;		_EUSART1_Initialize
   391 ;;		_LCD_initialize
   392 ;;		_LCD_pos
   393 ;; This function is called by:
   394 ;;		Startup code after reset
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text0
   399  00141A                     __ptext0:
   400                           	callstack 0
   401  00141A                     _main:
   402                           	callstack 26
   403  00141A                     
   404                           ;main.c: 47:     ANSELA = 0x01;
   405  00141A  0E01               	movlw	1
   406  00141C  010F               	movlb	15	; () banked
   407  00141E  6F38               	movwf	56,b	;volatile
   408                           
   409                           ;main.c: 48:     ANSELB = 0x00;
   410  001420  0E00               	movlw	0
   411  001422  6F39               	movwf	57,b	;volatile
   412                           
   413                           ;main.c: 49:     ANSELC = 0x00;
   414  001424  0E00               	movlw	0
   415  001426  6F3A               	movwf	58,b	;volatile
   416                           
   417                           ;main.c: 50:     ANSELD = 0x00;
   418  001428  0E00               	movlw	0
   419  00142A  6F3B               	movwf	59,b	;volatile
   420  00142C                     
   421                           ; BSR set to: 15
   422                           ;main.c: 53:     TRISCbits.RC2 = 0;
   423  00142C  9494               	bcf	148,2,c	;volatile
   424  00142E                     
   425                           ; BSR set to: 15
   426                           ;main.c: 56:     TRISCbits.RC6 = 1;
   427  00142E  8C94               	bsf	148,6,c	;volatile
   428  001430                     
   429                           ; BSR set to: 15
   430                           ;main.c: 57:     TRISCbits.RC7 = 1;
   431  001430  8E94               	bsf	148,7,c	;volatile
   432  001432                     
   433                           ; BSR set to: 15
   434                           ;main.c: 59:     EUSART1_Initialize();
   435  001432  EC30  F00A         	call	_EUSART1_Initialize	;wreg free
   436  001436                     
   437                           ;main.c: 60:     LCD_initialize();
   438  001436  EC3A  F008         	call	_LCD_initialize	;wreg free
   439                           
   440                           ;main.c: 62:     OSCCON = 0x3C;
   441  00143A  0E3C               	movlw	60
   442  00143C  6ED3               	movwf	211,c	;volatile
   443                           
   444                           ;main.c: 63:     OSCCON2 = 0x07;
   445  00143E  0E07               	movlw	7
   446  001440  6ED2               	movwf	210,c	;volatile
   447                           
   448                           ;main.c: 64:     OSCTUNE = 0x00;
   449  001442  0E00               	movlw	0
   450  001444  6E9B               	movwf	155,c	;volatile
   451  001446                     
   452                           ;main.c: 66:     RCONbits.IPEN = 0;
   453  001446  9ED0               	bcf	208,7,c	;volatile
   454  001448                     
   455                           ;main.c: 67:     INTCONbits.GIE = 1;
   456  001448  8EF2               	bsf	242,7,c	;volatile
   457  00144A                     
   458                           ;main.c: 68:     INTCONbits.PEIE = 1;
   459  00144A  8CF2               	bsf	242,6,c	;volatile
   460  00144C                     
   461                           ;main.c: 69:     PIE1bits.RC1IE = 1;
   462  00144C  8A9D               	bsf	157,5,c	;volatile
   463  00144E                     
   464                           ;main.c: 71:     LCD_pos(1,1);
   465  00144E  0E01               	movlw	1
   466  001450  6E0E               	movwf	LCD_pos@coluna^0,c
   467  001452  0E01               	movlw	1
   468  001454  ECF0  F008         	call	_LCD_pos
   469  001458                     l61:
   470  001458  EF2C  F00A         	goto	l61
   471  00145C  EF6B  F000         	goto	start
   472  001460                     __end_of_main:
   473                           	callstack 0
   474                           
   475 ;; *************** function _LCD_pos *****************
   476 ;; Defined at:
   477 ;;		line 84 in file "gm_lcd.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;  linha           1    wreg     unsigned char 
   480 ;;  coluna          1   13[COMRAM] unsigned char 
   481 ;; Auto vars:     Size  Location     Type
   482 ;;  linha           1   17[COMRAM] unsigned char 
   483 ;;  i               2   18[COMRAM] unsigned int 
   484 ;;  cte             1   16[COMRAM] unsigned char 
   485 ;;  pos             1   15[COMRAM] unsigned char 
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   495 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;Total ram usage:        7 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; Hardware stack levels required when called:    3
   502 ;; This function calls:
   503 ;;		Nothing
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	text1
   510  0011E0                     __ptext1:
   511                           	callstack 0
   512  0011E0                     _LCD_pos:
   513                           	callstack 27
   514                           
   515                           ;incstack = 0
   516                           ;LCD_pos@linha stored from wreg
   517  0011E0  6E12               	movwf	LCD_pos@linha^0,c
   518  0011E2                     
   519                           ;gm_lcd.c: 86:     unsigned char cte, pos;;gm_lcd.c: 88:     cte = 0; pos = 0;
   520  0011E2  0E00               	movlw	0
   521  0011E4  6E11               	movwf	LCD_pos@cte^0,c
   522  0011E6  0E00               	movlw	0
   523  0011E8  6E10               	movwf	LCD_pos@pos^0,c
   524  0011EA                     
   525                           ;gm_lcd.c: 90:     if (linha == 1) cte = 0;
   526  0011EA  0412               	decf	LCD_pos@linha^0,w,c
   527  0011EC  A4D8               	btfss	status,2,c
   528  0011EE  EFFB  F008         	goto	u361
   529  0011F2  EFFD  F008         	goto	u360
   530  0011F6                     u361:
   531  0011F6  EF01  F009         	goto	l1314
   532  0011FA                     u360:
   533  0011FA  0E00               	movlw	0
   534  0011FC  6E11               	movwf	LCD_pos@cte^0,c
   535  0011FE  EF28  F009         	goto	l1326
   536  001202                     l1314:
   537  001202  0E02               	movlw	2
   538  001204  1812               	xorwf	LCD_pos@linha^0,w,c
   539  001206  A4D8               	btfss	status,2,c
   540  001208  EF08  F009         	goto	u371
   541  00120C  EF0A  F009         	goto	u370
   542  001210                     u371:
   543  001210  EF0E  F009         	goto	l1318
   544  001214                     u370:
   545  001214  0E40               	movlw	64
   546  001216  6E11               	movwf	LCD_pos@cte^0,c
   547  001218  EF28  F009         	goto	l1326
   548  00121C                     l1318:
   549  00121C  0E03               	movlw	3
   550  00121E  1812               	xorwf	LCD_pos@linha^0,w,c
   551  001220  A4D8               	btfss	status,2,c
   552  001222  EF15  F009         	goto	u381
   553  001226  EF17  F009         	goto	u380
   554  00122A                     u381:
   555  00122A  EF1B  F009         	goto	l1322
   556  00122E                     u380:
   557  00122E  0E14               	movlw	20
   558  001230  6E11               	movwf	LCD_pos@cte^0,c
   559  001232  EF28  F009         	goto	l1326
   560  001236                     l1322:
   561  001236  0E04               	movlw	4
   562  001238  1812               	xorwf	LCD_pos@linha^0,w,c
   563  00123A  A4D8               	btfss	status,2,c
   564  00123C  EF22  F009         	goto	u391
   565  001240  EF24  F009         	goto	u390
   566  001244                     u391:
   567  001244  EF28  F009         	goto	l106
   568  001248                     u390:
   569  001248  0E54               	movlw	84
   570  00124A  6E11               	movwf	LCD_pos@cte^0,c
   571  00124C  EF28  F009         	goto	l1326
   572  001250                     l106:
   573  001250                     l1326:
   574                           
   575                           ;gm_lcd.c: 95:     pos = cte + coluna - 1;
   576  001250  5011               	movf	LCD_pos@cte^0,w,c
   577  001252  240E               	addwf	LCD_pos@coluna^0,w,c
   578  001254  6E0F               	movwf	??_LCD_pos^0,c
   579  001256  040F               	decf	??_LCD_pos^0,w,c
   580  001258  6E10               	movwf	LCD_pos@pos^0,c
   581  00125A                     
   582                           ;gm_lcd.c: 97:     PORTD = pos | 0x80 ;
   583  00125A  5010               	movf	LCD_pos@pos^0,w,c
   584  00125C  0980               	iorlw	128
   585  00125E  6E83               	movwf	131,c	;volatile
   586  001260                     
   587                           ;gm_lcd.c: 98:     PORTCbits.RC1 = 0;
   588  001260  9282               	bcf	130,1,c	;volatile
   589  001262                     
   590                           ;gm_lcd.c: 99:     PORTCbits.RC0 = 1;
   591  001262  8082               	bsf	130,0,c	;volatile
   592                           
   593                           ;gm_lcd.c: 100:     for (i = 0; i < 100; i++);
   594  001264  0E00               	movlw	0
   595  001266  6E14               	movwf	(LCD_pos@i+1)^0,c
   596  001268  0E00               	movlw	0
   597  00126A  6E13               	movwf	LCD_pos@i^0,c
   598  00126C                     l1338:
   599  00126C  4A13               	infsnz	LCD_pos@i^0,f,c
   600  00126E  2A14               	incf	(LCD_pos@i+1)^0,f,c
   601  001270  5014               	movf	(LCD_pos@i+1)^0,w,c
   602  001272  E109               	bnz	u400
   603  001274  0E64               	movlw	100
   604  001276  5C13               	subwf	LCD_pos@i^0,w,c
   605  001278  A0D8               	btfss	status,0,c
   606  00127A  EF41  F009         	goto	u401
   607  00127E  EF43  F009         	goto	u400
   608  001282                     u401:
   609  001282  EF36  F009         	goto	l1338
   610  001286                     u400:
   611  001286                     
   612                           ;gm_lcd.c: 101:     PORTCbits.RC0 = 0;
   613  001286  9082               	bcf	130,0,c	;volatile
   614  001288                     
   615                           ;gm_lcd.c: 102:     for (i = 0; i < 200; i++);
   616  001288  0E00               	movlw	0
   617  00128A  6E14               	movwf	(LCD_pos@i+1)^0,c
   618  00128C  0E00               	movlw	0
   619  00128E  6E13               	movwf	LCD_pos@i^0,c
   620  001290                     l1348:
   621  001290  4A13               	infsnz	LCD_pos@i^0,f,c
   622  001292  2A14               	incf	(LCD_pos@i+1)^0,f,c
   623  001294  5014               	movf	(LCD_pos@i+1)^0,w,c
   624  001296  E109               	bnz	u410
   625  001298  0EC8               	movlw	200
   626  00129A  5C13               	subwf	LCD_pos@i^0,w,c
   627  00129C  A0D8               	btfss	status,0,c
   628  00129E  EF53  F009         	goto	u411
   629  0012A2  EF55  F009         	goto	u410
   630  0012A6                     u411:
   631  0012A6  EF48  F009         	goto	l1348
   632  0012AA                     u410:
   633  0012AA  0012               	return		;funcret
   634  0012AC                     __end_of_LCD_pos:
   635                           	callstack 0
   636                           
   637 ;; *************** function _LCD_initialize *****************
   638 ;; Defined at:
   639 ;;		line 26 in file "gm_lcd.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  i               2   13[COMRAM] unsigned int 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;Total ram usage:        2 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    3
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text2
   668  001074                     __ptext2:
   669                           	callstack 0
   670  001074                     _LCD_initialize:
   671                           	callstack 27
   672  001074                     
   673                           ;gm_lcd.c: 30:     TRISD = 0x00;
   674  001074  0E00               	movlw	0
   675  001076  6E95               	movwf	149,c	;volatile
   676  001078                     
   677                           ;gm_lcd.c: 31:     TRISCbits.RC0 = 0;
   678  001078  9094               	bcf	148,0,c	;volatile
   679  00107A                     
   680                           ;gm_lcd.c: 32:     TRISCbits.RC1 = 0;
   681  00107A  9294               	bcf	148,1,c	;volatile
   682                           
   683                           ;gm_lcd.c: 35:     PORTD = 0x00;
   684  00107C  0E00               	movlw	0
   685  00107E  6E83               	movwf	131,c	;volatile
   686  001080                     
   687                           ;gm_lcd.c: 36:     PORTCbits.RC1 = 0;
   688  001080  9282               	bcf	130,1,c	;volatile
   689  001082                     
   690                           ;gm_lcd.c: 37:     PORTCbits.RC0 = 0;
   691  001082  9082               	bcf	130,0,c	;volatile
   692                           
   693                           ;gm_lcd.c: 38:     for (i = 0; i < 100; i++);
   694  001084  0E00               	movlw	0
   695  001086  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   696  001088  0E00               	movlw	0
   697  00108A  6E0E               	movwf	LCD_initialize@i^0,c
   698  00108C                     l1066:
   699  00108C  4A0E               	infsnz	LCD_initialize@i^0,f,c
   700  00108E  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   701  001090  500F               	movf	(LCD_initialize@i+1)^0,w,c
   702  001092  E109               	bnz	u160
   703  001094  0E64               	movlw	100
   704  001096  5C0E               	subwf	LCD_initialize@i^0,w,c
   705  001098  A0D8               	btfss	status,0,c
   706  00109A  EF51  F008         	goto	u161
   707  00109E  EF53  F008         	goto	u160
   708  0010A2                     u161:
   709  0010A2  EF46  F008         	goto	l1066
   710  0010A6                     u160:
   711  0010A6                     
   712                           ;gm_lcd.c: 41:     PORTD = 0x01;
   713  0010A6  0E01               	movlw	1
   714  0010A8  6E83               	movwf	131,c	;volatile
   715  0010AA                     
   716                           ;gm_lcd.c: 42:     PORTCbits.RC1 = 0;
   717  0010AA  9282               	bcf	130,1,c	;volatile
   718  0010AC                     
   719                           ;gm_lcd.c: 43:     PORTCbits.RC0 = 1;
   720  0010AC  8082               	bsf	130,0,c	;volatile
   721                           
   722                           ;gm_lcd.c: 44:     for (i = 0; i < 100; i++);
   723  0010AE  0E00               	movlw	0
   724  0010B0  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   725  0010B2  0E00               	movlw	0
   726  0010B4  6E0E               	movwf	LCD_initialize@i^0,c
   727  0010B6                     l1080:
   728  0010B6  4A0E               	infsnz	LCD_initialize@i^0,f,c
   729  0010B8  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   730  0010BA  500F               	movf	(LCD_initialize@i+1)^0,w,c
   731  0010BC  E109               	bnz	u170
   732  0010BE  0E64               	movlw	100
   733  0010C0  5C0E               	subwf	LCD_initialize@i^0,w,c
   734  0010C2  A0D8               	btfss	status,0,c
   735  0010C4  EF66  F008         	goto	u171
   736  0010C8  EF68  F008         	goto	u170
   737  0010CC                     u171:
   738  0010CC  EF5B  F008         	goto	l1080
   739  0010D0                     u170:
   740  0010D0                     
   741                           ;gm_lcd.c: 45:     PORTCbits.RC0 = 0;
   742  0010D0  9082               	bcf	130,0,c	;volatile
   743  0010D2                     
   744                           ;gm_lcd.c: 46:     for (i = 0; i < 10000; i++);
   745  0010D2  0E00               	movlw	0
   746  0010D4  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   747  0010D6  0E00               	movlw	0
   748  0010D8  6E0E               	movwf	LCD_initialize@i^0,c
   749  0010DA                     l1090:
   750  0010DA  4A0E               	infsnz	LCD_initialize@i^0,f,c
   751  0010DC  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   752  0010DE  0E10               	movlw	16
   753  0010E0  5C0E               	subwf	LCD_initialize@i^0,w,c
   754  0010E2  0E27               	movlw	39
   755  0010E4  580F               	subwfb	(LCD_initialize@i+1)^0,w,c
   756  0010E6  A0D8               	btfss	status,0,c
   757  0010E8  EF78  F008         	goto	u181
   758  0010EC  EF7A  F008         	goto	u180
   759  0010F0                     u181:
   760  0010F0  EF6D  F008         	goto	l1090
   761  0010F4                     u180:
   762  0010F4                     
   763                           ;gm_lcd.c: 49:     PORTD = 0x38;
   764  0010F4  0E38               	movlw	56
   765  0010F6  6E83               	movwf	131,c	;volatile
   766  0010F8                     
   767                           ;gm_lcd.c: 50:     PORTCbits.RC1 = 0;
   768  0010F8  9282               	bcf	130,1,c	;volatile
   769  0010FA                     
   770                           ;gm_lcd.c: 51:     PORTCbits.RC0 = 1;
   771  0010FA  8082               	bsf	130,0,c	;volatile
   772                           
   773                           ;gm_lcd.c: 52:     for (i = 0; i < 100; i++);
   774  0010FC  0E00               	movlw	0
   775  0010FE  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   776  001100  0E00               	movlw	0
   777  001102  6E0E               	movwf	LCD_initialize@i^0,c
   778  001104                     l1104:
   779  001104  4A0E               	infsnz	LCD_initialize@i^0,f,c
   780  001106  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   781  001108  500F               	movf	(LCD_initialize@i+1)^0,w,c
   782  00110A  E109               	bnz	u190
   783  00110C  0E64               	movlw	100
   784  00110E  5C0E               	subwf	LCD_initialize@i^0,w,c
   785  001110  A0D8               	btfss	status,0,c
   786  001112  EF8D  F008         	goto	u191
   787  001116  EF8F  F008         	goto	u190
   788  00111A                     u191:
   789  00111A  EF82  F008         	goto	l1104
   790  00111E                     u190:
   791  00111E                     
   792                           ;gm_lcd.c: 53:     PORTCbits.RC0 = 0;
   793  00111E  9082               	bcf	130,0,c	;volatile
   794  001120                     
   795                           ;gm_lcd.c: 54:     for (i = 0; i < 200; i++);
   796  001120  0E00               	movlw	0
   797  001122  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   798  001124  0E00               	movlw	0
   799  001126  6E0E               	movwf	LCD_initialize@i^0,c
   800  001128                     l1114:
   801  001128  4A0E               	infsnz	LCD_initialize@i^0,f,c
   802  00112A  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   803  00112C  500F               	movf	(LCD_initialize@i+1)^0,w,c
   804  00112E  E109               	bnz	u200
   805  001130  0EC8               	movlw	200
   806  001132  5C0E               	subwf	LCD_initialize@i^0,w,c
   807  001134  A0D8               	btfss	status,0,c
   808  001136  EF9F  F008         	goto	u201
   809  00113A  EFA1  F008         	goto	u200
   810  00113E                     u201:
   811  00113E  EF94  F008         	goto	l1114
   812  001142                     u200:
   813  001142                     
   814                           ;gm_lcd.c: 57:     PORTD = 0x0E;
   815  001142  0E0E               	movlw	14
   816  001144  6E83               	movwf	131,c	;volatile
   817  001146                     
   818                           ;gm_lcd.c: 58:     PORTCbits.RC1 = 0;
   819  001146  9282               	bcf	130,1,c	;volatile
   820  001148                     
   821                           ;gm_lcd.c: 59:     PORTCbits.RC0 = 1;
   822  001148  8082               	bsf	130,0,c	;volatile
   823                           
   824                           ;gm_lcd.c: 60:     for (i = 0; i < 100; i++);
   825  00114A  0E00               	movlw	0
   826  00114C  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   827  00114E  0E00               	movlw	0
   828  001150  6E0E               	movwf	LCD_initialize@i^0,c
   829  001152                     l1128:
   830  001152  4A0E               	infsnz	LCD_initialize@i^0,f,c
   831  001154  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   832  001156  500F               	movf	(LCD_initialize@i+1)^0,w,c
   833  001158  E109               	bnz	u210
   834  00115A  0E64               	movlw	100
   835  00115C  5C0E               	subwf	LCD_initialize@i^0,w,c
   836  00115E  A0D8               	btfss	status,0,c
   837  001160  EFB4  F008         	goto	u211
   838  001164  EFB6  F008         	goto	u210
   839  001168                     u211:
   840  001168  EFA9  F008         	goto	l1128
   841  00116C                     u210:
   842  00116C                     
   843                           ;gm_lcd.c: 61:     PORTCbits.RC0 = 0;
   844  00116C  9082               	bcf	130,0,c	;volatile
   845  00116E                     
   846                           ;gm_lcd.c: 62:     for (i = 0; i < 200; i++);
   847  00116E  0E00               	movlw	0
   848  001170  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   849  001172  0E00               	movlw	0
   850  001174  6E0E               	movwf	LCD_initialize@i^0,c
   851  001176                     l1138:
   852  001176  4A0E               	infsnz	LCD_initialize@i^0,f,c
   853  001178  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   854  00117A  500F               	movf	(LCD_initialize@i+1)^0,w,c
   855  00117C  E109               	bnz	u220
   856  00117E  0EC8               	movlw	200
   857  001180  5C0E               	subwf	LCD_initialize@i^0,w,c
   858  001182  A0D8               	btfss	status,0,c
   859  001184  EFC6  F008         	goto	u221
   860  001188  EFC8  F008         	goto	u220
   861  00118C                     u221:
   862  00118C  EFBB  F008         	goto	l1138
   863  001190                     u220:
   864  001190                     
   865                           ;gm_lcd.c: 65:     PORTD = 0x06;
   866  001190  0E06               	movlw	6
   867  001192  6E83               	movwf	131,c	;volatile
   868  001194                     
   869                           ;gm_lcd.c: 66:     PORTCbits.RC1 = 0;
   870  001194  9282               	bcf	130,1,c	;volatile
   871  001196                     
   872                           ;gm_lcd.c: 67:     PORTCbits.RC0 = 1;
   873  001196  8082               	bsf	130,0,c	;volatile
   874                           
   875                           ;gm_lcd.c: 68:     for (i = 0; i < 100; i++);
   876  001198  0E00               	movlw	0
   877  00119A  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   878  00119C  0E00               	movlw	0
   879  00119E  6E0E               	movwf	LCD_initialize@i^0,c
   880  0011A0                     l1152:
   881  0011A0  4A0E               	infsnz	LCD_initialize@i^0,f,c
   882  0011A2  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   883  0011A4  500F               	movf	(LCD_initialize@i+1)^0,w,c
   884  0011A6  E109               	bnz	u230
   885  0011A8  0E64               	movlw	100
   886  0011AA  5C0E               	subwf	LCD_initialize@i^0,w,c
   887  0011AC  A0D8               	btfss	status,0,c
   888  0011AE  EFDB  F008         	goto	u231
   889  0011B2  EFDD  F008         	goto	u230
   890  0011B6                     u231:
   891  0011B6  EFD0  F008         	goto	l1152
   892  0011BA                     u230:
   893  0011BA                     
   894                           ;gm_lcd.c: 69:     PORTCbits.RC0 = 0;
   895  0011BA  9082               	bcf	130,0,c	;volatile
   896  0011BC                     
   897                           ;gm_lcd.c: 70:     for (i = 0; i < 200; i++);
   898  0011BC  0E00               	movlw	0
   899  0011BE  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   900  0011C0  0E00               	movlw	0
   901  0011C2  6E0E               	movwf	LCD_initialize@i^0,c
   902  0011C4                     l1162:
   903  0011C4  4A0E               	infsnz	LCD_initialize@i^0,f,c
   904  0011C6  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   905  0011C8  500F               	movf	(LCD_initialize@i+1)^0,w,c
   906  0011CA  E109               	bnz	u240
   907  0011CC  0EC8               	movlw	200
   908  0011CE  5C0E               	subwf	LCD_initialize@i^0,w,c
   909  0011D0  A0D8               	btfss	status,0,c
   910  0011D2  EFED  F008         	goto	u241
   911  0011D6  EFEF  F008         	goto	u240
   912  0011DA                     u241:
   913  0011DA  EFE2  F008         	goto	l1162
   914  0011DE                     u240:
   915  0011DE  0012               	return		;funcret
   916  0011E0                     __end_of_LCD_initialize:
   917                           	callstack 0
   918                           
   919 ;; *************** function _EUSART1_Initialize *****************
   920 ;; Defined at:
   921 ;;		line 17 in file "eusart1.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;Total ram usage:        0 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    4
   942 ;; This function calls:
   943 ;;		_EUSART1_SetErrorHandler
   944 ;;		_EUSART1_SetFramingErrorHandler
   945 ;;		_EUSART1_SetOverrunErrorHandler
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text3
   952  001460                     __ptext3:
   953                           	callstack 0
   954  001460                     _EUSART1_Initialize:
   955                           	callstack 26
   956  001460                     
   957                           ;eusart1.c: 22:     BAUDCON1 = 0x08;
   958  001460  0E08               	movlw	8
   959  001462  6EB8               	movwf	184,c	;volatile
   960                           
   961                           ;eusart1.c: 25:     RCSTA1 = 0x90;
   962  001464  0E90               	movlw	144
   963  001466  6EAB               	movwf	171,c	;volatile
   964                           
   965                           ;eusart1.c: 28:     TXSTA1 = 0x24;
   966  001468  0E24               	movlw	36
   967  00146A  6EAC               	movwf	172,c	;volatile
   968                           
   969                           ;eusart1.c: 31:     SPBRG1 = 0x2A;
   970  00146C  0E2A               	movlw	42
   971  00146E  6EAF               	movwf	175,c	;volatile
   972                           
   973                           ;eusart1.c: 34:     SPBRGH1 = 0x00;
   974  001470  0E00               	movlw	0
   975  001472  6EB0               	movwf	176,c	;volatile
   976  001474                     
   977                           ;eusart1.c: 37:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
   978  001474  0E00               	movlw	0
   979  001476  6E0E               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
   980  001478  0E00               	movlw	0
   981  00147A  6E0F               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
   982  00147C  ECB9  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
   983  001480                     
   984                           ;eusart1.c: 38:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
   985  001480  0E00               	movlw	0
   986  001482  6E0E               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
   987  001484  0E00               	movlw	0
   988  001486  6E0F               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
   989  001488  ECB4  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
   990  00148C                     
   991                           ;eusart1.c: 39:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
   992  00148C  0E00               	movlw	0
   993  00148E  6E0E               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
   994  001490  0E00               	movlw	0
   995  001492  6E0F               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
   996  001494  ECBE  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
   997  001498                     
   998                           ;eusart1.c: 41:     eusart1RxLastError.status = 0;
   999  001498  0E00               	movlw	0
  1000  00149A  6E1A               	movwf	_eusart1RxLastError^0,c	;volatile
  1001  00149C  0012               	return		;funcret
  1002  00149E                     __end_of_EUSART1_Initialize:
  1003                           	callstack 0
  1004                           
  1005 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1006 ;; Defined at:
  1007 ;;		line 116 in file "eusart1.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  interruptHan    2   13[COMRAM] PTR FTN()void 
  1010 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;Total ram usage:        2 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; Hardware stack levels required when called:    3
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		_EUSART1_Initialize
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text4
  1037  001568                     __ptext4:
  1038                           	callstack 0
  1039  001568                     _EUSART1_SetOverrunErrorHandler:
  1040                           	callstack 26
  1041  001568                     
  1042                           ;eusart1.c: 117:     EUSART1_OverrunErrorHandler = interruptHandler;
  1043  001568  C00E  F01E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1044  00156C  C00F  F01F         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1045  001570  0012               	return		;funcret
  1046  001572                     __end_of_EUSART1_SetOverrunErrorHandler:
  1047                           	callstack 0
  1048                           
  1049 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1050 ;; Defined at:
  1051 ;;		line 112 in file "eusart1.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  interruptHan    2   13[COMRAM] PTR FTN()void 
  1054 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;Total ram usage:        2 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    3
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_EUSART1_Initialize
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text5
  1081  001572                     __ptext5:
  1082                           	callstack 0
  1083  001572                     _EUSART1_SetFramingErrorHandler:
  1084                           	callstack 26
  1085  001572                     
  1086                           ;eusart1.c: 113:     EUSART1_FramingErrorHandler = interruptHandler;
  1087  001572  C00E  F020         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1088  001576  C00F  F021         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1089  00157A  0012               	return		;funcret
  1090  00157C                     __end_of_EUSART1_SetFramingErrorHandler:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _EUSART1_SetErrorHandler *****************
  1094 ;; Defined at:
  1095 ;;		line 120 in file "eusart1.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  interruptHan    2   13[COMRAM] PTR FTN()void 
  1098 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;Total ram usage:        2 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    3
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_EUSART1_Initialize
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text6
  1125  00157C                     __ptext6:
  1126                           	callstack 0
  1127  00157C                     _EUSART1_SetErrorHandler:
  1128                           	callstack 26
  1129  00157C                     
  1130                           ;eusart1.c: 121:     EUSART1_ErrorHandler = interruptHandler;
  1131  00157C  C00E  F01C         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1132  001580  C00F  F01D         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1133  001584  0012               	return		;funcret
  1134  001586                     __end_of_EUSART1_SetErrorHandler:
  1135                           	callstack 0
  1136                           
  1137 ;; *************** function _interrupcao *****************
  1138 ;; Defined at:
  1139 ;;		line 14 in file "main.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  data            1   12[COMRAM] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;Total ram usage:        6 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    2
  1160 ;; This function calls:
  1161 ;;		_EUSART1_Read
  1162 ;;		_EUSART1_Write_Text
  1163 ;;		_LCD_clear
  1164 ;;		_LCD_printchar
  1165 ;;		_LCD_printstring
  1166 ;;		i2_LCD_pos
  1167 ;; This function is called by:
  1168 ;;		Interrupt level 2
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	intcode
  1173  000008                     __pintcode:
  1174                           	callstack 0
  1175  000008                     _interrupcao:
  1176                           	callstack 26
  1177                           
  1178                           ;incstack = 0
  1179  000008  8222               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1180  00000A  CFF6 F009          	movff	tblptrl,??_interrupcao+1
  1181  00000E  CFF7 F00A          	movff	tblptrh,??_interrupcao+2
  1182  000012  CFF8 F00B          	movff	tblptru,??_interrupcao+3
  1183  000016  CFF5 F00C          	movff	tablat,??_interrupcao+4
  1184  00001A                     
  1185                           ;main.c: 16:     uint8_t data;;main.c: 18:     if (PIR1bits.RC1IF){
  1186  00001A  AA9E               	btfss	158,5,c	;volatile
  1187  00001C  EF12  F000         	goto	i2u50_41
  1188  000020  EF14  F000         	goto	i2u50_40
  1189  000024                     i2u50_41:
  1190  000024  EF61  F000         	goto	i2l56
  1191  000028                     i2u50_40:
  1192  000028                     
  1193                           ;main.c: 20:         data = EUSART1_Read();
  1194  000028  EC89  F00A         	call	_EUSART1_Read	;wreg free
  1195  00002C  6E0D               	movwf	interrupcao@data^0,c
  1196  00002E                     
  1197                           ;main.c: 21:         PORTCbits.RC2 ^= 1;
  1198  00002E  7482               	btg	130,2,c	;volatile
  1199  000030                     
  1200                           ;main.c: 22:         LCD_printchar(data);
  1201  000030  500D               	movf	interrupcao@data^0,w,c
  1202  000032  ECBC  F009         	call	_LCD_printchar
  1203  000036                     
  1204                           ;main.c: 24:         if (data == 'L'){
  1205  000036  0E4C               	movlw	76
  1206  000038  180D               	xorwf	interrupcao@data^0,w,c
  1207  00003A  A4D8               	btfss	status,2,c
  1208  00003C  EF22  F000         	goto	i2u51_41
  1209  000040  EF24  F000         	goto	i2u51_40
  1210  000044                     i2u51_41:
  1211  000044  EF3E  F000         	goto	i2l1442
  1212  000048                     i2u51_40:
  1213  000048                     
  1214                           ;main.c: 25:             LCD_clear();
  1215  000048  ECE5  F009         	call	_LCD_clear	;wreg free
  1216  00004C                     
  1217                           ;main.c: 26:             _delay((unsigned long)((2)*(20000000/4000.0)));
  1218  00004C  0E0D               	movlw	13
  1219  00004E  6E08               	movwf	??_interrupcao^0,c
  1220  000050  0EFC               	movlw	252
  1221  000052                     i2u53_47:
  1222  000052  2EE8               	decfsz	wreg,f,c
  1223  000054  D7FE               	bra	i2u53_47
  1224  000056  2E08               	decfsz	??_interrupcao^0,f,c
  1225  000058  D7FC               	bra	i2u53_47
  1226  00005A                     
  1227                           ;main.c: 27:             LCD_pos(3,1);
  1228  00005A  0E01               	movlw	1
  1229  00005C  6E01               	movwf	i2LCD_pos@coluna^0,c
  1230  00005E  0E03               	movlw	3
  1231  000060  EC56  F009         	call	i2_LCD_pos
  1232  000064                     
  1233                           ;main.c: 28:             LCD_printstring("Ligado !");
  1234  000064  0E65               	movlw	low STR_1
  1235  000066  6E04               	movwf	LCD_printstring@s^0,c
  1236  000068  0E10               	movlw	high STR_1
  1237  00006A  6E05               	movwf	(LCD_printstring@s+1)^0,c
  1238  00006C  EC4F  F00A         	call	_LCD_printstring	;wreg free
  1239  000070                     
  1240                           ;main.c: 29:             EUSART1_Write_Text("Ligado !\r\n");
  1241  000070  0E5A               	movlw	low STR_2
  1242  000072  6E02               	movwf	EUSART1_Write_Text@s^0,c
  1243  000074  0E10               	movlw	high STR_2
  1244  000076  6E03               	movwf	(EUSART1_Write_Text@s+1)^0,c
  1245  000078  EC6C  F00A         	call	_EUSART1_Write_Text	;wreg free
  1246  00007C                     i2l1442:
  1247                           
  1248                           ;main.c: 32:         if (data == 'D'){
  1249  00007C  0E44               	movlw	68
  1250  00007E  180D               	xorwf	interrupcao@data^0,w,c
  1251  000080  A4D8               	btfss	status,2,c
  1252  000082  EF45  F000         	goto	i2u52_41
  1253  000086  EF47  F000         	goto	i2u52_40
  1254  00008A                     i2u52_41:
  1255  00008A  EF61  F000         	goto	i2l56
  1256  00008E                     i2u52_40:
  1257  00008E                     
  1258                           ;main.c: 33:             LCD_clear();
  1259  00008E  ECE5  F009         	call	_LCD_clear	;wreg free
  1260  000092                     
  1261                           ;main.c: 34:             _delay((unsigned long)((2)*(20000000/4000.0)));
  1262  000092  0E0D               	movlw	13
  1263  000094  6E08               	movwf	??_interrupcao^0,c
  1264  000096  0EFC               	movlw	252
  1265  000098                     i2u54_47:
  1266  000098  2EE8               	decfsz	wreg,f,c
  1267  00009A  D7FE               	bra	i2u54_47
  1268  00009C  2E08               	decfsz	??_interrupcao^0,f,c
  1269  00009E  D7FC               	bra	i2u54_47
  1270  0000A0                     
  1271                           ;main.c: 35:             LCD_pos(3,1);
  1272  0000A0  0E01               	movlw	1
  1273  0000A2  6E01               	movwf	i2LCD_pos@coluna^0,c
  1274  0000A4  0E03               	movlw	3
  1275  0000A6  EC56  F009         	call	i2_LCD_pos
  1276  0000AA                     
  1277                           ;main.c: 36:             LCD_printstring("Desligado !");
  1278  0000AA  0E43               	movlw	low STR_3
  1279  0000AC  6E04               	movwf	LCD_printstring@s^0,c
  1280  0000AE  0E10               	movlw	high STR_3
  1281  0000B0  6E05               	movwf	(LCD_printstring@s+1)^0,c
  1282  0000B2  EC4F  F00A         	call	_LCD_printstring	;wreg free
  1283  0000B6                     
  1284                           ;main.c: 37:             EUSART1_Write_Text("Desligado !\r\n");
  1285  0000B6  0E35               	movlw	low STR_4
  1286  0000B8  6E02               	movwf	EUSART1_Write_Text@s^0,c
  1287  0000BA  0E10               	movlw	high STR_4
  1288  0000BC  6E03               	movwf	(EUSART1_Write_Text@s+1)^0,c
  1289  0000BE  EC6C  F00A         	call	_EUSART1_Write_Text	;wreg free
  1290  0000C2                     i2l56:
  1291  0000C2  C00C  FFF5         	movff	??_interrupcao+4,tablat
  1292  0000C6  C00B  FFF8         	movff	??_interrupcao+3,tblptru
  1293  0000CA  C00A  FFF7         	movff	??_interrupcao+2,tblptrh
  1294  0000CE  C009  FFF6         	movff	??_interrupcao+1,tblptrl
  1295  0000D2  9222               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1296  0000D4  0011               	retfie		f
  1297  0000D6                     __end_of_interrupcao:
  1298                           	callstack 0
  1299                           
  1300 ;; *************** function i2_LCD_pos *****************
  1301 ;; Defined at:
  1302 ;;		line 84 in file "gm_lcd.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  linha           1    wreg     unsigned char 
  1305 ;;  coluna          1    0[COMRAM] unsigned char 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  linha           1    4[COMRAM] unsigned char 
  1308 ;;  i               2    5[COMRAM] unsigned int 
  1309 ;;  cte             1    3[COMRAM] unsigned char 
  1310 ;;  pos             1    2[COMRAM] unsigned char 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1320 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;Total ram usage:        7 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_interrupcao
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text8
  1334  0012AC                     __ptext8:
  1335                           	callstack 0
  1336  0012AC                     i2_LCD_pos:
  1337                           	callstack 27
  1338                           
  1339                           ;incstack = 0
  1340                           ;i2LCD_pos@linha stored from wreg
  1341  0012AC  6E05               	movwf	i2LCD_pos@linha^0,c
  1342  0012AE                     
  1343                           ;gm_lcd.c: 86:     unsigned char cte, pos;;gm_lcd.c: 88:     cte = 0; pos = 0;
  1344  0012AE  0E00               	movlw	0
  1345  0012B0  6E04               	movwf	i2LCD_pos@cte^0,c
  1346  0012B2  0E00               	movlw	0
  1347  0012B4  6E03               	movwf	i2LCD_pos@pos^0,c
  1348  0012B6                     
  1349                           ;gm_lcd.c: 90:     if (linha == 1) cte = 0;
  1350  0012B6  0405               	decf	i2LCD_pos@linha^0,w,c
  1351  0012B8  A4D8               	btfss	status,2,c
  1352  0012BA  EF61  F009         	goto	i2u44_41
  1353  0012BE  EF63  F009         	goto	i2u44_40
  1354  0012C2                     i2u44_41:
  1355  0012C2  EF67  F009         	goto	i2l1384
  1356  0012C6                     i2u44_40:
  1357  0012C6  0E00               	movlw	0
  1358  0012C8  6E04               	movwf	i2LCD_pos@cte^0,c
  1359  0012CA  EF8E  F009         	goto	i2l1396
  1360  0012CE                     i2l1384:
  1361  0012CE  0E02               	movlw	2
  1362  0012D0  1805               	xorwf	i2LCD_pos@linha^0,w,c
  1363  0012D2  A4D8               	btfss	status,2,c
  1364  0012D4  EF6E  F009         	goto	i2u45_41
  1365  0012D8  EF70  F009         	goto	i2u45_40
  1366  0012DC                     i2u45_41:
  1367  0012DC  EF74  F009         	goto	i2l1388
  1368  0012E0                     i2u45_40:
  1369  0012E0  0E40               	movlw	64
  1370  0012E2  6E04               	movwf	i2LCD_pos@cte^0,c
  1371  0012E4  EF8E  F009         	goto	i2l1396
  1372  0012E8                     i2l1388:
  1373  0012E8  0E03               	movlw	3
  1374  0012EA  1805               	xorwf	i2LCD_pos@linha^0,w,c
  1375  0012EC  A4D8               	btfss	status,2,c
  1376  0012EE  EF7B  F009         	goto	i2u46_41
  1377  0012F2  EF7D  F009         	goto	i2u46_40
  1378  0012F6                     i2u46_41:
  1379  0012F6  EF81  F009         	goto	i2l1392
  1380  0012FA                     i2u46_40:
  1381  0012FA  0E14               	movlw	20
  1382  0012FC  6E04               	movwf	i2LCD_pos@cte^0,c
  1383  0012FE  EF8E  F009         	goto	i2l1396
  1384  001302                     i2l1392:
  1385  001302  0E04               	movlw	4
  1386  001304  1805               	xorwf	i2LCD_pos@linha^0,w,c
  1387  001306  A4D8               	btfss	status,2,c
  1388  001308  EF88  F009         	goto	i2u47_41
  1389  00130C  EF8A  F009         	goto	i2u47_40
  1390  001310                     i2u47_41:
  1391  001310  EF8E  F009         	goto	i2l106
  1392  001314                     i2u47_40:
  1393  001314  0E54               	movlw	84
  1394  001316  6E04               	movwf	i2LCD_pos@cte^0,c
  1395  001318  EF8E  F009         	goto	i2l1396
  1396  00131C                     i2l106:
  1397  00131C                     i2l1396:
  1398                           
  1399                           ;gm_lcd.c: 95:     pos = cte + coluna - 1;
  1400  00131C  5004               	movf	i2LCD_pos@cte^0,w,c
  1401  00131E  2401               	addwf	i2LCD_pos@coluna^0,w,c
  1402  001320  6E02               	movwf	??i2_LCD_pos^0,c
  1403  001322  0402               	decf	??i2_LCD_pos^0,w,c
  1404  001324  6E03               	movwf	i2LCD_pos@pos^0,c
  1405  001326                     
  1406                           ;gm_lcd.c: 97:     PORTD = pos | 0x80 ;
  1407  001326  5003               	movf	i2LCD_pos@pos^0,w,c
  1408  001328  0980               	iorlw	128
  1409  00132A  6E83               	movwf	131,c	;volatile
  1410  00132C                     
  1411                           ;gm_lcd.c: 98:     PORTCbits.RC1 = 0;
  1412  00132C  9282               	bcf	130,1,c	;volatile
  1413  00132E                     
  1414                           ;gm_lcd.c: 99:     PORTCbits.RC0 = 1;
  1415  00132E  8082               	bsf	130,0,c	;volatile
  1416                           
  1417                           ;gm_lcd.c: 100:     for (i = 0; i < 100; i++);
  1418  001330  0E00               	movlw	0
  1419  001332  6E07               	movwf	(i2LCD_pos@i+1)^0,c
  1420  001334  0E00               	movlw	0
  1421  001336  6E06               	movwf	i2LCD_pos@i^0,c
  1422  001338                     i2l1408:
  1423  001338  4A06               	infsnz	i2LCD_pos@i^0,f,c
  1424  00133A  2A07               	incf	(i2LCD_pos@i+1)^0,f,c
  1425  00133C  5007               	movf	(i2LCD_pos@i+1)^0,w,c
  1426  00133E  E109               	bnz	i2u48_40
  1427  001340  0E64               	movlw	100
  1428  001342  5C06               	subwf	i2LCD_pos@i^0,w,c
  1429  001344  A0D8               	btfss	status,0,c
  1430  001346  EFA7  F009         	goto	i2u48_41
  1431  00134A  EFA9  F009         	goto	i2u48_40
  1432  00134E                     i2u48_41:
  1433  00134E  EF9C  F009         	goto	i2l1408
  1434  001352                     i2u48_40:
  1435  001352                     
  1436                           ;gm_lcd.c: 101:     PORTCbits.RC0 = 0;
  1437  001352  9082               	bcf	130,0,c	;volatile
  1438  001354                     
  1439                           ;gm_lcd.c: 102:     for (i = 0; i < 200; i++);
  1440  001354  0E00               	movlw	0
  1441  001356  6E07               	movwf	(i2LCD_pos@i+1)^0,c
  1442  001358  0E00               	movlw	0
  1443  00135A  6E06               	movwf	i2LCD_pos@i^0,c
  1444  00135C                     i2l1418:
  1445  00135C  4A06               	infsnz	i2LCD_pos@i^0,f,c
  1446  00135E  2A07               	incf	(i2LCD_pos@i+1)^0,f,c
  1447  001360  5007               	movf	(i2LCD_pos@i+1)^0,w,c
  1448  001362  E109               	bnz	i2u49_40
  1449  001364  0EC8               	movlw	200
  1450  001366  5C06               	subwf	i2LCD_pos@i^0,w,c
  1451  001368  A0D8               	btfss	status,0,c
  1452  00136A  EFB9  F009         	goto	i2u49_41
  1453  00136E  EFBB  F009         	goto	i2u49_40
  1454  001372                     i2u49_41:
  1455  001372  EFAE  F009         	goto	i2l1418
  1456  001376                     i2u49_40:
  1457  001376  0012               	return		;funcret
  1458  001378                     __end_ofi2_LCD_pos:
  1459                           	callstack 0
  1460                           
  1461 ;; *************** function _LCD_printstring *****************
  1462 ;; Defined at:
  1463 ;;		line 124 in file "gm_lcd.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  s               2    3[COMRAM] PTR const unsigned char 
  1466 ;;		 -> STR_3(12), STR_1(9), 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;		None
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      void 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;Total ram usage:        2 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    1
  1485 ;; This function calls:
  1486 ;;		_LCD_printchar
  1487 ;; This function is called by:
  1488 ;;		_interrupcao
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text9
  1493  00149E                     __ptext9:
  1494                           	callstack 0
  1495  00149E                     _LCD_printstring:
  1496                           	callstack 26
  1497  00149E                     
  1498                           ;gm_lcd.c: 124:  void LCD_printstring(const char *s);gm_lcd.c: 125:  {;gm_lcd.c: 126:   
      +                             while(*s)
  1499  00149E  EF5C  F00A         	goto	i2l1358
  1500  0014A2                     i2l1354:
  1501                           
  1502                           ;gm_lcd.c: 127:      {;gm_lcd.c: 128:          LCD_printchar(*s);
  1503  0014A2  C004  FFF6         	movff	LCD_printstring@s,tblptrl
  1504  0014A6  C005  FFF7         	movff	LCD_printstring@s+1,tblptrh
  1505  0014AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1506  0014AA  6AF8               	clrf	tblptru,c
  1507  0014AC                     	endif
  1508  0014AC                     	if	0	;tblptru may be non-zero
  1509  0014AC                     	endif
  1510  0014AC  0008               	tblrd		*
  1511  0014AE  50F5               	movf	tablat,w,c
  1512  0014B0  ECBC  F009         	call	_LCD_printchar
  1513  0014B4                     
  1514                           ;gm_lcd.c: 129:          s++;
  1515  0014B4  4A04               	infsnz	LCD_printstring@s^0,f,c
  1516  0014B6  2A05               	incf	(LCD_printstring@s+1)^0,f,c
  1517  0014B8                     i2l1358:
  1518                           
  1519                           ;gm_lcd.c: 126:      while(*s)
  1520  0014B8  C004  FFF6         	movff	LCD_printstring@s,tblptrl
  1521  0014BC  C005  FFF7         	movff	LCD_printstring@s+1,tblptrh
  1522  0014C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1523  0014C0  6AF8               	clrf	tblptru,c
  1524  0014C2                     	endif
  1525  0014C2                     	if	0	;tblptru may be non-zero
  1526  0014C2                     	endif
  1527  0014C2  0008               	tblrd		*
  1528  0014C4  50F5               	movf	tablat,w,c
  1529  0014C6  0900               	iorlw	0
  1530  0014C8  A4D8               	btfss	status,2,c
  1531  0014CA  EF69  F00A         	goto	i2u42_41
  1532  0014CE  EF6B  F00A         	goto	i2u42_40
  1533  0014D2                     i2u42_41:
  1534  0014D2  EF51  F00A         	goto	i2l1354
  1535  0014D6                     i2u42_40:
  1536  0014D6  0012               	return		;funcret
  1537  0014D8                     __end_of_LCD_printstring:
  1538                           	callstack 0
  1539                           
  1540 ;; *************** function _LCD_printchar *****************
  1541 ;; Defined at:
  1542 ;;		line 105 in file "gm_lcd.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  character       1    wreg     unsigned char 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  character       1    0[COMRAM] unsigned char 
  1547 ;;  i               2    1[COMRAM] unsigned int 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;Total ram usage:        3 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_interrupcao
  1567 ;;		_LCD_printstring
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text10
  1572  001378                     __ptext10:
  1573                           	callstack 0
  1574  001378                     _LCD_printchar:
  1575                           	callstack 26
  1576                           
  1577                           ;incstack = 0
  1578                           ;LCD_printchar@character stored from wreg
  1579  001378  6E01               	movwf	LCD_printchar@character^0,c
  1580  00137A                     
  1581                           ;gm_lcd.c: 108:     PORTD = character;
  1582  00137A  C001  FF83         	movff	LCD_printchar@character,3971	;volatile
  1583  00137E                     
  1584                           ;gm_lcd.c: 109:     PORTCbits.RC1 = 1;
  1585  00137E  8282               	bsf	130,1,c	;volatile
  1586  001380                     
  1587                           ;gm_lcd.c: 110:     PORTCbits.RC0 = 1;
  1588  001380  8082               	bsf	130,0,c	;volatile
  1589  001382                     
  1590                           ;gm_lcd.c: 111:     for (i = 0; i < 100; i++);
  1591  001382  0E00               	movlw	0
  1592  001384  6E03               	movwf	(LCD_printchar@i+1)^0,c
  1593  001386  0E00               	movlw	0
  1594  001388  6E02               	movwf	LCD_printchar@i^0,c
  1595  00138A                     i2l922:
  1596  00138A  4A02               	infsnz	LCD_printchar@i^0,f,c
  1597  00138C  2A03               	incf	(LCD_printchar@i+1)^0,f,c
  1598  00138E  5003               	movf	(LCD_printchar@i+1)^0,w,c
  1599  001390  E109               	bnz	i2u1_40
  1600  001392  0E64               	movlw	100
  1601  001394  5C02               	subwf	LCD_printchar@i^0,w,c
  1602  001396  A0D8               	btfss	status,0,c
  1603  001398  EFD0  F009         	goto	i2u1_41
  1604  00139C  EFD2  F009         	goto	i2u1_40
  1605  0013A0                     i2u1_41:
  1606  0013A0  EFC5  F009         	goto	i2l922
  1607  0013A4                     i2u1_40:
  1608  0013A4                     
  1609                           ;gm_lcd.c: 112:     PORTCbits.RC0 = 0;
  1610  0013A4  9082               	bcf	130,0,c	;volatile
  1611  0013A6                     
  1612                           ;gm_lcd.c: 113:     for (i = 0; i < 200; i++);
  1613  0013A6  0E00               	movlw	0
  1614  0013A8  6E03               	movwf	(LCD_printchar@i+1)^0,c
  1615  0013AA  0E00               	movlw	0
  1616  0013AC  6E02               	movwf	LCD_printchar@i^0,c
  1617  0013AE                     i2l932:
  1618  0013AE  4A02               	infsnz	LCD_printchar@i^0,f,c
  1619  0013B0  2A03               	incf	(LCD_printchar@i+1)^0,f,c
  1620  0013B2  5003               	movf	(LCD_printchar@i+1)^0,w,c
  1621  0013B4  E109               	bnz	i2u2_40
  1622  0013B6  0EC8               	movlw	200
  1623  0013B8  5C02               	subwf	LCD_printchar@i^0,w,c
  1624  0013BA  A0D8               	btfss	status,0,c
  1625  0013BC  EFE2  F009         	goto	i2u2_41
  1626  0013C0  EFE4  F009         	goto	i2u2_40
  1627  0013C4                     i2u2_41:
  1628  0013C4  EFD7  F009         	goto	i2l932
  1629  0013C8                     i2u2_40:
  1630  0013C8  0012               	return		;funcret
  1631  0013CA                     __end_of_LCD_printchar:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _LCD_clear *****************
  1635 ;; Defined at:
  1636 ;;		line 73 in file "gm_lcd.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  i               2    0[COMRAM] unsigned int 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;Total ram usage:        2 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_interrupcao
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text11
  1664  0013CA                     __ptext11:
  1665                           	callstack 0
  1666  0013CA                     _LCD_clear:
  1667                           	callstack 27
  1668  0013CA                     
  1669                           ;gm_lcd.c: 76:     PORTD = 0x01;
  1670  0013CA  0E01               	movlw	1
  1671  0013CC  6E83               	movwf	131,c	;volatile
  1672  0013CE                     
  1673                           ;gm_lcd.c: 77:     PORTCbits.RC1 = 0;
  1674  0013CE  9282               	bcf	130,1,c	;volatile
  1675  0013D0                     
  1676                           ;gm_lcd.c: 78:     PORTCbits.RC0 = 1;
  1677  0013D0  8082               	bsf	130,0,c	;volatile
  1678                           
  1679                           ;gm_lcd.c: 79:     for (i = 0; i < 100; i++);
  1680  0013D2  0E00               	movlw	0
  1681  0013D4  6E02               	movwf	(LCD_clear@i+1)^0,c
  1682  0013D6  0E00               	movlw	0
  1683  0013D8  6E01               	movwf	LCD_clear@i^0,c
  1684  0013DA                     i2l968:
  1685  0013DA  4A01               	infsnz	LCD_clear@i^0,f,c
  1686  0013DC  2A02               	incf	(LCD_clear@i+1)^0,f,c
  1687  0013DE  5002               	movf	(LCD_clear@i+1)^0,w,c
  1688  0013E0  E109               	bnz	i2u6_40
  1689  0013E2  0E64               	movlw	100
  1690  0013E4  5C01               	subwf	LCD_clear@i^0,w,c
  1691  0013E6  A0D8               	btfss	status,0,c
  1692  0013E8  EFF8  F009         	goto	i2u6_41
  1693  0013EC  EFFA  F009         	goto	i2u6_40
  1694  0013F0                     i2u6_41:
  1695  0013F0  EFED  F009         	goto	i2l968
  1696  0013F4                     i2u6_40:
  1697  0013F4                     
  1698                           ;gm_lcd.c: 80:     PORTCbits.RC0 = 0;
  1699  0013F4  9082               	bcf	130,0,c	;volatile
  1700  0013F6                     
  1701                           ;gm_lcd.c: 81:     for (i = 0; i < 200; i++);
  1702  0013F6  0E00               	movlw	0
  1703  0013F8  6E02               	movwf	(LCD_clear@i+1)^0,c
  1704  0013FA  0E00               	movlw	0
  1705  0013FC  6E01               	movwf	LCD_clear@i^0,c
  1706  0013FE                     i2l978:
  1707  0013FE  4A01               	infsnz	LCD_clear@i^0,f,c
  1708  001400  2A02               	incf	(LCD_clear@i+1)^0,f,c
  1709  001402  5002               	movf	(LCD_clear@i+1)^0,w,c
  1710  001404  E109               	bnz	i2u7_40
  1711  001406  0EC8               	movlw	200
  1712  001408  5C01               	subwf	LCD_clear@i^0,w,c
  1713  00140A  A0D8               	btfss	status,0,c
  1714  00140C  EF0A  F00A         	goto	i2u7_41
  1715  001410  EF0C  F00A         	goto	i2u7_40
  1716  001414                     i2u7_41:
  1717  001414  EFFF  F009         	goto	i2l978
  1718  001418                     i2u7_40:
  1719  001418  0012               	return		;funcret
  1720  00141A                     __end_of_LCD_clear:
  1721                           	callstack 0
  1722                           
  1723 ;; *************** function _EUSART1_Write_Text *****************
  1724 ;; Defined at:
  1725 ;;		line 90 in file "eusart1.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  s               2    1[COMRAM] PTR const unsigned char 
  1728 ;;		 -> STR_9(11), STR_8(21), STR_7(15), STR_6(16), 
  1729 ;;		 -> STR_5(5), STR_4(14), STR_2(11), 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;Total ram usage:        2 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    1
  1748 ;; This function calls:
  1749 ;;		_EUSART1_Write
  1750 ;; This function is called by:
  1751 ;;		_interrupcao
  1752 ;;		_HC05_configure
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text12
  1757  0014D8                     __ptext12:
  1758                           	callstack 0
  1759  0014D8                     _EUSART1_Write_Text:
  1760                           	callstack 26
  1761  0014D8                     
  1762                           ;eusart1.c: 90: void EUSART1_Write_Text(const char *s);eusart1.c: 91:  {;eusart1.c: 92: 
      +                               while(*s)
  1763  0014D8  EF79  F00A         	goto	i2l1366
  1764  0014DC                     i2l1362:
  1765                           
  1766                           ;eusart1.c: 93:      {;eusart1.c: 94:          EUSART1_Write(*s);
  1767  0014DC  C002  FFF6         	movff	EUSART1_Write_Text@s,tblptrl
  1768  0014E0  C003  FFF7         	movff	EUSART1_Write_Text@s+1,tblptrh
  1769  0014E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1770  0014E4  6AF8               	clrf	tblptru,c
  1771  0014E6                     	endif
  1772  0014E6                     	if	0	;tblptru may be non-zero
  1773  0014E6                     	endif
  1774  0014E6  0008               	tblrd		*
  1775  0014E8  50F5               	movf	tablat,w,c
  1776  0014EA  ECA9  F00A         	call	_EUSART1_Write
  1777  0014EE                     
  1778                           ;eusart1.c: 95:          s++;
  1779  0014EE  4A02               	infsnz	EUSART1_Write_Text@s^0,f,c
  1780  0014F0  2A03               	incf	(EUSART1_Write_Text@s+1)^0,f,c
  1781  0014F2                     i2l1366:
  1782                           
  1783                           ;eusart1.c: 92:      while(*s)
  1784  0014F2  C002  FFF6         	movff	EUSART1_Write_Text@s,tblptrl
  1785  0014F6  C003  FFF7         	movff	EUSART1_Write_Text@s+1,tblptrh
  1786  0014FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1787  0014FA  6AF8               	clrf	tblptru,c
  1788  0014FC                     	endif
  1789  0014FC                     	if	0	;tblptru may be non-zero
  1790  0014FC                     	endif
  1791  0014FC  0008               	tblrd		*
  1792  0014FE  50F5               	movf	tablat,w,c
  1793  001500  0900               	iorlw	0
  1794  001502  A4D8               	btfss	status,2,c
  1795  001504  EF86  F00A         	goto	i2u43_41
  1796  001508  EF88  F00A         	goto	i2u43_40
  1797  00150C                     i2u43_41:
  1798  00150C  EF6E  F00A         	goto	i2l1362
  1799  001510                     i2u43_40:
  1800  001510  0012               	return		;funcret
  1801  001512                     __end_of_EUSART1_Write_Text:
  1802                           	callstack 0
  1803                           
  1804 ;; *************** function _EUSART1_Write *****************
  1805 ;; Defined at:
  1806 ;;		line 81 in file "eusart1.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  txData          1    wreg     unsigned char 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  txData          1    0[COMRAM] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;Total ram usage:        1 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_EUSART1_Write_Text
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text13
  1834  001552                     __ptext13:
  1835                           	callstack 0
  1836  001552                     _EUSART1_Write:
  1837                           	callstack 26
  1838                           
  1839                           ;incstack = 0
  1840                           ;EUSART1_Write@txData stored from wreg
  1841  001552  6E01               	movwf	EUSART1_Write@txData^0,c
  1842  001554                     i2l196:
  1843                           
  1844                           ;eusart1.c: 83:     while(0 == PIR1bits.TX1IF)
  1845  001554  A89E               	btfss	158,4,c	;volatile
  1846  001556  EFAF  F00A         	goto	i2u3_41
  1847  00155A  EFB1  F00A         	goto	i2u3_40
  1848  00155E                     i2u3_41:
  1849  00155E  EFAA  F00A         	goto	i2l196
  1850  001562                     i2u3_40:
  1851  001562                     
  1852                           ;eusart1.c: 87:     TXREG1 = txData;
  1853  001562  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1854  001566  0012               	return		;funcret
  1855  001568                     __end_of_EUSART1_Write:
  1856                           	callstack 0
  1857                           
  1858 ;; *************** function _EUSART1_Read *****************
  1859 ;; Defined at:
  1860 ;;		line 64 in file "eusart1.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      unsigned char 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_interrupcao
  1884 ;;		_HC05_configure
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text14
  1889  001512                     __ptext14:
  1890                           	callstack 0
  1891  001512                     _EUSART1_Read:
  1892                           	callstack 27
  1893  001512                     i2l189:
  1894  001512  AA9E               	btfss	158,5,c	;volatile
  1895  001514  EF8E  F00A         	goto	i2u4_41
  1896  001518  EF90  F00A         	goto	i2u4_40
  1897  00151C                     i2u4_41:
  1898  00151C  EF89  F00A         	goto	i2l189
  1899  001520                     i2u4_40:
  1900  001520                     
  1901                           ;eusart1.c: 68:     eusart1RxLastError.status = 0;
  1902  001520  0E00               	movlw	0
  1903  001522  6E1A               	movwf	_eusart1RxLastError^0,c	;volatile
  1904  001524                     
  1905                           ;eusart1.c: 70:     if(RCSTA1bits.OERR)
  1906  001524  A2AB               	btfss	171,1,c	;volatile
  1907  001526  EF97  F00A         	goto	i2u5_41
  1908  00152A  EF99  F00A         	goto	i2u5_40
  1909  00152E                     i2u5_41:
  1910  00152E  EF9C  F00A         	goto	i2l954
  1911  001532                     i2u5_40:
  1912  001532                     
  1913                           ;eusart1.c: 71:     {;eusart1.c: 73:         RCSTA1bits.CREN = 0;
  1914  001532  98AB               	bcf	171,4,c	;volatile
  1915                           
  1916                           ;eusart1.c: 74:         __nop();
  1917  001534  F000               	nop	
  1918                           
  1919                           ;eusart1.c: 75:         RCSTA1bits.CREN = 1;
  1920  001536  88AB               	bsf	171,4,c	;volatile
  1921  001538                     i2l954:
  1922                           
  1923                           ;eusart1.c: 78:     return RCREG1;
  1924  001538  50AE               	movf	174,w,c	;volatile
  1925  00153A  0012               	return		;funcret
  1926  00153C                     __end_of_EUSART1_Read:
  1927                           	callstack 0
  1928                           
  1929                           	psect	rparam
  1930  0000                     
  1931                           	psect	temp
  1932  000022                     btemp:
  1933                           	callstack 0
  1934  000022                     	ds	1
  1935  0000                     int$flags	set	btemp
  1936  0000                     wtemp8	set	btemp+1
  1937  0000                     ttemp5	set	btemp+1
  1938  0000                     ttemp6	set	btemp+4
  1939  0000                     ttemp7	set	btemp+8
  1940                           
  1941                           	psect	idloc
  1942                           
  1943                           ;Config register IDLOC0 @ 0x200000
  1944                           ;	unspecified, using default values
  1945  200000                     	org	2097152
  1946  200000  FF                 	db	255
  1947                           
  1948                           ;Config register IDLOC1 @ 0x200001
  1949                           ;	unspecified, using default values
  1950  200001                     	org	2097153
  1951  200001  FF                 	db	255
  1952                           
  1953                           ;Config register IDLOC2 @ 0x200002
  1954                           ;	unspecified, using default values
  1955  200002                     	org	2097154
  1956  200002  FF                 	db	255
  1957                           
  1958                           ;Config register IDLOC3 @ 0x200003
  1959                           ;	unspecified, using default values
  1960  200003                     	org	2097155
  1961  200003  FF                 	db	255
  1962                           
  1963                           ;Config register IDLOC4 @ 0x200004
  1964                           ;	unspecified, using default values
  1965  200004                     	org	2097156
  1966  200004  FF                 	db	255
  1967                           
  1968                           ;Config register IDLOC5 @ 0x200005
  1969                           ;	unspecified, using default values
  1970  200005                     	org	2097157
  1971  200005  FF                 	db	255
  1972                           
  1973                           ;Config register IDLOC6 @ 0x200006
  1974                           ;	unspecified, using default values
  1975  200006                     	org	2097158
  1976  200006  FF                 	db	255
  1977                           
  1978                           ;Config register IDLOC7 @ 0x200007
  1979                           ;	unspecified, using default values
  1980  200007                     	org	2097159
  1981  200007  FF                 	db	255
  1982                           
  1983                           	psect	config
  1984                           
  1985                           ; Padding undefined space
  1986  300000                     	org	3145728
  1987  300000  FF                 	db	255
  1988                           
  1989                           ;Config register CONFIG1H @ 0x300001
  1990                           ;	Oscillator Selection bits
  1991                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
  1992                           ;	4X PLL Enable
  1993                           ;	PLLCFG = OFF, Oscillator used directly
  1994                           ;	Primary clock enable bit
  1995                           ;	PRICLKEN = ON, Primary clock is always enabled
  1996                           ;	Fail-Safe Clock Monitor Enable bit
  1997                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1998                           ;	Internal/External Oscillator Switchover bit
  1999                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2000  300001                     	org	3145729
  2001  300001  22                 	db	34
  2002                           
  2003                           ;Config register CONFIG2L @ 0x300002
  2004                           ;	Power-up Timer Enable bit
  2005                           ;	PWRTEN = OFF, Power up timer disabled
  2006                           ;	Brown-out Reset Enable bits
  2007                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2008                           ;	Brown Out Reset Voltage bits
  2009                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2010  300002                     	org	3145730
  2011  300002  19                 	db	25
  2012                           
  2013                           ;Config register CONFIG2H @ 0x300003
  2014                           ;	Watchdog Timer Enable bits
  2015                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2016                           ;	Watchdog Timer Postscale Select bits
  2017                           ;	WDTPS = 32768, 1:32768
  2018  300003                     	org	3145731
  2019  300003  3C                 	db	60
  2020                           
  2021                           ; Padding undefined space
  2022  300004                     	org	3145732
  2023  300004  FF                 	db	255
  2024                           
  2025                           ;Config register CONFIG3H @ 0x300005
  2026                           ;	CCP2 MUX bit
  2027                           ;	CCP2MX = PORTB3, CCP2 input/output is multiplexed with RB3
  2028                           ;	PORTB A/D Enable bit
  2029                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  2030                           ;	P3A/CCP3 Mux bit
  2031                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  2032                           ;	HFINTOSC Fast Start-up
  2033                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2034                           ;	Timer3 Clock input mux bit
  2035                           ;	T3CMX = PORTB5, T3CKI is on RB5
  2036                           ;	ECCP2 B output mux bit
  2037                           ;	P2BMX = PORTD2, P2B is on RD2
  2038                           ;	MCLR Pin Enable bit
  2039                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2040  300005                     	org	3145733
  2041  300005  A8                 	db	168
  2042                           
  2043                           ;Config register CONFIG4L @ 0x300006
  2044                           ;	Stack Full/Underflow Reset Enable bit
  2045                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2046                           ;	Single-Supply ICSP Enable bit
  2047                           ;	LVP = OFF, Single-Supply ICSP disabled
  2048                           ;	Extended Instruction Set Enable bit
  2049                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2050                           ;	Background Debug
  2051                           ;	DEBUG = 0x1, unprogrammed default
  2052  300006                     	org	3145734
  2053  300006  81                 	db	129
  2054                           
  2055                           ; Padding undefined space
  2056  300007                     	org	3145735
  2057  300007  FF                 	db	255
  2058                           
  2059                           ;Config register CONFIG5L @ 0x300008
  2060                           ;	Code Protection Block 0
  2061                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2062                           ;	Code Protection Block 1
  2063                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2064                           ;	Code Protection Block 2
  2065                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2066                           ;	Code Protection Block 3
  2067                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2068  300008                     	org	3145736
  2069  300008  0F                 	db	15
  2070                           
  2071                           ;Config register CONFIG5H @ 0x300009
  2072                           ;	Boot Block Code Protection bit
  2073                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2074                           ;	Data EEPROM Code Protection bit
  2075                           ;	CPD = OFF, Data EEPROM not code-protected
  2076  300009                     	org	3145737
  2077  300009  C0                 	db	192
  2078                           
  2079                           ;Config register CONFIG6L @ 0x30000A
  2080                           ;	Write Protection Block 0
  2081                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2082                           ;	Write Protection Block 1
  2083                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2084                           ;	Write Protection Block 2
  2085                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2086                           ;	Write Protection Block 3
  2087                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2088  30000A                     	org	3145738
  2089  30000A  0F                 	db	15
  2090                           
  2091                           ;Config register CONFIG6H @ 0x30000B
  2092                           ;	Configuration Register Write Protection bit
  2093                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2094                           ;	Boot Block Write Protection bit
  2095                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2096                           ;	Data EEPROM Write Protection bit
  2097                           ;	WRTD = OFF, Data EEPROM not write-protected
  2098  30000B                     	org	3145739
  2099  30000B  E0                 	db	224
  2100                           
  2101                           ;Config register CONFIG7L @ 0x30000C
  2102                           ;	Table Read Protection Block 0
  2103                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2104                           ;	Table Read Protection Block 1
  2105                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2106                           ;	Table Read Protection Block 2
  2107                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2108                           ;	Table Read Protection Block 3
  2109                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2110  30000C                     	org	3145740
  2111  30000C  0F                 	db	15
  2112                           
  2113                           ;Config register CONFIG7H @ 0x30000D
  2114                           ;	Boot Block Table Read Protection bit
  2115                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2116  30000D                     	org	3145741
  2117  30000D  40                 	db	64
  2118                           tosu	equ	0xFFF
  2119                           tosh	equ	0xFFE
  2120                           tosl	equ	0xFFD
  2121                           stkptr	equ	0xFFC
  2122                           pclatu	equ	0xFFB
  2123                           pclath	equ	0xFFA
  2124                           pcl	equ	0xFF9
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           prodh	equ	0xFF4
  2130                           prodl	equ	0xFF3
  2131                           indf0	equ	0xFEF
  2132                           postinc0	equ	0xFEE
  2133                           postdec0	equ	0xFED
  2134                           preinc0	equ	0xFEC
  2135                           plusw0	equ	0xFEB
  2136                           fsr0h	equ	0xFEA
  2137                           fsr0l	equ	0xFE9
  2138                           wreg	equ	0xFE8
  2139                           indf1	equ	0xFE7
  2140                           postinc1	equ	0xFE6
  2141                           postdec1	equ	0xFE5
  2142                           preinc1	equ	0xFE4
  2143                           plusw1	equ	0xFE3
  2144                           fsr1h	equ	0xFE2
  2145                           fsr1l	equ	0xFE1
  2146                           bsr	equ	0xFE0
  2147                           indf2	equ	0xFDF
  2148                           postinc2	equ	0xFDE
  2149                           postdec2	equ	0xFDD
  2150                           preinc2	equ	0xFDC
  2151                           plusw2	equ	0xFDB
  2152                           fsr2h	equ	0xFDA
  2153                           fsr2l	equ	0xFD9
  2154                           status	equ	0xFD8

Data Sizes:
    Strings     114
    Constant    0
    Data        0
    BSS         7
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     21      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_Write_Text@s	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[11]), STR_8(CODE[21]), STR_7(CODE[15]), STR_6(CODE[16]), 
		 -> STR_5(CODE[5]), STR_4(CODE[14]), STR_2(CODE[11]), 

    LCD_printstring@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_LCD_pos
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _interrupcao in COMRAM

    _interrupcao->i2_LCD_pos
    _LCD_printstring->_LCD_printchar
    _EUSART1_Write_Text->_EUSART1_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupcao in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupcao in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupcao in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupcao in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupcao in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupcao in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupcao in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupcao in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     995
                                             20 COMRAM     1     1      0
                 _EUSART1_Initialize
                     _LCD_initialize
                            _LCD_pos
 ---------------------------------------------------------------------------------
 (1) _LCD_pos                                              7     6      1     430
                                             13 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _LCD_initialize                                       2     2      0     270
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (2) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_SetErrorHandler                              2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupcao                                          6     6      0    1372
                                              7 COMRAM     6     6      0
                       _EUSART1_Read
                 _EUSART1_Write_Text
                          _LCD_clear
                      _LCD_printchar
                    _LCD_printstring
                          i2_LCD_pos
 ---------------------------------------------------------------------------------
 (4) i2_LCD_pos                                            7     6      1     306
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (4) _LCD_printstring                                      2     0      2     272
                                              3 COMRAM     2     0      2
                      _LCD_printchar
 ---------------------------------------------------------------------------------
 (5) _LCD_printchar                                        3     3      0      75
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _LCD_clear                                            2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write_Text                                   2     0      2     592
                                              1 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
   _LCD_initialize
   _LCD_pos

 _interrupcao (ROOT)
   _EUSART1_Read
   _EUSART1_Write_Text
     _EUSART1_Write
   _LCD_clear
   _LCD_printchar
   _LCD_printstring
     _LCD_printchar
   i2_LCD_pos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     15      22       1       36.2%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22      12        0.0%
DATA                 0      0      22       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 07 02:31:07 2021

                                             _k 001B                                              l61 1458  
                                            l62 1458                                              l90 11BA  
                                            l82 111E                                              l93 11DE  
                                            l86 116C                                              l78 10D0  
                                           l111 1286                                             l114 12AA  
                                           l106 1250                                             l220 1570  
                                           l223 1584                                             l217 157A  
                                           l172 149C                                             u200 1142  
                                           u201 113E                                             u210 116C  
                                           u211 1168                                             u220 1190  
                                           u221 118C                                             u230 11BA  
                                           u231 11B6                                             u240 11DE  
                                           u160 10A6                                             u400 1286  
                                           u241 11DA                                             u161 10A2  
                                           u401 1282                                             u170 10D0  
                                           u410 12AA                                             u171 10CC  
                                           u411 12A6                                             u180 10F4  
                                           u181 10F0                                             u190 111E  
                                           u191 111A                                             u360 11FA  
                                           u361 11F6                                             u370 1214  
                                           u371 1210                                             u380 122E  
                                           u381 122A                                             u390 1248  
                                           u391 1244                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                LCD_printstring@s 0004  
                               __end_of_LCD_pos 12AC                                            l1120 1146  
                                          l1104 1104                                            l1130 1156  
                                          l1122 1148                                            l1114 1128  
                                          l1106 1108                                            l1140 117A  
                                          l1132 116E                                            l1116 112C  
                                          l1108 1120                                            l1060 1082  
                                          l1052 1074                                            l1302 1572  
                                          l1142 1190                                            l1118 1142  
                                          l1070 10A6                                            l1054 1078  
                                          l1310 11EA                                            l1304 1568  
                                          l1152 11A0                                            l1144 1194  
                                          l1128 1152                                            l1080 10B6  
                                          l1072 10AA                                            l1056 107A  
                                          l1320 122E                                            l1312 11FA  
                                          l1306 157C                                            l1162 11C4  
                                          l1154 11A4                                            l1146 1196  
                                          l1138 1176                                            l1090 10DA  
                                          l1082 10BA                                            l1074 10AC  
                                          l1066 108C                                            l1058 1080  
                                          l1330 1260                                            l1322 1236  
                                          l1314 1202                                            l1164 11C8  
                                          l1156 11BC                                            l1092 10DE  
                                          l1084 10D2                                            l1068 1090  
                                          l1340 1270                                            l1332 1262  
                                          l1324 1248                                            l1316 1214  
                                          l1308 11E2                                            l1094 10F4  
                                          l1350 1294                                            l1342 1288  
                                          l1318 121C                                            l1326 1250  
                                          l1096 10F8                                            l1328 125A  
                                          l1370 1474                                            l1098 10FA  
                                          l1338 126C                                            l1372 1480  
                                          l1348 1290                                            l1460 1430  
                                          l1374 148C                                            l1470 144A  
                                          l1462 1432                                            l1454 141A  
                                          l1376 1498                                            l1368 1460  
                                          l1472 144C                                            l1464 1436  
                                          l1456 142C                                            l1474 144E  
                                          l1466 1446                                            l1458 142E  
                                          l1468 1448                                            STR_1 1065  
                                          STR_2 105A                                            STR_3 1043  
                                          STR_4 1035                                            STR_5 106E  
                                          STR_6 1016                                            STR_7 1026  
                                          STR_8 1001                                            STR_9 104F  
                                          i2l56 00C2                                            i2l97 13F4  
                                 _EUSART1_Write 1552                                            _main 141A  
                                 ?_EUSART1_Read 0001                                            btemp 0022  
                                          start 00D6                              __size_of_LCD_clear 0050  
                                  ___param_bank 000000                          __size_of_LCD_printchar 0052  
                       __size_of_LCD_initialize 016C                              __size_ofi2_LCD_pos 00CC  
                                         ?_main 0001                                           i2l100 1418  
                                         i2l111 1352                                           i2l121 13C8  
                                         i2l114 1376                                           i2l106 131C  
                                         i2l205 1510                                           i2l118 13A4  
                                         i2l127 14D6                                           i2l193 153A  
                                         i2l196 1554                                           i2l189 1512  
                                         i2l199 1566                                           i2l910 137A  
                                         i2l912 137E                                           i2l922 138A  
                                         i2l914 1380                                           i2l932 13AE  
                                         i2l924 138E                                           i2l916 1382  
                                         i2l908 137A                                           i2l950 1524  
                                         i2l942 1554                                           i2l934 13B2  
                                         i2l926 13A6                                           i2l952 1532  
                                         i2l944 1562                                           i2l960 13CE  
                                         i2l954 1538                                           i2l946 1512  
                                         i2l970 13DE                                           i2l962 13D0  
                                         i2l948 1520                                           i2l980 1402  
                                         i2l972 13F6                                           i2l958 13CA  
                                         i2l968 13DA                                           i2l978 13FE  
                                         _PORTD 000F83                                           _TRISD 000F95  
                                ?_EUSART1_Write 0001                                           tablat 000FF5  
                                ??_EUSART1_Read 0001                                           ttemp5 0023  
                                         ttemp6 0026                                           ttemp7 002A  
                                         status 000FD8                                           wtemp8 0023  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 153C  
                                  ?_interrupcao 0001                      __end_of_EUSART1_Initialize 149E  
                                  __end_of_main 1460                                          ??_main 0015  
                                 __activetblptr 000003                                       ??_LCD_pos 000F  
                             __end_of_LCD_clear 141A                                   _LCD_printchar 1378  
                                        _ANSELA 000F38                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _ANSELD 000F3B  
                                        i2l1400 132C                                          i2l1410 133C  
                                        i2l1402 132E                                          i2l1420 1360  
                                        i2l1412 1354                                          i2l1430 0036  
                                        i2l1422 001A                                          i2l1360 14D8  
                                        i2l1352 149E                                          i2l1408 1338  
                                        i2l1440 0070                                          i2l1432 0048  
                                        i2l1424 0028                                          i2l1362 14DC  
                                        i2l1354 14A2                                          i2l1418 135C  
                                        i2l1450 00AA                                          i2l1434 004C  
                                        i2l1442 007C                                          i2l1426 002E  
                                        i2l1364 14EE                                          i2l1356 14B4  
                                        i2l1380 12B6                                          i2l1452 00B6  
                                        i2l1444 008E                                          i2l1436 005A  
                                        i2l1428 0030                                          i2l1366 14F2  
                                        i2l1358 14B8                                          i2l1390 12FA  
                                        i2l1382 12C6                                          i2l1446 0092  
                                        i2l1438 0064                                          i2l1392 1302  
                                        i2l1384 12CE                                          i2l1448 00A0  
                                        i2l1394 1314                                          i2l1386 12E0  
                                        i2l1378 12AE                                          i2l1388 12E8  
                                        i2l1396 131C                                          i2l1398 1326  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                             __end_ofi2_LCD_pos 1378                                          _OSCCON 000FD3  
                                        _SPBRG1 000FAF                                          i2u1_40 13A4  
                                        i2u1_41 13A0                                          i2u2_40 13C8  
                                        i2u2_41 13C4                                          i2u3_40 1562  
                                        i2u3_41 155E                                          i2u4_40 1520  
                                        i2u4_41 151C                                          i2u5_40 1532  
                                        i2u5_41 152E                                          i2u6_40 13F4  
                                        i2u6_41 13F0                                          i2u7_40 1418  
                                        i2u7_41 1414                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                 LCD_initialize@i 000E  
                      ?_EUSART1_SetErrorHandler 000E                                          clear_0 1542  
              ??_EUSART1_SetOverrunErrorHandler 0010                 ?_EUSART1_SetOverrunErrorHandler 000E  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                               ??_EUSART1_Write 0001                                  ?_LCD_printchar 0001  
                                LCD_printchar@i 0002                                      __accesstop 0060  
                       __end_of__initialization 1548                                   ___rparam_used 000001  
                    __end_of_EUSART1_Write_Text 1512                                  __pcstackCOMRAM 0001  
                                _LCD_initialize 1074                            __end_of_EUSART1_Read 153C  
                                  LCD_pos@linha 0012                                      __pnvCOMRAM 001C  
                      __size_of_LCD_printstring 003A                 __end_of_EUSART1_SetErrorHandler 1586  
                        __end_of_LCD_initialize 11E0                            __size_of_interrupcao 00CE  
        __end_of_EUSART1_SetFramingErrorHandler 157C         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 1572                                         _LCD_pos 11E0  
                               ??_LCD_printchar 0001                                         _OSCCON2 000FD2  
                                       i2u42_40 14D6                                         i2u50_40 0028  
                                       i2u42_41 14D2                                         i2u50_41 0024  
                                       i2u43_40 1510                                         i2u51_40 0048  
                                       i2u43_41 150C                                         i2u51_41 0044  
                                       i2u44_40 12C6                                         i2u52_40 008E  
                                       i2u44_41 12C2                                         i2u52_41 008A  
                                       i2u45_40 12E0                                         i2u45_41 12DC  
                                       i2u53_47 0052                                         i2u46_40 12FA  
                                       i2u46_41 12F6                                         _OSCTUNE 000F9B  
                                       i2u54_47 0098                                         i2u47_40 1314  
                                       i2u47_41 1310                                         i2u48_40 1352  
                                       i2u48_41 134E                                         i2u49_40 1376  
                                       i2u49_41 1372                                         _SPBRGH1 000FB0  
                                  i2LCD_pos@cte 0004                                    i2LCD_pos@pos 0003  
                                       __Hparam 0000                                         __Lparam 0000  
                               ?_LCD_initialize 0001                                    __psmallconst 1000  
                                       __pcinit 153C                                         __ramtop 1000  
                                       __ptext0 141A                                         __ptext1 11E0  
                                       __ptext2 1074                                         __ptext3 1460  
                                       __ptext4 1568                                         __ptext5 1572  
                                       __ptext6 157C                                         __ptext8 12AC  
                                       __ptext9 149E                              _EUSART1_Initialize 1460  
                                       _rcvdata 0015                                       _LCD_clear 13CA  
                          end_of_initialization 1548                             ?_EUSART1_Initialize 0001  
                        LCD_printchar@character 0001                     _EUSART1_OverrunErrorHandler 001E  
                                     i2_LCD_pos 12AC                                         postinc0 000FEE  
                         __size_of_EUSART1_Read 002A                               ??_LCD_printstring 0006  
                          ??_EUSART1_Initialize 0010                                       _PORTCbits 000F82  
                                     _TRISCbits 000F94                                  i2LCD_pos@linha 0005  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0001  
                                    ?_LCD_clear 0001                                    _EUSART1_Read 1512  
                           EUSART1_Write_Text@s 0002                                      ?i2_LCD_pos 0001  
                                    LCD_clear@i 0001                              _EUSART1_Write_Text 14D8  
                           start_initialization 153C                                      LCD_pos@cte 0011  
                                    LCD_pos@pos 0010                             ?_EUSART1_Write_Text 0002  
                         __end_of_EUSART1_Write 1568                                   LCD_pos@coluna 000E  
                          ??_EUSART1_Write_Text 0004                                        ?_LCD_pos 000E  
                                   __pbssCOMRAM 0015                                     ??_LCD_clear 0001  
                                      LCD_pos@i 0013                ??_EUSART1_SetFramingErrorHandler 0010  
               ?_EUSART1_SetFramingErrorHandler 000E                                ??_LCD_initialize 000E  
                                   ??i2_LCD_pos 0002                                   ??_interrupcao 0008  
                                     __pintcode 0008                                     __smallconst 1000  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                          _EUSART1_ErrorHandler 001C                         _EUSART1_SetErrorHandler 157C  
                         __end_of_LCD_printchar 13CA                                 _LCD_printstring 149E  
       EUSART1_SetErrorHandler@interruptHandler 000E                                        _PIE1bits 000F9D  
                                      _PIR1bits 000F9E                                        _RCONbits 000FD0  
                           __end_of_interrupcao 00D6                                __size_of_LCD_pos 00CC  
                                      __Hrparam 0000                                        __Lrparam 0000  
                   __size_of_EUSART1_Initialize 003E                       ??_EUSART1_SetErrorHandler 0010  
                   _EUSART1_DefaultErrorHandler 000000                         __end_of_LCD_printstring 14D8  
                                      __ptext10 1378                                        __ptext11 13CA  
                                      __ptext12 14D8                                        __ptext13 1552  
                                      __ptext14 1512                                      i2LCD_pos@i 0006  
                                 __size_of_main 0046  EUSART1_SetOverrunErrorHandler@interruptHandler 000E  
                                   _interrupcao 0008                                        int$flags 0022  
                   _EUSART1_FramingErrorHandler 0020                                 interrupcao@data 000D  
                                    _INTCONbits 000FF2                                        intlevel2 0000  
        __end_of_EUSART1_SetOverrunErrorHandler 1572         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1568                                      _RCSTA1bits 000FAB  
EUSART1_SetFramingErrorHandler@interruptHandler 000E                     __size_of_EUSART1_Write_Text 003A  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 001A  
                              ?_LCD_printstring 0004                                 i2LCD_pos@coluna 0001  
