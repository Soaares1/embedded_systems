

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Dec 30 14:56:21 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 05/05/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F46K22 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    67  0000                     
    68 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    69  0000                     
    70 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    71  0000                     
    72                           	psect	nvCOMRAM
    73  00001C                     __pnvCOMRAM:
    74                           	callstack 0
    75  00001C                     _EUSART1_ErrorHandler:
    76                           	callstack 0
    77  00001C                     	ds	2
    78  00001E                     _EUSART1_OverrunErrorHandler:
    79                           	callstack 0
    80  00001E                     	ds	2
    81  000020                     _EUSART1_FramingErrorHandler:
    82                           	callstack 0
    83  000020                     	ds	2
    84  0000                     _ANSELD	set	3899
    85  0000                     _ANSELC	set	3898
    86  0000                     _ANSELB	set	3897
    87  0000                     _ANSELA	set	3896
    88  0000                     _TXREG1	set	4013
    89  0000                     _RCREG1	set	4014
    90  0000                     _RCSTA1bits	set	4011
    91  0000                     _TXSTA1bits	set	4012
    92  0000                     _SPBRGH1	set	4016
    93  0000                     _SPBRG1	set	4015
    94  0000                     _TXSTA1	set	4012
    95  0000                     _RCSTA1	set	4011
    96  0000                     _BAUDCON1	set	4024
    97  0000                     _PORTD	set	3971
    98  0000                     _TRISD	set	3989
    99  0000                     _PIE1bits	set	3997
   100  0000                     _INTCONbits	set	4082
   101  0000                     _RCONbits	set	4048
   102  0000                     _OSCTUNE	set	3995
   103  0000                     _OSCCON2	set	4050
   104  0000                     _OSCCON	set	4051
   105  0000                     _TRISCbits	set	3988
   106  0000                     _PORTCbits	set	3970
   107  0000                     _PIR1bits	set	3998
   108                           
   109                           	psect	smallconst
   110  001000                     __psmallconst:
   111                           	callstack 0
   112  001000  00                 	db	0
   113  001001                     STR_4:
   114  001001  44                 	db	68	;'D'
   115  001002  65                 	db	101	;'e'
   116  001003  73                 	db	115	;'s'
   117  001004  6C                 	db	108	;'l'
   118  001005  69                 	db	105	;'i'
   119  001006  67                 	db	103	;'g'
   120  001007  61                 	db	97	;'a'
   121  001008  64                 	db	100	;'d'
   122  001009  6F                 	db	111	;'o'
   123  00100A  20                 	db	32
   124  00100B  21                 	db	33
   125  00100C  0D                 	db	13
   126  00100D  0A                 	db	10
   127  00100E  00                 	db	0
   128  00100F                     STR_3:
   129  00100F  44                 	db	68	;'D'
   130  001010  65                 	db	101	;'e'
   131  001011  73                 	db	115	;'s'
   132  001012  6C                 	db	108	;'l'
   133  001013  69                 	db	105	;'i'
   134  001014  67                 	db	103	;'g'
   135  001015  61                 	db	97	;'a'
   136  001016  64                 	db	100	;'d'
   137  001017  6F                 	db	111	;'o'
   138  001018  20                 	db	32
   139  001019  21                 	db	33
   140  00101A  00                 	db	0
   141  00101B                     STR_2:
   142  00101B  4C                 	db	76	;'L'
   143  00101C  69                 	db	105	;'i'
   144  00101D  67                 	db	103	;'g'
   145  00101E  61                 	db	97	;'a'
   146  00101F  64                 	db	100	;'d'
   147  001020  6F                 	db	111	;'o'
   148  001021  20                 	db	32
   149  001022  21                 	db	33
   150  001023  0D                 	db	13
   151  001024  0A                 	db	10
   152  001025  00                 	db	0
   153  001026                     STR_1:
   154  001026  4C                 	db	76	;'L'
   155  001027  69                 	db	105	;'i'
   156  001028  67                 	db	103	;'g'
   157  001029  61                 	db	97	;'a'
   158  00102A  64                 	db	100	;'d'
   159  00102B  6F                 	db	111	;'o'
   160  00102C  20                 	db	32
   161  00102D  21                 	db	33
   162  00102E  00                 	db	0
   163  00102F  00                 	db	0	; dummy byte at the end
   164  0000                     
   165                           ; #config settings
   166                           
   167                           	psect	cinit
   168  0014F8                     __pcinit:
   169                           	callstack 0
   170  0014F8                     start_initialization:
   171                           	callstack 0
   172  0014F8                     __initialization:
   173                           	callstack 0
   174                           
   175                           ; Clear objects allocated to COMRAM (7 bytes)
   176  0014F8  EE00  F015         	lfsr	0,__pbssCOMRAM
   177  0014FC  0E07               	movlw	7
   178  0014FE                     clear_0:
   179  0014FE  6AEE               	clrf	postinc0,c
   180  001500  06E8               	decf	wreg,f,c
   181  001502  E1FD               	bnz	clear_0
   182  001504                     end_of_initialization:
   183                           	callstack 0
   184  001504                     __end_of__initialization:
   185                           	callstack 0
   186  001504  9022               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   187  001506  9222               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   188  001508  0100               	movlb	0
   189  00150A  EFEB  F009         	goto	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMRAM
   192  000015                     __pbssCOMRAM:
   193                           	callstack 0
   194  000015                     _rcvdata:
   195                           	callstack 0
   196  000015                     	ds	5
   197  00001A                     _eusart1RxLastError:
   198                           	callstack 0
   199  00001A                     	ds	1
   200  00001B                     _k:
   201                           	callstack 0
   202  00001B                     	ds	1
   203                           
   204                           	psect	cstackCOMRAM
   205  000001                     __pcstackCOMRAM:
   206                           	callstack 0
   207  000001                     LCD_printchar@character:
   208                           	callstack 0
   209  000001                     EUSART1_Write@txData:
   210                           	callstack 0
   211  000001                     i2LCD_pos@coluna:
   212                           	callstack 0
   213  000001                     LCD_clear@i:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0x0
   217  000001                     	ds	1
   218  000002                     ??i2_LCD_pos:
   219  000002                     LCD_printchar@i:
   220                           	callstack 0
   221  000002                     EUSART1_Writes@s:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x1
   225  000002                     	ds	1
   226  000003                     i2LCD_pos@pos:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x2
   230  000003                     	ds	1
   231  000004                     i2LCD_pos@cte:
   232                           	callstack 0
   233  000004                     LCD_printstring@s:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x3
   237  000004                     	ds	1
   238  000005                     i2LCD_pos@linha:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x4
   242  000005                     	ds	1
   243  000006                     i2LCD_pos@i:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x5
   247  000006                     	ds	2
   248  000008                     ??_interrupcao:
   249                           
   250                           ; 1 bytes @ 0x7
   251  000008                     	ds	5
   252  00000D                     interrupcao@data:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0xC
   256  00000D                     	ds	1
   257  00000E                     LCD_pos@coluna:
   258                           	callstack 0
   259  00000E                     LCD_initialize@i:
   260                           	callstack 0
   261  00000E                     EUSART1_SetFramingErrorHandler@interruptHandler:
   262                           	callstack 0
   263  00000E                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   264                           	callstack 0
   265  00000E                     EUSART1_SetErrorHandler@interruptHandler:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0xD
   269  00000E                     	ds	1
   270  00000F                     ??_LCD_pos:
   271                           
   272                           ; 1 bytes @ 0xE
   273  00000F                     	ds	1
   274  000010                     LCD_pos@pos:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0xF
   278  000010                     	ds	1
   279  000011                     LCD_pos@cte:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x10
   283  000011                     	ds	1
   284  000012                     LCD_pos@linha:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x11
   288  000012                     	ds	1
   289  000013                     LCD_pos@i:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x12
   293  000013                     	ds	2
   294  000015                     
   295                           ; 1 bytes @ 0x14
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 42 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  i               1    0        unsigned char 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;Total ram usage:        1 bytes
   320 ;; Hardware stack levels required when called:    5
   321 ;; This function calls:
   322 ;;		_EUSART1_Initialize
   323 ;;		_LCD_initialize
   324 ;;		_LCD_pos
   325 ;; This function is called by:
   326 ;;		Startup code after reset
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           	psect	text0
   331  0013D6                     __ptext0:
   332                           	callstack 0
   333  0013D6                     _main:
   334                           	callstack 26
   335  0013D6                     
   336                           ;main.c: 47:     ANSELA = 0x01;
   337  0013D6  0E01               	movlw	1
   338  0013D8  010F               	movlb	15	; () banked
   339  0013DA  6F38               	movwf	56,b	;volatile
   340                           
   341                           ;main.c: 48:     ANSELB = 0x00;
   342  0013DC  0E00               	movlw	0
   343  0013DE  6F39               	movwf	57,b	;volatile
   344                           
   345                           ;main.c: 49:     ANSELC = 0x00;
   346  0013E0  0E00               	movlw	0
   347  0013E2  6F3A               	movwf	58,b	;volatile
   348                           
   349                           ;main.c: 50:     ANSELD = 0x00;
   350  0013E4  0E00               	movlw	0
   351  0013E6  6F3B               	movwf	59,b	;volatile
   352  0013E8                     
   353                           ; BSR set to: 15
   354                           ;main.c: 53:     TRISCbits.RC2 = 0;
   355  0013E8  9494               	bcf	148,2,c	;volatile
   356  0013EA                     
   357                           ; BSR set to: 15
   358                           ;main.c: 56:     TRISCbits.RC6 = 1;
   359  0013EA  8C94               	bsf	148,6,c	;volatile
   360  0013EC                     
   361                           ; BSR set to: 15
   362                           ;main.c: 57:     TRISCbits.RC7 = 1;
   363  0013EC  8E94               	bsf	148,7,c	;volatile
   364  0013EE                     
   365                           ; BSR set to: 15
   366                           ;main.c: 59:     EUSART1_Initialize();
   367  0013EE  EC0E  F00A         	call	_EUSART1_Initialize	;wreg free
   368  0013F2                     
   369                           ;main.c: 60:     LCD_initialize();
   370  0013F2  EC18  F008         	call	_LCD_initialize	;wreg free
   371                           
   372                           ;main.c: 62:     OSCCON = 0x3C;
   373  0013F6  0E3C               	movlw	60
   374  0013F8  6ED3               	movwf	211,c	;volatile
   375                           
   376                           ;main.c: 63:     OSCCON2 = 0x07;
   377  0013FA  0E07               	movlw	7
   378  0013FC  6ED2               	movwf	210,c	;volatile
   379                           
   380                           ;main.c: 64:     OSCTUNE = 0x00;
   381  0013FE  0E00               	movlw	0
   382  001400  6E9B               	movwf	155,c	;volatile
   383  001402                     
   384                           ;main.c: 66:     RCONbits.IPEN = 0;
   385  001402  9ED0               	bcf	208,7,c	;volatile
   386  001404                     
   387                           ;main.c: 67:     INTCONbits.GIE = 1;
   388  001404  8EF2               	bsf	242,7,c	;volatile
   389  001406                     
   390                           ;main.c: 68:     INTCONbits.PEIE = 1;
   391  001406  8CF2               	bsf	242,6,c	;volatile
   392  001408                     
   393                           ;main.c: 69:     PIE1bits.RC1IE = 1;
   394  001408  8A9D               	bsf	157,5,c	;volatile
   395  00140A                     
   396                           ;main.c: 71:     LCD_pos(1,1);
   397  00140A  0E01               	movlw	1
   398  00140C  6E0E               	movwf	LCD_pos@coluna^0,c
   399  00140E  0E01               	movlw	1
   400  001410  ECCE  F008         	call	_LCD_pos
   401  001414                     l61:
   402  001414  EF0A  F00A         	goto	l61
   403  001418  EF6B  F000         	goto	start
   404  00141C                     __end_of_main:
   405                           	callstack 0
   406                           
   407 ;; *************** function _LCD_pos *****************
   408 ;; Defined at:
   409 ;;		line 84 in file "gm_lcd.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;  linha           1    wreg     unsigned char 
   412 ;;  coluna          1   13[COMRAM] unsigned char 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;  linha           1   17[COMRAM] unsigned char 
   415 ;;  i               2   18[COMRAM] unsigned int 
   416 ;;  cte             1   16[COMRAM] unsigned char 
   417 ;;  pos             1   15[COMRAM] unsigned char 
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   427 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   430 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   431 ;;Total ram usage:        7 bytes
   432 ;; Hardware stack levels used:    1
   433 ;; Hardware stack levels required when called:    3
   434 ;; This function calls:
   435 ;;		Nothing
   436 ;; This function is called by:
   437 ;;		_main
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           	psect	text1
   442  00119C                     __ptext1:
   443                           	callstack 0
   444  00119C                     _LCD_pos:
   445                           	callstack 27
   446                           
   447                           ;incstack = 0
   448                           ;LCD_pos@linha stored from wreg
   449  00119C  6E12               	movwf	LCD_pos@linha^0,c
   450  00119E                     
   451                           ;gm_lcd.c: 86:     unsigned char cte, pos;;gm_lcd.c: 88:     cte = 0; pos = 0;
   452  00119E  0E00               	movlw	0
   453  0011A0  6E11               	movwf	LCD_pos@cte^0,c
   454  0011A2  0E00               	movlw	0
   455  0011A4  6E10               	movwf	LCD_pos@pos^0,c
   456  0011A6                     
   457                           ;gm_lcd.c: 90:     if (linha == 1) cte = 0;
   458  0011A6  0412               	decf	LCD_pos@linha^0,w,c
   459  0011A8  A4D8               	btfss	status,2,c
   460  0011AA  EFD9  F008         	goto	u361
   461  0011AE  EFDB  F008         	goto	u360
   462  0011B2                     u361:
   463  0011B2  EFDF  F008         	goto	l1285
   464  0011B6                     u360:
   465  0011B6  0E00               	movlw	0
   466  0011B8  6E11               	movwf	LCD_pos@cte^0,c
   467  0011BA  EF06  F009         	goto	l1297
   468  0011BE                     l1285:
   469  0011BE  0E02               	movlw	2
   470  0011C0  1812               	xorwf	LCD_pos@linha^0,w,c
   471  0011C2  A4D8               	btfss	status,2,c
   472  0011C4  EFE6  F008         	goto	u371
   473  0011C8  EFE8  F008         	goto	u370
   474  0011CC                     u371:
   475  0011CC  EFEC  F008         	goto	l1289
   476  0011D0                     u370:
   477  0011D0  0E40               	movlw	64
   478  0011D2  6E11               	movwf	LCD_pos@cte^0,c
   479  0011D4  EF06  F009         	goto	l1297
   480  0011D8                     l1289:
   481  0011D8  0E03               	movlw	3
   482  0011DA  1812               	xorwf	LCD_pos@linha^0,w,c
   483  0011DC  A4D8               	btfss	status,2,c
   484  0011DE  EFF3  F008         	goto	u381
   485  0011E2  EFF5  F008         	goto	u380
   486  0011E6                     u381:
   487  0011E6  EFF9  F008         	goto	l1293
   488  0011EA                     u380:
   489  0011EA  0E14               	movlw	20
   490  0011EC  6E11               	movwf	LCD_pos@cte^0,c
   491  0011EE  EF06  F009         	goto	l1297
   492  0011F2                     l1293:
   493  0011F2  0E04               	movlw	4
   494  0011F4  1812               	xorwf	LCD_pos@linha^0,w,c
   495  0011F6  A4D8               	btfss	status,2,c
   496  0011F8  EF00  F009         	goto	u391
   497  0011FC  EF02  F009         	goto	u390
   498  001200                     u391:
   499  001200  EF06  F009         	goto	l106
   500  001204                     u390:
   501  001204  0E54               	movlw	84
   502  001206  6E11               	movwf	LCD_pos@cte^0,c
   503  001208  EF06  F009         	goto	l1297
   504  00120C                     l106:
   505  00120C                     l1297:
   506                           
   507                           ;gm_lcd.c: 95:     pos = cte + coluna - 1;
   508  00120C  5011               	movf	LCD_pos@cte^0,w,c
   509  00120E  240E               	addwf	LCD_pos@coluna^0,w,c
   510  001210  6E0F               	movwf	??_LCD_pos^0,c
   511  001212  040F               	decf	??_LCD_pos^0,w,c
   512  001214  6E10               	movwf	LCD_pos@pos^0,c
   513  001216                     
   514                           ;gm_lcd.c: 97:     PORTD = pos | 0x80 ;
   515  001216  5010               	movf	LCD_pos@pos^0,w,c
   516  001218  0980               	iorlw	128
   517  00121A  6E83               	movwf	131,c	;volatile
   518  00121C                     
   519                           ;gm_lcd.c: 98:     PORTCbits.RC1 = 0;
   520  00121C  9282               	bcf	130,1,c	;volatile
   521  00121E                     
   522                           ;gm_lcd.c: 99:     PORTCbits.RC0 = 1;
   523  00121E  8082               	bsf	130,0,c	;volatile
   524                           
   525                           ;gm_lcd.c: 100:     for (i = 0; i < 100; i++);
   526  001220  0E00               	movlw	0
   527  001222  6E14               	movwf	(LCD_pos@i+1)^0,c
   528  001224  0E00               	movlw	0
   529  001226  6E13               	movwf	LCD_pos@i^0,c
   530  001228                     l1309:
   531  001228  4A13               	infsnz	LCD_pos@i^0,f,c
   532  00122A  2A14               	incf	(LCD_pos@i+1)^0,f,c
   533  00122C  5014               	movf	(LCD_pos@i+1)^0,w,c
   534  00122E  E109               	bnz	u400
   535  001230  0E64               	movlw	100
   536  001232  5C13               	subwf	LCD_pos@i^0,w,c
   537  001234  A0D8               	btfss	status,0,c
   538  001236  EF1F  F009         	goto	u401
   539  00123A  EF21  F009         	goto	u400
   540  00123E                     u401:
   541  00123E  EF14  F009         	goto	l1309
   542  001242                     u400:
   543  001242                     
   544                           ;gm_lcd.c: 101:     PORTCbits.RC0 = 0;
   545  001242  9082               	bcf	130,0,c	;volatile
   546  001244                     
   547                           ;gm_lcd.c: 102:     for (i = 0; i < 200; i++);
   548  001244  0E00               	movlw	0
   549  001246  6E14               	movwf	(LCD_pos@i+1)^0,c
   550  001248  0E00               	movlw	0
   551  00124A  6E13               	movwf	LCD_pos@i^0,c
   552  00124C                     l1319:
   553  00124C  4A13               	infsnz	LCD_pos@i^0,f,c
   554  00124E  2A14               	incf	(LCD_pos@i+1)^0,f,c
   555  001250  5014               	movf	(LCD_pos@i+1)^0,w,c
   556  001252  E109               	bnz	u410
   557  001254  0EC8               	movlw	200
   558  001256  5C13               	subwf	LCD_pos@i^0,w,c
   559  001258  A0D8               	btfss	status,0,c
   560  00125A  EF31  F009         	goto	u411
   561  00125E  EF33  F009         	goto	u410
   562  001262                     u411:
   563  001262  EF26  F009         	goto	l1319
   564  001266                     u410:
   565  001266  0012               	return		;funcret
   566  001268                     __end_of_LCD_pos:
   567                           	callstack 0
   568                           
   569 ;; *************** function _LCD_initialize *****************
   570 ;; Defined at:
   571 ;;		line 26 in file "gm_lcd.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;  i               2   13[COMRAM] unsigned int 
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, status,2, status,0
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;Total ram usage:        2 bytes
   590 ;; Hardware stack levels used:    1
   591 ;; Hardware stack levels required when called:    3
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text2
   600  001030                     __ptext2:
   601                           	callstack 0
   602  001030                     _LCD_initialize:
   603                           	callstack 27
   604  001030                     
   605                           ;gm_lcd.c: 30:     TRISD = 0x00;
   606  001030  0E00               	movlw	0
   607  001032  6E95               	movwf	149,c	;volatile
   608  001034                     
   609                           ;gm_lcd.c: 31:     TRISCbits.RC0 = 0;
   610  001034  9094               	bcf	148,0,c	;volatile
   611  001036                     
   612                           ;gm_lcd.c: 32:     TRISCbits.RC1 = 0;
   613  001036  9294               	bcf	148,1,c	;volatile
   614                           
   615                           ;gm_lcd.c: 35:     PORTD = 0x00;
   616  001038  0E00               	movlw	0
   617  00103A  6E83               	movwf	131,c	;volatile
   618  00103C                     
   619                           ;gm_lcd.c: 36:     PORTCbits.RC1 = 0;
   620  00103C  9282               	bcf	130,1,c	;volatile
   621  00103E                     
   622                           ;gm_lcd.c: 37:     PORTCbits.RC0 = 0;
   623  00103E  9082               	bcf	130,0,c	;volatile
   624                           
   625                           ;gm_lcd.c: 38:     for (i = 0; i < 100; i++);
   626  001040  0E00               	movlw	0
   627  001042  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   628  001044  0E00               	movlw	0
   629  001046  6E0E               	movwf	LCD_initialize@i^0,c
   630  001048                     l1057:
   631  001048  4A0E               	infsnz	LCD_initialize@i^0,f,c
   632  00104A  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   633  00104C  500F               	movf	(LCD_initialize@i+1)^0,w,c
   634  00104E  E109               	bnz	u160
   635  001050  0E64               	movlw	100
   636  001052  5C0E               	subwf	LCD_initialize@i^0,w,c
   637  001054  A0D8               	btfss	status,0,c
   638  001056  EF2F  F008         	goto	u161
   639  00105A  EF31  F008         	goto	u160
   640  00105E                     u161:
   641  00105E  EF24  F008         	goto	l1057
   642  001062                     u160:
   643  001062                     
   644                           ;gm_lcd.c: 41:     PORTD = 0x01;
   645  001062  0E01               	movlw	1
   646  001064  6E83               	movwf	131,c	;volatile
   647  001066                     
   648                           ;gm_lcd.c: 42:     PORTCbits.RC1 = 0;
   649  001066  9282               	bcf	130,1,c	;volatile
   650  001068                     
   651                           ;gm_lcd.c: 43:     PORTCbits.RC0 = 1;
   652  001068  8082               	bsf	130,0,c	;volatile
   653                           
   654                           ;gm_lcd.c: 44:     for (i = 0; i < 100; i++);
   655  00106A  0E00               	movlw	0
   656  00106C  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   657  00106E  0E00               	movlw	0
   658  001070  6E0E               	movwf	LCD_initialize@i^0,c
   659  001072                     l1071:
   660  001072  4A0E               	infsnz	LCD_initialize@i^0,f,c
   661  001074  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   662  001076  500F               	movf	(LCD_initialize@i+1)^0,w,c
   663  001078  E109               	bnz	u170
   664  00107A  0E64               	movlw	100
   665  00107C  5C0E               	subwf	LCD_initialize@i^0,w,c
   666  00107E  A0D8               	btfss	status,0,c
   667  001080  EF44  F008         	goto	u171
   668  001084  EF46  F008         	goto	u170
   669  001088                     u171:
   670  001088  EF39  F008         	goto	l1071
   671  00108C                     u170:
   672  00108C                     
   673                           ;gm_lcd.c: 45:     PORTCbits.RC0 = 0;
   674  00108C  9082               	bcf	130,0,c	;volatile
   675  00108E                     
   676                           ;gm_lcd.c: 46:     for (i = 0; i < 10000; i++);
   677  00108E  0E00               	movlw	0
   678  001090  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   679  001092  0E00               	movlw	0
   680  001094  6E0E               	movwf	LCD_initialize@i^0,c
   681  001096                     l1081:
   682  001096  4A0E               	infsnz	LCD_initialize@i^0,f,c
   683  001098  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   684  00109A  0E10               	movlw	16
   685  00109C  5C0E               	subwf	LCD_initialize@i^0,w,c
   686  00109E  0E27               	movlw	39
   687  0010A0  580F               	subwfb	(LCD_initialize@i+1)^0,w,c
   688  0010A2  A0D8               	btfss	status,0,c
   689  0010A4  EF56  F008         	goto	u181
   690  0010A8  EF58  F008         	goto	u180
   691  0010AC                     u181:
   692  0010AC  EF4B  F008         	goto	l1081
   693  0010B0                     u180:
   694  0010B0                     
   695                           ;gm_lcd.c: 49:     PORTD = 0x38;
   696  0010B0  0E38               	movlw	56
   697  0010B2  6E83               	movwf	131,c	;volatile
   698  0010B4                     
   699                           ;gm_lcd.c: 50:     PORTCbits.RC1 = 0;
   700  0010B4  9282               	bcf	130,1,c	;volatile
   701  0010B6                     
   702                           ;gm_lcd.c: 51:     PORTCbits.RC0 = 1;
   703  0010B6  8082               	bsf	130,0,c	;volatile
   704                           
   705                           ;gm_lcd.c: 52:     for (i = 0; i < 100; i++);
   706  0010B8  0E00               	movlw	0
   707  0010BA  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   708  0010BC  0E00               	movlw	0
   709  0010BE  6E0E               	movwf	LCD_initialize@i^0,c
   710  0010C0                     l1095:
   711  0010C0  4A0E               	infsnz	LCD_initialize@i^0,f,c
   712  0010C2  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   713  0010C4  500F               	movf	(LCD_initialize@i+1)^0,w,c
   714  0010C6  E109               	bnz	u190
   715  0010C8  0E64               	movlw	100
   716  0010CA  5C0E               	subwf	LCD_initialize@i^0,w,c
   717  0010CC  A0D8               	btfss	status,0,c
   718  0010CE  EF6B  F008         	goto	u191
   719  0010D2  EF6D  F008         	goto	u190
   720  0010D6                     u191:
   721  0010D6  EF60  F008         	goto	l1095
   722  0010DA                     u190:
   723  0010DA                     
   724                           ;gm_lcd.c: 53:     PORTCbits.RC0 = 0;
   725  0010DA  9082               	bcf	130,0,c	;volatile
   726  0010DC                     
   727                           ;gm_lcd.c: 54:     for (i = 0; i < 200; i++);
   728  0010DC  0E00               	movlw	0
   729  0010DE  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   730  0010E0  0E00               	movlw	0
   731  0010E2  6E0E               	movwf	LCD_initialize@i^0,c
   732  0010E4                     l1105:
   733  0010E4  4A0E               	infsnz	LCD_initialize@i^0,f,c
   734  0010E6  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   735  0010E8  500F               	movf	(LCD_initialize@i+1)^0,w,c
   736  0010EA  E109               	bnz	u200
   737  0010EC  0EC8               	movlw	200
   738  0010EE  5C0E               	subwf	LCD_initialize@i^0,w,c
   739  0010F0  A0D8               	btfss	status,0,c
   740  0010F2  EF7D  F008         	goto	u201
   741  0010F6  EF7F  F008         	goto	u200
   742  0010FA                     u201:
   743  0010FA  EF72  F008         	goto	l1105
   744  0010FE                     u200:
   745  0010FE                     
   746                           ;gm_lcd.c: 57:     PORTD = 0x0E;
   747  0010FE  0E0E               	movlw	14
   748  001100  6E83               	movwf	131,c	;volatile
   749  001102                     
   750                           ;gm_lcd.c: 58:     PORTCbits.RC1 = 0;
   751  001102  9282               	bcf	130,1,c	;volatile
   752  001104                     
   753                           ;gm_lcd.c: 59:     PORTCbits.RC0 = 1;
   754  001104  8082               	bsf	130,0,c	;volatile
   755                           
   756                           ;gm_lcd.c: 60:     for (i = 0; i < 100; i++);
   757  001106  0E00               	movlw	0
   758  001108  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   759  00110A  0E00               	movlw	0
   760  00110C  6E0E               	movwf	LCD_initialize@i^0,c
   761  00110E                     l1119:
   762  00110E  4A0E               	infsnz	LCD_initialize@i^0,f,c
   763  001110  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   764  001112  500F               	movf	(LCD_initialize@i+1)^0,w,c
   765  001114  E109               	bnz	u210
   766  001116  0E64               	movlw	100
   767  001118  5C0E               	subwf	LCD_initialize@i^0,w,c
   768  00111A  A0D8               	btfss	status,0,c
   769  00111C  EF92  F008         	goto	u211
   770  001120  EF94  F008         	goto	u210
   771  001124                     u211:
   772  001124  EF87  F008         	goto	l1119
   773  001128                     u210:
   774  001128                     
   775                           ;gm_lcd.c: 61:     PORTCbits.RC0 = 0;
   776  001128  9082               	bcf	130,0,c	;volatile
   777  00112A                     
   778                           ;gm_lcd.c: 62:     for (i = 0; i < 200; i++);
   779  00112A  0E00               	movlw	0
   780  00112C  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   781  00112E  0E00               	movlw	0
   782  001130  6E0E               	movwf	LCD_initialize@i^0,c
   783  001132                     l1129:
   784  001132  4A0E               	infsnz	LCD_initialize@i^0,f,c
   785  001134  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   786  001136  500F               	movf	(LCD_initialize@i+1)^0,w,c
   787  001138  E109               	bnz	u220
   788  00113A  0EC8               	movlw	200
   789  00113C  5C0E               	subwf	LCD_initialize@i^0,w,c
   790  00113E  A0D8               	btfss	status,0,c
   791  001140  EFA4  F008         	goto	u221
   792  001144  EFA6  F008         	goto	u220
   793  001148                     u221:
   794  001148  EF99  F008         	goto	l1129
   795  00114C                     u220:
   796  00114C                     
   797                           ;gm_lcd.c: 65:     PORTD = 0x06;
   798  00114C  0E06               	movlw	6
   799  00114E  6E83               	movwf	131,c	;volatile
   800  001150                     
   801                           ;gm_lcd.c: 66:     PORTCbits.RC1 = 0;
   802  001150  9282               	bcf	130,1,c	;volatile
   803  001152                     
   804                           ;gm_lcd.c: 67:     PORTCbits.RC0 = 1;
   805  001152  8082               	bsf	130,0,c	;volatile
   806                           
   807                           ;gm_lcd.c: 68:     for (i = 0; i < 100; i++);
   808  001154  0E00               	movlw	0
   809  001156  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   810  001158  0E00               	movlw	0
   811  00115A  6E0E               	movwf	LCD_initialize@i^0,c
   812  00115C                     l1143:
   813  00115C  4A0E               	infsnz	LCD_initialize@i^0,f,c
   814  00115E  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   815  001160  500F               	movf	(LCD_initialize@i+1)^0,w,c
   816  001162  E109               	bnz	u230
   817  001164  0E64               	movlw	100
   818  001166  5C0E               	subwf	LCD_initialize@i^0,w,c
   819  001168  A0D8               	btfss	status,0,c
   820  00116A  EFB9  F008         	goto	u231
   821  00116E  EFBB  F008         	goto	u230
   822  001172                     u231:
   823  001172  EFAE  F008         	goto	l1143
   824  001176                     u230:
   825  001176                     
   826                           ;gm_lcd.c: 69:     PORTCbits.RC0 = 0;
   827  001176  9082               	bcf	130,0,c	;volatile
   828  001178                     
   829                           ;gm_lcd.c: 70:     for (i = 0; i < 200; i++);
   830  001178  0E00               	movlw	0
   831  00117A  6E0F               	movwf	(LCD_initialize@i+1)^0,c
   832  00117C  0E00               	movlw	0
   833  00117E  6E0E               	movwf	LCD_initialize@i^0,c
   834  001180                     l1153:
   835  001180  4A0E               	infsnz	LCD_initialize@i^0,f,c
   836  001182  2A0F               	incf	(LCD_initialize@i+1)^0,f,c
   837  001184  500F               	movf	(LCD_initialize@i+1)^0,w,c
   838  001186  E109               	bnz	u240
   839  001188  0EC8               	movlw	200
   840  00118A  5C0E               	subwf	LCD_initialize@i^0,w,c
   841  00118C  A0D8               	btfss	status,0,c
   842  00118E  EFCB  F008         	goto	u241
   843  001192  EFCD  F008         	goto	u240
   844  001196                     u241:
   845  001196  EFC0  F008         	goto	l1153
   846  00119A                     u240:
   847  00119A  0012               	return		;funcret
   848  00119C                     __end_of_LCD_initialize:
   849                           	callstack 0
   850                           
   851 ;; *************** function _EUSART1_Initialize *****************
   852 ;; Defined at:
   853 ;;		line 17 in file "eusart1.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2, status,0, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    4
   874 ;; This function calls:
   875 ;;		_EUSART1_SetErrorHandler
   876 ;;		_EUSART1_SetFramingErrorHandler
   877 ;;		_EUSART1_SetOverrunErrorHandler
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text3
   884  00141C                     __ptext3:
   885                           	callstack 0
   886  00141C                     _EUSART1_Initialize:
   887                           	callstack 26
   888  00141C                     
   889                           ;eusart1.c: 22:     BAUDCON1 = 0x08;
   890  00141C  0E08               	movlw	8
   891  00141E  6EB8               	movwf	184,c	;volatile
   892                           
   893                           ;eusart1.c: 25:     RCSTA1 = 0x90;
   894  001420  0E90               	movlw	144
   895  001422  6EAB               	movwf	171,c	;volatile
   896                           
   897                           ;eusart1.c: 28:     TXSTA1 = 0x24;
   898  001424  0E24               	movlw	36
   899  001426  6EAC               	movwf	172,c	;volatile
   900                           
   901                           ;eusart1.c: 31:     SPBRG1 = 0x2A;
   902  001428  0E2A               	movlw	42
   903  00142A  6EAF               	movwf	175,c	;volatile
   904                           
   905                           ;eusart1.c: 34:     SPBRGH1 = 0x00;
   906  00142C  0E00               	movlw	0
   907  00142E  6EB0               	movwf	176,c	;volatile
   908  001430                     
   909                           ;eusart1.c: 37:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
   910  001430  0E00               	movlw	0
   911  001432  6E0E               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
   912  001434  0E00               	movlw	0
   913  001436  6E0F               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
   914  001438  EC97  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
   915  00143C                     
   916                           ;eusart1.c: 38:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
   917  00143C  0E00               	movlw	0
   918  00143E  6E0E               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
   919  001440  0E00               	movlw	0
   920  001442  6E0F               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
   921  001444  EC92  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
   922  001448                     
   923                           ;eusart1.c: 39:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
   924  001448  0E00               	movlw	0
   925  00144A  6E0E               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
   926  00144C  0E00               	movlw	0
   927  00144E  6E0F               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
   928  001450  EC9C  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
   929  001454                     
   930                           ;eusart1.c: 41:     eusart1RxLastError.status = 0;
   931  001454  0E00               	movlw	0
   932  001456  6E1A               	movwf	_eusart1RxLastError^0,c	;volatile
   933  001458  0012               	return		;funcret
   934  00145A                     __end_of_EUSART1_Initialize:
   935                           	callstack 0
   936                           
   937 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
   938 ;; Defined at:
   939 ;;		line 116 in file "eusart1.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  interruptHan    2   13[COMRAM] PTR FTN()void 
   942 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;Total ram usage:        2 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    3
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_EUSART1_Initialize
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text4
   969  001524                     __ptext4:
   970                           	callstack 0
   971  001524                     _EUSART1_SetOverrunErrorHandler:
   972                           	callstack 26
   973  001524                     
   974                           ;eusart1.c: 117:     EUSART1_OverrunErrorHandler = interruptHandler;
   975  001524  C00E  F01E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
   976  001528  C00F  F01F         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
   977  00152C  0012               	return		;funcret
   978  00152E                     __end_of_EUSART1_SetOverrunErrorHandler:
   979                           	callstack 0
   980                           
   981 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
   982 ;; Defined at:
   983 ;;		line 112 in file "eusart1.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  interruptHan    2   13[COMRAM] PTR FTN()void 
   986 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;Total ram usage:        2 bytes
  1003 ;; Hardware stack levels used:    1
  1004 ;; Hardware stack levels required when called:    3
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_EUSART1_Initialize
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text5
  1013  00152E                     __ptext5:
  1014                           	callstack 0
  1015  00152E                     _EUSART1_SetFramingErrorHandler:
  1016                           	callstack 26
  1017  00152E                     
  1018                           ;eusart1.c: 113:     EUSART1_FramingErrorHandler = interruptHandler;
  1019  00152E  C00E  F020         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1020  001532  C00F  F021         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1021  001536  0012               	return		;funcret
  1022  001538                     __end_of_EUSART1_SetFramingErrorHandler:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _EUSART1_SetErrorHandler *****************
  1026 ;; Defined at:
  1027 ;;		line 120 in file "eusart1.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  interruptHan    2   13[COMRAM] PTR FTN()void 
  1030 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1042 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;Total ram usage:        2 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    3
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_EUSART1_Initialize
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text6
  1057  001538                     __ptext6:
  1058                           	callstack 0
  1059  001538                     _EUSART1_SetErrorHandler:
  1060                           	callstack 26
  1061  001538                     
  1062                           ;eusart1.c: 121:     EUSART1_ErrorHandler = interruptHandler;
  1063  001538  C00E  F01C         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1064  00153C  C00F  F01D         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1065  001540  0012               	return		;funcret
  1066  001542                     __end_of_EUSART1_SetErrorHandler:
  1067                           	callstack 0
  1068                           
  1069 ;; *************** function _interrupcao *****************
  1070 ;; Defined at:
  1071 ;;		line 14 in file "main.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  data            1   12[COMRAM] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;Total ram usage:        6 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    2
  1092 ;; This function calls:
  1093 ;;		_EUSART1_Read
  1094 ;;		_EUSART1_Writes
  1095 ;;		_LCD_clear
  1096 ;;		_LCD_printchar
  1097 ;;		_LCD_printstring
  1098 ;;		i2_LCD_pos
  1099 ;; This function is called by:
  1100 ;;		Interrupt level 2
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	intcode
  1105  000008                     __pintcode:
  1106                           	callstack 0
  1107  000008                     _interrupcao:
  1108                           	callstack 26
  1109                           
  1110                           ;incstack = 0
  1111  000008  8222               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1112  00000A  CFF6 F009          	movff	tblptrl,??_interrupcao+1
  1113  00000E  CFF7 F00A          	movff	tblptrh,??_interrupcao+2
  1114  000012  CFF8 F00B          	movff	tblptru,??_interrupcao+3
  1115  000016  CFF5 F00C          	movff	tablat,??_interrupcao+4
  1116  00001A                     
  1117                           ;main.c: 16:     uint8_t data;;main.c: 18:     if (PIR1bits.RC1IF){
  1118  00001A  AA9E               	btfss	158,5,c	;volatile
  1119  00001C  EF12  F000         	goto	i2u50_41
  1120  000020  EF14  F000         	goto	i2u50_40
  1121  000024                     i2u50_41:
  1122  000024  EF61  F000         	goto	i2l56
  1123  000028                     i2u50_40:
  1124  000028                     
  1125                           ;main.c: 20:         data = EUSART1_Read();
  1126  000028  EC67  F00A         	call	_EUSART1_Read	;wreg free
  1127  00002C  6E0D               	movwf	interrupcao@data^0,c
  1128  00002E                     
  1129                           ;main.c: 21:         PORTCbits.RC2 ^= 1;
  1130  00002E  7482               	btg	130,2,c	;volatile
  1131  000030                     
  1132                           ;main.c: 22:         LCD_printchar(data);
  1133  000030  500D               	movf	interrupcao@data^0,w,c
  1134  000032  EC9A  F009         	call	_LCD_printchar
  1135  000036                     
  1136                           ;main.c: 24:         if (data == 'L'){
  1137  000036  0E4C               	movlw	76
  1138  000038  180D               	xorwf	interrupcao@data^0,w,c
  1139  00003A  A4D8               	btfss	status,2,c
  1140  00003C  EF22  F000         	goto	i2u51_41
  1141  000040  EF24  F000         	goto	i2u51_40
  1142  000044                     i2u51_41:
  1143  000044  EF3E  F000         	goto	i2l1413
  1144  000048                     i2u51_40:
  1145  000048                     
  1146                           ;main.c: 25:             LCD_clear();
  1147  000048  ECC3  F009         	call	_LCD_clear	;wreg free
  1148  00004C                     
  1149                           ;main.c: 26:             _delay((unsigned long)((2)*(20000000/4000.0)));
  1150  00004C  0E0D               	movlw	13
  1151  00004E  6E08               	movwf	??_interrupcao^0,c
  1152  000050  0EFC               	movlw	252
  1153  000052                     i2u53_47:
  1154  000052  2EE8               	decfsz	wreg,f,c
  1155  000054  D7FE               	bra	i2u53_47
  1156  000056  2E08               	decfsz	??_interrupcao^0,f,c
  1157  000058  D7FC               	bra	i2u53_47
  1158  00005A                     
  1159                           ;main.c: 27:             LCD_pos(3,1);
  1160  00005A  0E01               	movlw	1
  1161  00005C  6E01               	movwf	i2LCD_pos@coluna^0,c
  1162  00005E  0E03               	movlw	3
  1163  000060  EC34  F009         	call	i2_LCD_pos
  1164  000064                     
  1165                           ;main.c: 28:             LCD_printstring("Ligado !");
  1166  000064  0E26               	movlw	low STR_1
  1167  000066  6E04               	movwf	LCD_printstring@s^0,c
  1168  000068  0E10               	movlw	high STR_1
  1169  00006A  6E05               	movwf	(LCD_printstring@s+1)^0,c
  1170  00006C  EC2D  F00A         	call	_LCD_printstring	;wreg free
  1171  000070                     
  1172                           ;main.c: 29:             EUSART1_Writes("Ligado !\r\n");
  1173  000070  0E1B               	movlw	low STR_2
  1174  000072  6E02               	movwf	EUSART1_Writes@s^0,c
  1175  000074  0E10               	movlw	high STR_2
  1176  000076  6E03               	movwf	(EUSART1_Writes@s+1)^0,c
  1177  000078  EC4A  F00A         	call	_EUSART1_Writes	;wreg free
  1178  00007C                     i2l1413:
  1179                           
  1180                           ;main.c: 32:         if (data == 'D'){
  1181  00007C  0E44               	movlw	68
  1182  00007E  180D               	xorwf	interrupcao@data^0,w,c
  1183  000080  A4D8               	btfss	status,2,c
  1184  000082  EF45  F000         	goto	i2u52_41
  1185  000086  EF47  F000         	goto	i2u52_40
  1186  00008A                     i2u52_41:
  1187  00008A  EF61  F000         	goto	i2l56
  1188  00008E                     i2u52_40:
  1189  00008E                     
  1190                           ;main.c: 33:             LCD_clear();
  1191  00008E  ECC3  F009         	call	_LCD_clear	;wreg free
  1192  000092                     
  1193                           ;main.c: 34:             _delay((unsigned long)((2)*(20000000/4000.0)));
  1194  000092  0E0D               	movlw	13
  1195  000094  6E08               	movwf	??_interrupcao^0,c
  1196  000096  0EFC               	movlw	252
  1197  000098                     i2u54_47:
  1198  000098  2EE8               	decfsz	wreg,f,c
  1199  00009A  D7FE               	bra	i2u54_47
  1200  00009C  2E08               	decfsz	??_interrupcao^0,f,c
  1201  00009E  D7FC               	bra	i2u54_47
  1202  0000A0                     
  1203                           ;main.c: 35:             LCD_pos(3,1);
  1204  0000A0  0E01               	movlw	1
  1205  0000A2  6E01               	movwf	i2LCD_pos@coluna^0,c
  1206  0000A4  0E03               	movlw	3
  1207  0000A6  EC34  F009         	call	i2_LCD_pos
  1208  0000AA                     
  1209                           ;main.c: 36:             LCD_printstring("Desligado !");
  1210  0000AA  0E0F               	movlw	low STR_3
  1211  0000AC  6E04               	movwf	LCD_printstring@s^0,c
  1212  0000AE  0E10               	movlw	high STR_3
  1213  0000B0  6E05               	movwf	(LCD_printstring@s+1)^0,c
  1214  0000B2  EC2D  F00A         	call	_LCD_printstring	;wreg free
  1215  0000B6                     
  1216                           ;main.c: 37:             EUSART1_Writes("Desligado !\r\n");
  1217  0000B6  0E01               	movlw	low STR_4
  1218  0000B8  6E02               	movwf	EUSART1_Writes@s^0,c
  1219  0000BA  0E10               	movlw	high STR_4
  1220  0000BC  6E03               	movwf	(EUSART1_Writes@s+1)^0,c
  1221  0000BE  EC4A  F00A         	call	_EUSART1_Writes	;wreg free
  1222  0000C2                     i2l56:
  1223  0000C2  C00C  FFF5         	movff	??_interrupcao+4,tablat
  1224  0000C6  C00B  FFF8         	movff	??_interrupcao+3,tblptru
  1225  0000CA  C00A  FFF7         	movff	??_interrupcao+2,tblptrh
  1226  0000CE  C009  FFF6         	movff	??_interrupcao+1,tblptrl
  1227  0000D2  9222               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1228  0000D4  0011               	retfie		f
  1229  0000D6                     __end_of_interrupcao:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function i2_LCD_pos *****************
  1233 ;; Defined at:
  1234 ;;		line 84 in file "gm_lcd.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  linha           1    wreg     unsigned char 
  1237 ;;  coluna          1    0[COMRAM] unsigned char 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  linha           1    4[COMRAM] unsigned char 
  1240 ;;  i               2    5[COMRAM] unsigned int 
  1241 ;;  cte             1    3[COMRAM] unsigned char 
  1242 ;;  pos             1    2[COMRAM] unsigned char 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, status,2, status,0
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1252 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;Total ram usage:        7 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_interrupcao
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text8
  1266  001268                     __ptext8:
  1267                           	callstack 0
  1268  001268                     i2_LCD_pos:
  1269                           	callstack 27
  1270                           
  1271                           ;incstack = 0
  1272                           ;i2LCD_pos@linha stored from wreg
  1273  001268  6E05               	movwf	i2LCD_pos@linha^0,c
  1274  00126A                     
  1275                           ;gm_lcd.c: 86:     unsigned char cte, pos;;gm_lcd.c: 88:     cte = 0; pos = 0;
  1276  00126A  0E00               	movlw	0
  1277  00126C  6E04               	movwf	i2LCD_pos@cte^0,c
  1278  00126E  0E00               	movlw	0
  1279  001270  6E03               	movwf	i2LCD_pos@pos^0,c
  1280  001272                     
  1281                           ;gm_lcd.c: 90:     if (linha == 1) cte = 0;
  1282  001272  0405               	decf	i2LCD_pos@linha^0,w,c
  1283  001274  A4D8               	btfss	status,2,c
  1284  001276  EF3F  F009         	goto	i2u44_41
  1285  00127A  EF41  F009         	goto	i2u44_40
  1286  00127E                     i2u44_41:
  1287  00127E  EF45  F009         	goto	i2l1355
  1288  001282                     i2u44_40:
  1289  001282  0E00               	movlw	0
  1290  001284  6E04               	movwf	i2LCD_pos@cte^0,c
  1291  001286  EF6C  F009         	goto	i2l1367
  1292  00128A                     i2l1355:
  1293  00128A  0E02               	movlw	2
  1294  00128C  1805               	xorwf	i2LCD_pos@linha^0,w,c
  1295  00128E  A4D8               	btfss	status,2,c
  1296  001290  EF4C  F009         	goto	i2u45_41
  1297  001294  EF4E  F009         	goto	i2u45_40
  1298  001298                     i2u45_41:
  1299  001298  EF52  F009         	goto	i2l1359
  1300  00129C                     i2u45_40:
  1301  00129C  0E40               	movlw	64
  1302  00129E  6E04               	movwf	i2LCD_pos@cte^0,c
  1303  0012A0  EF6C  F009         	goto	i2l1367
  1304  0012A4                     i2l1359:
  1305  0012A4  0E03               	movlw	3
  1306  0012A6  1805               	xorwf	i2LCD_pos@linha^0,w,c
  1307  0012A8  A4D8               	btfss	status,2,c
  1308  0012AA  EF59  F009         	goto	i2u46_41
  1309  0012AE  EF5B  F009         	goto	i2u46_40
  1310  0012B2                     i2u46_41:
  1311  0012B2  EF5F  F009         	goto	i2l1363
  1312  0012B6                     i2u46_40:
  1313  0012B6  0E14               	movlw	20
  1314  0012B8  6E04               	movwf	i2LCD_pos@cte^0,c
  1315  0012BA  EF6C  F009         	goto	i2l1367
  1316  0012BE                     i2l1363:
  1317  0012BE  0E04               	movlw	4
  1318  0012C0  1805               	xorwf	i2LCD_pos@linha^0,w,c
  1319  0012C2  A4D8               	btfss	status,2,c
  1320  0012C4  EF66  F009         	goto	i2u47_41
  1321  0012C8  EF68  F009         	goto	i2u47_40
  1322  0012CC                     i2u47_41:
  1323  0012CC  EF6C  F009         	goto	i2l106
  1324  0012D0                     i2u47_40:
  1325  0012D0  0E54               	movlw	84
  1326  0012D2  6E04               	movwf	i2LCD_pos@cte^0,c
  1327  0012D4  EF6C  F009         	goto	i2l1367
  1328  0012D8                     i2l106:
  1329  0012D8                     i2l1367:
  1330                           
  1331                           ;gm_lcd.c: 95:     pos = cte + coluna - 1;
  1332  0012D8  5004               	movf	i2LCD_pos@cte^0,w,c
  1333  0012DA  2401               	addwf	i2LCD_pos@coluna^0,w,c
  1334  0012DC  6E02               	movwf	??i2_LCD_pos^0,c
  1335  0012DE  0402               	decf	??i2_LCD_pos^0,w,c
  1336  0012E0  6E03               	movwf	i2LCD_pos@pos^0,c
  1337  0012E2                     
  1338                           ;gm_lcd.c: 97:     PORTD = pos | 0x80 ;
  1339  0012E2  5003               	movf	i2LCD_pos@pos^0,w,c
  1340  0012E4  0980               	iorlw	128
  1341  0012E6  6E83               	movwf	131,c	;volatile
  1342  0012E8                     
  1343                           ;gm_lcd.c: 98:     PORTCbits.RC1 = 0;
  1344  0012E8  9282               	bcf	130,1,c	;volatile
  1345  0012EA                     
  1346                           ;gm_lcd.c: 99:     PORTCbits.RC0 = 1;
  1347  0012EA  8082               	bsf	130,0,c	;volatile
  1348                           
  1349                           ;gm_lcd.c: 100:     for (i = 0; i < 100; i++);
  1350  0012EC  0E00               	movlw	0
  1351  0012EE  6E07               	movwf	(i2LCD_pos@i+1)^0,c
  1352  0012F0  0E00               	movlw	0
  1353  0012F2  6E06               	movwf	i2LCD_pos@i^0,c
  1354  0012F4                     i2l1379:
  1355  0012F4  4A06               	infsnz	i2LCD_pos@i^0,f,c
  1356  0012F6  2A07               	incf	(i2LCD_pos@i+1)^0,f,c
  1357  0012F8  5007               	movf	(i2LCD_pos@i+1)^0,w,c
  1358  0012FA  E109               	bnz	i2u48_40
  1359  0012FC  0E64               	movlw	100
  1360  0012FE  5C06               	subwf	i2LCD_pos@i^0,w,c
  1361  001300  A0D8               	btfss	status,0,c
  1362  001302  EF85  F009         	goto	i2u48_41
  1363  001306  EF87  F009         	goto	i2u48_40
  1364  00130A                     i2u48_41:
  1365  00130A  EF7A  F009         	goto	i2l1379
  1366  00130E                     i2u48_40:
  1367  00130E                     
  1368                           ;gm_lcd.c: 101:     PORTCbits.RC0 = 0;
  1369  00130E  9082               	bcf	130,0,c	;volatile
  1370  001310                     
  1371                           ;gm_lcd.c: 102:     for (i = 0; i < 200; i++);
  1372  001310  0E00               	movlw	0
  1373  001312  6E07               	movwf	(i2LCD_pos@i+1)^0,c
  1374  001314  0E00               	movlw	0
  1375  001316  6E06               	movwf	i2LCD_pos@i^0,c
  1376  001318                     i2l1389:
  1377  001318  4A06               	infsnz	i2LCD_pos@i^0,f,c
  1378  00131A  2A07               	incf	(i2LCD_pos@i+1)^0,f,c
  1379  00131C  5007               	movf	(i2LCD_pos@i+1)^0,w,c
  1380  00131E  E109               	bnz	i2u49_40
  1381  001320  0EC8               	movlw	200
  1382  001322  5C06               	subwf	i2LCD_pos@i^0,w,c
  1383  001324  A0D8               	btfss	status,0,c
  1384  001326  EF97  F009         	goto	i2u49_41
  1385  00132A  EF99  F009         	goto	i2u49_40
  1386  00132E                     i2u49_41:
  1387  00132E  EF8C  F009         	goto	i2l1389
  1388  001332                     i2u49_40:
  1389  001332  0012               	return		;funcret
  1390  001334                     __end_ofi2_LCD_pos:
  1391                           	callstack 0
  1392                           
  1393 ;; *************** function _LCD_printstring *****************
  1394 ;; Defined at:
  1395 ;;		line 124 in file "gm_lcd.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  s               2    3[COMRAM] PTR const unsigned char 
  1398 ;;		 -> STR_3(12), STR_1(9), 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;Total ram usage:        2 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:    1
  1417 ;; This function calls:
  1418 ;;		_LCD_printchar
  1419 ;; This function is called by:
  1420 ;;		_interrupcao
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text9
  1425  00145A                     __ptext9:
  1426                           	callstack 0
  1427  00145A                     _LCD_printstring:
  1428                           	callstack 26
  1429  00145A                     
  1430                           ;gm_lcd.c: 124:  void LCD_printstring(const char *s);gm_lcd.c: 125:  {;gm_lcd.c: 126:   
      +                             while(*s)
  1431  00145A  EF3A  F00A         	goto	i2l1329
  1432  00145E                     i2l1325:
  1433                           
  1434                           ;gm_lcd.c: 127:      {;gm_lcd.c: 128:          LCD_printchar(*s);
  1435  00145E  C004  FFF6         	movff	LCD_printstring@s,tblptrl
  1436  001462  C005  FFF7         	movff	LCD_printstring@s+1,tblptrh
  1437  001466                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1438  001466  6AF8               	clrf	tblptru,c
  1439  001468                     	endif
  1440  001468                     	if	0	;tblptru may be non-zero
  1441  001468                     	endif
  1442  001468  0008               	tblrd		*
  1443  00146A  50F5               	movf	tablat,w,c
  1444  00146C  EC9A  F009         	call	_LCD_printchar
  1445  001470                     
  1446                           ;gm_lcd.c: 129:          s++;
  1447  001470  4A04               	infsnz	LCD_printstring@s^0,f,c
  1448  001472  2A05               	incf	(LCD_printstring@s+1)^0,f,c
  1449  001474                     i2l1329:
  1450                           
  1451                           ;gm_lcd.c: 126:      while(*s)
  1452  001474  C004  FFF6         	movff	LCD_printstring@s,tblptrl
  1453  001478  C005  FFF7         	movff	LCD_printstring@s+1,tblptrh
  1454  00147C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1455  00147C  6AF8               	clrf	tblptru,c
  1456  00147E                     	endif
  1457  00147E                     	if	0	;tblptru may be non-zero
  1458  00147E                     	endif
  1459  00147E  0008               	tblrd		*
  1460  001480  50F5               	movf	tablat,w,c
  1461  001482  0900               	iorlw	0
  1462  001484  A4D8               	btfss	status,2,c
  1463  001486  EF47  F00A         	goto	i2u42_41
  1464  00148A  EF49  F00A         	goto	i2u42_40
  1465  00148E                     i2u42_41:
  1466  00148E  EF2F  F00A         	goto	i2l1325
  1467  001492                     i2u42_40:
  1468  001492  0012               	return		;funcret
  1469  001494                     __end_of_LCD_printstring:
  1470                           	callstack 0
  1471                           
  1472 ;; *************** function _LCD_printchar *****************
  1473 ;; Defined at:
  1474 ;;		line 105 in file "gm_lcd.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  character       1    wreg     unsigned char 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  character       1    0[COMRAM] unsigned char 
  1479 ;;  i               2    1[COMRAM] unsigned int 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;Total ram usage:        3 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_interrupcao
  1499 ;;		_LCD_printstring
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text10
  1504  001334                     __ptext10:
  1505                           	callstack 0
  1506  001334                     _LCD_printchar:
  1507                           	callstack 26
  1508                           
  1509                           ;incstack = 0
  1510                           ;LCD_printchar@character stored from wreg
  1511  001334  6E01               	movwf	LCD_printchar@character^0,c
  1512  001336                     
  1513                           ;gm_lcd.c: 108:     PORTD = character;
  1514  001336  C001  FF83         	movff	LCD_printchar@character,3971	;volatile
  1515  00133A                     
  1516                           ;gm_lcd.c: 109:     PORTCbits.RC1 = 1;
  1517  00133A  8282               	bsf	130,1,c	;volatile
  1518  00133C                     
  1519                           ;gm_lcd.c: 110:     PORTCbits.RC0 = 1;
  1520  00133C  8082               	bsf	130,0,c	;volatile
  1521  00133E                     
  1522                           ;gm_lcd.c: 111:     for (i = 0; i < 100; i++);
  1523  00133E  0E00               	movlw	0
  1524  001340  6E03               	movwf	(LCD_printchar@i+1)^0,c
  1525  001342  0E00               	movlw	0
  1526  001344  6E02               	movwf	LCD_printchar@i^0,c
  1527  001346                     i2l913:
  1528  001346  4A02               	infsnz	LCD_printchar@i^0,f,c
  1529  001348  2A03               	incf	(LCD_printchar@i+1)^0,f,c
  1530  00134A  5003               	movf	(LCD_printchar@i+1)^0,w,c
  1531  00134C  E109               	bnz	i2u1_40
  1532  00134E  0E64               	movlw	100
  1533  001350  5C02               	subwf	LCD_printchar@i^0,w,c
  1534  001352  A0D8               	btfss	status,0,c
  1535  001354  EFAE  F009         	goto	i2u1_41
  1536  001358  EFB0  F009         	goto	i2u1_40
  1537  00135C                     i2u1_41:
  1538  00135C  EFA3  F009         	goto	i2l913
  1539  001360                     i2u1_40:
  1540  001360                     
  1541                           ;gm_lcd.c: 112:     PORTCbits.RC0 = 0;
  1542  001360  9082               	bcf	130,0,c	;volatile
  1543  001362                     
  1544                           ;gm_lcd.c: 113:     for (i = 0; i < 200; i++);
  1545  001362  0E00               	movlw	0
  1546  001364  6E03               	movwf	(LCD_printchar@i+1)^0,c
  1547  001366  0E00               	movlw	0
  1548  001368  6E02               	movwf	LCD_printchar@i^0,c
  1549  00136A                     i2l923:
  1550  00136A  4A02               	infsnz	LCD_printchar@i^0,f,c
  1551  00136C  2A03               	incf	(LCD_printchar@i+1)^0,f,c
  1552  00136E  5003               	movf	(LCD_printchar@i+1)^0,w,c
  1553  001370  E109               	bnz	i2u2_40
  1554  001372  0EC8               	movlw	200
  1555  001374  5C02               	subwf	LCD_printchar@i^0,w,c
  1556  001376  A0D8               	btfss	status,0,c
  1557  001378  EFC0  F009         	goto	i2u2_41
  1558  00137C  EFC2  F009         	goto	i2u2_40
  1559  001380                     i2u2_41:
  1560  001380  EFB5  F009         	goto	i2l923
  1561  001384                     i2u2_40:
  1562  001384  0012               	return		;funcret
  1563  001386                     __end_of_LCD_printchar:
  1564                           	callstack 0
  1565                           
  1566 ;; *************** function _LCD_clear *****************
  1567 ;; Defined at:
  1568 ;;		line 73 in file "gm_lcd.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  i               2    0[COMRAM] unsigned int 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;Total ram usage:        2 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_interrupcao
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text11
  1596  001386                     __ptext11:
  1597                           	callstack 0
  1598  001386                     _LCD_clear:
  1599                           	callstack 27
  1600  001386                     
  1601                           ;gm_lcd.c: 76:     PORTD = 0x01;
  1602  001386  0E01               	movlw	1
  1603  001388  6E83               	movwf	131,c	;volatile
  1604  00138A                     
  1605                           ;gm_lcd.c: 77:     PORTCbits.RC1 = 0;
  1606  00138A  9282               	bcf	130,1,c	;volatile
  1607  00138C                     
  1608                           ;gm_lcd.c: 78:     PORTCbits.RC0 = 1;
  1609  00138C  8082               	bsf	130,0,c	;volatile
  1610                           
  1611                           ;gm_lcd.c: 79:     for (i = 0; i < 100; i++);
  1612  00138E  0E00               	movlw	0
  1613  001390  6E02               	movwf	(LCD_clear@i+1)^0,c
  1614  001392  0E00               	movlw	0
  1615  001394  6E01               	movwf	LCD_clear@i^0,c
  1616  001396                     i2l959:
  1617  001396  4A01               	infsnz	LCD_clear@i^0,f,c
  1618  001398  2A02               	incf	(LCD_clear@i+1)^0,f,c
  1619  00139A  5002               	movf	(LCD_clear@i+1)^0,w,c
  1620  00139C  E109               	bnz	i2u6_40
  1621  00139E  0E64               	movlw	100
  1622  0013A0  5C01               	subwf	LCD_clear@i^0,w,c
  1623  0013A2  A0D8               	btfss	status,0,c
  1624  0013A4  EFD6  F009         	goto	i2u6_41
  1625  0013A8  EFD8  F009         	goto	i2u6_40
  1626  0013AC                     i2u6_41:
  1627  0013AC  EFCB  F009         	goto	i2l959
  1628  0013B0                     i2u6_40:
  1629  0013B0                     
  1630                           ;gm_lcd.c: 80:     PORTCbits.RC0 = 0;
  1631  0013B0  9082               	bcf	130,0,c	;volatile
  1632  0013B2                     
  1633                           ;gm_lcd.c: 81:     for (i = 0; i < 200; i++);
  1634  0013B2  0E00               	movlw	0
  1635  0013B4  6E02               	movwf	(LCD_clear@i+1)^0,c
  1636  0013B6  0E00               	movlw	0
  1637  0013B8  6E01               	movwf	LCD_clear@i^0,c
  1638  0013BA                     i2l969:
  1639  0013BA  4A01               	infsnz	LCD_clear@i^0,f,c
  1640  0013BC  2A02               	incf	(LCD_clear@i+1)^0,f,c
  1641  0013BE  5002               	movf	(LCD_clear@i+1)^0,w,c
  1642  0013C0  E109               	bnz	i2u7_40
  1643  0013C2  0EC8               	movlw	200
  1644  0013C4  5C01               	subwf	LCD_clear@i^0,w,c
  1645  0013C6  A0D8               	btfss	status,0,c
  1646  0013C8  EFE8  F009         	goto	i2u7_41
  1647  0013CC  EFEA  F009         	goto	i2u7_40
  1648  0013D0                     i2u7_41:
  1649  0013D0  EFDD  F009         	goto	i2l969
  1650  0013D4                     i2u7_40:
  1651  0013D4  0012               	return		;funcret
  1652  0013D6                     __end_of_LCD_clear:
  1653                           	callstack 0
  1654                           
  1655 ;; *************** function _EUSART1_Writes *****************
  1656 ;; Defined at:
  1657 ;;		line 90 in file "eusart1.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  s               2    1[COMRAM] PTR const unsigned char 
  1660 ;;		 -> STR_4(14), STR_2(11), 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1676 ;;Total ram usage:        2 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; Hardware stack levels required when called:    1
  1679 ;; This function calls:
  1680 ;;		_EUSART1_Write
  1681 ;; This function is called by:
  1682 ;;		_interrupcao
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text12
  1687  001494                     __ptext12:
  1688                           	callstack 0
  1689  001494                     _EUSART1_Writes:
  1690                           	callstack 26
  1691  001494                     
  1692                           ;eusart1.c: 90:  void EUSART1_Writes(const char *s);eusart1.c: 91:  {;eusart1.c: 92:    
      +                            while(*s)
  1693  001494  EF57  F00A         	goto	i2l1337
  1694  001498                     i2l1333:
  1695                           
  1696                           ;eusart1.c: 93:      {;eusart1.c: 94:          EUSART1_Write(*s);
  1697  001498  C002  FFF6         	movff	EUSART1_Writes@s,tblptrl
  1698  00149C  C003  FFF7         	movff	EUSART1_Writes@s+1,tblptrh
  1699  0014A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1700  0014A0  6AF8               	clrf	tblptru,c
  1701  0014A2                     	endif
  1702  0014A2                     	if	0	;tblptru may be non-zero
  1703  0014A2                     	endif
  1704  0014A2  0008               	tblrd		*
  1705  0014A4  50F5               	movf	tablat,w,c
  1706  0014A6  EC87  F00A         	call	_EUSART1_Write
  1707  0014AA                     
  1708                           ;eusart1.c: 95:          s++;
  1709  0014AA  4A02               	infsnz	EUSART1_Writes@s^0,f,c
  1710  0014AC  2A03               	incf	(EUSART1_Writes@s+1)^0,f,c
  1711  0014AE                     i2l1337:
  1712                           
  1713                           ;eusart1.c: 92:      while(*s)
  1714  0014AE  C002  FFF6         	movff	EUSART1_Writes@s,tblptrl
  1715  0014B2  C003  FFF7         	movff	EUSART1_Writes@s+1,tblptrh
  1716  0014B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1717  0014B6  6AF8               	clrf	tblptru,c
  1718  0014B8                     	endif
  1719  0014B8                     	if	0	;tblptru may be non-zero
  1720  0014B8                     	endif
  1721  0014B8  0008               	tblrd		*
  1722  0014BA  50F5               	movf	tablat,w,c
  1723  0014BC  0900               	iorlw	0
  1724  0014BE  A4D8               	btfss	status,2,c
  1725  0014C0  EF64  F00A         	goto	i2u43_41
  1726  0014C4  EF66  F00A         	goto	i2u43_40
  1727  0014C8                     i2u43_41:
  1728  0014C8  EF4C  F00A         	goto	i2l1333
  1729  0014CC                     i2u43_40:
  1730  0014CC  0012               	return		;funcret
  1731  0014CE                     __end_of_EUSART1_Writes:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _EUSART1_Write *****************
  1735 ;; Defined at:
  1736 ;;		line 81 in file "eusart1.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  txData          1    wreg     unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  txData          1    0[COMRAM] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;Total ram usage:        1 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_EUSART1_Writes
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text13
  1764  00150E                     __ptext13:
  1765                           	callstack 0
  1766  00150E                     _EUSART1_Write:
  1767                           	callstack 26
  1768                           
  1769                           ;incstack = 0
  1770                           ;EUSART1_Write@txData stored from wreg
  1771  00150E  6E01               	movwf	EUSART1_Write@txData^0,c
  1772  001510                     i2l196:
  1773                           
  1774                           ;eusart1.c: 83:     while(0 == PIR1bits.TX1IF)
  1775  001510  A89E               	btfss	158,4,c	;volatile
  1776  001512  EF8D  F00A         	goto	i2u3_41
  1777  001516  EF8F  F00A         	goto	i2u3_40
  1778  00151A                     i2u3_41:
  1779  00151A  EF88  F00A         	goto	i2l196
  1780  00151E                     i2u3_40:
  1781  00151E                     
  1782                           ;eusart1.c: 87:     TXREG1 = txData;
  1783  00151E  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1784  001522  0012               	return		;funcret
  1785  001524                     __end_of_EUSART1_Write:
  1786                           	callstack 0
  1787                           
  1788 ;; *************** function _EUSART1_Read *****************
  1789 ;; Defined at:
  1790 ;;		line 64 in file "eusart1.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      unsigned char 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_interrupcao
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text14
  1818  0014CE                     __ptext14:
  1819                           	callstack 0
  1820  0014CE                     _EUSART1_Read:
  1821                           	callstack 27
  1822  0014CE                     i2l189:
  1823  0014CE  AA9E               	btfss	158,5,c	;volatile
  1824  0014D0  EF6C  F00A         	goto	i2u4_41
  1825  0014D4  EF6E  F00A         	goto	i2u4_40
  1826  0014D8                     i2u4_41:
  1827  0014D8  EF67  F00A         	goto	i2l189
  1828  0014DC                     i2u4_40:
  1829  0014DC                     
  1830                           ;eusart1.c: 68:     eusart1RxLastError.status = 0;
  1831  0014DC  0E00               	movlw	0
  1832  0014DE  6E1A               	movwf	_eusart1RxLastError^0,c	;volatile
  1833  0014E0                     
  1834                           ;eusart1.c: 70:     if(RCSTA1bits.OERR)
  1835  0014E0  A2AB               	btfss	171,1,c	;volatile
  1836  0014E2  EF75  F00A         	goto	i2u5_41
  1837  0014E6  EF77  F00A         	goto	i2u5_40
  1838  0014EA                     i2u5_41:
  1839  0014EA  EF7A  F00A         	goto	i2l945
  1840  0014EE                     i2u5_40:
  1841  0014EE                     
  1842                           ;eusart1.c: 71:     {;eusart1.c: 73:         RCSTA1bits.CREN = 0;
  1843  0014EE  98AB               	bcf	171,4,c	;volatile
  1844                           
  1845                           ;eusart1.c: 74:         __nop();
  1846  0014F0  F000               	nop	
  1847                           
  1848                           ;eusart1.c: 75:         RCSTA1bits.CREN = 1;
  1849  0014F2  88AB               	bsf	171,4,c	;volatile
  1850  0014F4                     i2l945:
  1851                           
  1852                           ;eusart1.c: 78:     return RCREG1;
  1853  0014F4  50AE               	movf	174,w,c	;volatile
  1854  0014F6  0012               	return		;funcret
  1855  0014F8                     __end_of_EUSART1_Read:
  1856                           	callstack 0
  1857                           
  1858                           	psect	rparam
  1859  0000                     
  1860                           	psect	temp
  1861  000022                     btemp:
  1862                           	callstack 0
  1863  000022                     	ds	1
  1864  0000                     int$flags	set	btemp
  1865  0000                     wtemp8	set	btemp+1
  1866  0000                     ttemp5	set	btemp+1
  1867  0000                     ttemp6	set	btemp+4
  1868  0000                     ttemp7	set	btemp+8
  1869                           
  1870                           	psect	idloc
  1871                           
  1872                           ;Config register IDLOC0 @ 0x200000
  1873                           ;	unspecified, using default values
  1874  200000                     	org	2097152
  1875  200000  FF                 	db	255
  1876                           
  1877                           ;Config register IDLOC1 @ 0x200001
  1878                           ;	unspecified, using default values
  1879  200001                     	org	2097153
  1880  200001  FF                 	db	255
  1881                           
  1882                           ;Config register IDLOC2 @ 0x200002
  1883                           ;	unspecified, using default values
  1884  200002                     	org	2097154
  1885  200002  FF                 	db	255
  1886                           
  1887                           ;Config register IDLOC3 @ 0x200003
  1888                           ;	unspecified, using default values
  1889  200003                     	org	2097155
  1890  200003  FF                 	db	255
  1891                           
  1892                           ;Config register IDLOC4 @ 0x200004
  1893                           ;	unspecified, using default values
  1894  200004                     	org	2097156
  1895  200004  FF                 	db	255
  1896                           
  1897                           ;Config register IDLOC5 @ 0x200005
  1898                           ;	unspecified, using default values
  1899  200005                     	org	2097157
  1900  200005  FF                 	db	255
  1901                           
  1902                           ;Config register IDLOC6 @ 0x200006
  1903                           ;	unspecified, using default values
  1904  200006                     	org	2097158
  1905  200006  FF                 	db	255
  1906                           
  1907                           ;Config register IDLOC7 @ 0x200007
  1908                           ;	unspecified, using default values
  1909  200007                     	org	2097159
  1910  200007  FF                 	db	255
  1911                           
  1912                           	psect	config
  1913                           
  1914                           ; Padding undefined space
  1915  300000                     	org	3145728
  1916  300000  FF                 	db	255
  1917                           
  1918                           ;Config register CONFIG1H @ 0x300001
  1919                           ;	Oscillator Selection bits
  1920                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
  1921                           ;	4X PLL Enable
  1922                           ;	PLLCFG = OFF, Oscillator used directly
  1923                           ;	Primary clock enable bit
  1924                           ;	PRICLKEN = ON, Primary clock is always enabled
  1925                           ;	Fail-Safe Clock Monitor Enable bit
  1926                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1927                           ;	Internal/External Oscillator Switchover bit
  1928                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1929  300001                     	org	3145729
  1930  300001  22                 	db	34
  1931                           
  1932                           ;Config register CONFIG2L @ 0x300002
  1933                           ;	Power-up Timer Enable bit
  1934                           ;	PWRTEN = OFF, Power up timer disabled
  1935                           ;	Brown-out Reset Enable bits
  1936                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1937                           ;	Brown Out Reset Voltage bits
  1938                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1939  300002                     	org	3145730
  1940  300002  19                 	db	25
  1941                           
  1942                           ;Config register CONFIG2H @ 0x300003
  1943                           ;	Watchdog Timer Enable bits
  1944                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1945                           ;	Watchdog Timer Postscale Select bits
  1946                           ;	WDTPS = 32768, 1:32768
  1947  300003                     	org	3145731
  1948  300003  3C                 	db	60
  1949                           
  1950                           ; Padding undefined space
  1951  300004                     	org	3145732
  1952  300004  FF                 	db	255
  1953                           
  1954                           ;Config register CONFIG3H @ 0x300005
  1955                           ;	CCP2 MUX bit
  1956                           ;	CCP2MX = PORTB3, CCP2 input/output is multiplexed with RB3
  1957                           ;	PORTB A/D Enable bit
  1958                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1959                           ;	P3A/CCP3 Mux bit
  1960                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  1961                           ;	HFINTOSC Fast Start-up
  1962                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1963                           ;	Timer3 Clock input mux bit
  1964                           ;	T3CMX = PORTB5, T3CKI is on RB5
  1965                           ;	ECCP2 B output mux bit
  1966                           ;	P2BMX = PORTD2, P2B is on RD2
  1967                           ;	MCLR Pin Enable bit
  1968                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1969  300005                     	org	3145733
  1970  300005  A8                 	db	168
  1971                           
  1972                           ;Config register CONFIG4L @ 0x300006
  1973                           ;	Stack Full/Underflow Reset Enable bit
  1974                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1975                           ;	Single-Supply ICSP Enable bit
  1976                           ;	LVP = OFF, Single-Supply ICSP disabled
  1977                           ;	Extended Instruction Set Enable bit
  1978                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1979                           ;	Background Debug
  1980                           ;	DEBUG = 0x1, unprogrammed default
  1981  300006                     	org	3145734
  1982  300006  81                 	db	129
  1983                           
  1984                           ; Padding undefined space
  1985  300007                     	org	3145735
  1986  300007  FF                 	db	255
  1987                           
  1988                           ;Config register CONFIG5L @ 0x300008
  1989                           ;	Code Protection Block 0
  1990                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1991                           ;	Code Protection Block 1
  1992                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1993                           ;	Code Protection Block 2
  1994                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1995                           ;	Code Protection Block 3
  1996                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1997  300008                     	org	3145736
  1998  300008  0F                 	db	15
  1999                           
  2000                           ;Config register CONFIG5H @ 0x300009
  2001                           ;	Boot Block Code Protection bit
  2002                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2003                           ;	Data EEPROM Code Protection bit
  2004                           ;	CPD = OFF, Data EEPROM not code-protected
  2005  300009                     	org	3145737
  2006  300009  C0                 	db	192
  2007                           
  2008                           ;Config register CONFIG6L @ 0x30000A
  2009                           ;	Write Protection Block 0
  2010                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2011                           ;	Write Protection Block 1
  2012                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2013                           ;	Write Protection Block 2
  2014                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2015                           ;	Write Protection Block 3
  2016                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2017  30000A                     	org	3145738
  2018  30000A  0F                 	db	15
  2019                           
  2020                           ;Config register CONFIG6H @ 0x30000B
  2021                           ;	Configuration Register Write Protection bit
  2022                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2023                           ;	Boot Block Write Protection bit
  2024                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2025                           ;	Data EEPROM Write Protection bit
  2026                           ;	WRTD = OFF, Data EEPROM not write-protected
  2027  30000B                     	org	3145739
  2028  30000B  E0                 	db	224
  2029                           
  2030                           ;Config register CONFIG7L @ 0x30000C
  2031                           ;	Table Read Protection Block 0
  2032                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2033                           ;	Table Read Protection Block 1
  2034                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2035                           ;	Table Read Protection Block 2
  2036                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2037                           ;	Table Read Protection Block 3
  2038                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2039  30000C                     	org	3145740
  2040  30000C  0F                 	db	15
  2041                           
  2042                           ;Config register CONFIG7H @ 0x30000D
  2043                           ;	Boot Block Table Read Protection bit
  2044                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2045  30000D                     	org	3145741
  2046  30000D  40                 	db	64
  2047                           tosu	equ	0xFFF
  2048                           tosh	equ	0xFFE
  2049                           tosl	equ	0xFFD
  2050                           stkptr	equ	0xFFC
  2051                           pclatu	equ	0xFFB
  2052                           pclath	equ	0xFFA
  2053                           pcl	equ	0xFF9
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           prodh	equ	0xFF4
  2059                           prodl	equ	0xFF3
  2060                           indf0	equ	0xFEF
  2061                           postinc0	equ	0xFEE
  2062                           postdec0	equ	0xFED
  2063                           preinc0	equ	0xFEC
  2064                           plusw0	equ	0xFEB
  2065                           fsr0h	equ	0xFEA
  2066                           fsr0l	equ	0xFE9
  2067                           wreg	equ	0xFE8
  2068                           indf1	equ	0xFE7
  2069                           postinc1	equ	0xFE6
  2070                           postdec1	equ	0xFE5
  2071                           preinc1	equ	0xFE4
  2072                           plusw1	equ	0xFE3
  2073                           fsr1h	equ	0xFE2
  2074                           fsr1l	equ	0xFE1
  2075                           bsr	equ	0xFE0
  2076                           indf2	equ	0xFDF
  2077                           postinc2	equ	0xFDE
  2078                           postdec2	equ	0xFDD
  2079                           preinc2	equ	0xFDC
  2080                           plusw2	equ	0xFDB
  2081                           fsr2h	equ	0xFDA
  2082                           fsr2l	equ	0xFD9
  2083                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    0
    Data        0
    BSS         7
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     21      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_Writes@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[14]), STR_2(CODE[11]), 

    LCD_printstring@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_LCD_pos
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _interrupcao in COMRAM

    _interrupcao->i2_LCD_pos
    _LCD_printstring->_LCD_printchar
    _EUSART1_Writes->_EUSART1_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupcao in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupcao in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupcao in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupcao in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupcao in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupcao in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupcao in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupcao in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     995
                                             20 COMRAM     1     1      0
                 _EUSART1_Initialize
                     _LCD_initialize
                            _LCD_pos
 ---------------------------------------------------------------------------------
 (1) _LCD_pos                                              7     6      1     430
                                             13 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _LCD_initialize                                       2     2      0     270
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (2) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_SetErrorHandler                              2     0      2      98
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupcao                                          6     6      0     992
                                              7 COMRAM     6     6      0
                       _EUSART1_Read
                     _EUSART1_Writes
                          _LCD_clear
                      _LCD_printchar
                    _LCD_printstring
                          i2_LCD_pos
 ---------------------------------------------------------------------------------
 (4) i2_LCD_pos                                            7     6      1     306
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (4) _LCD_printstring                                      2     0      2     272
                                              3 COMRAM     2     0      2
                      _LCD_printchar
 ---------------------------------------------------------------------------------
 (5) _LCD_printchar                                        3     3      0      75
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _LCD_clear                                            2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Writes                                       2     0      2     212
                                              1 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
   _LCD_initialize
   _LCD_pos

 _interrupcao (ROOT)
   _EUSART1_Read
   _EUSART1_Writes
     _EUSART1_Write
   _LCD_clear
   _LCD_printchar
   _LCD_printstring
     _LCD_printchar
   i2_LCD_pos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     15      22       1       36.2%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22      12        0.0%
DATA                 0      0      22       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Dec 30 14:56:21 2020

                                             _k 001B                                              l61 1414  
                                            l62 1414                                              l90 1176  
                                            l82 10DA                                              l93 119A  
                                            l86 1128                                              l78 108C  
                                           l111 1242                                             l114 1266  
                                           l106 120C                                             l220 152C  
                                           l223 1540                                             l217 1536  
                                           l172 1458                                             u200 10FE  
                                           u201 10FA                                             u210 1128  
                                           u211 1124                                             u220 114C  
                                           u221 1148                                             u230 1176  
                                           u231 1172                                             u240 119A  
                                           u160 1062                                             u400 1242  
                                           u241 1196                                             u161 105E  
                                           u401 123E                                             u170 108C  
                                           u410 1266                                             u171 1088  
                                           u411 1262                                             u180 10B0  
                                           u181 10AC                                             u190 10DA  
                                           u191 10D6                                             u360 11B6  
                                           u361 11B2                                             u370 11D0  
                                           u371 11CC                                             u380 11EA  
                                           u381 11E6                                             u390 1204  
                                           u391 1200                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                LCD_printstring@s 0004  
                               __end_of_LCD_pos 1268                                            l1111 1102  
                                          l1121 1112                                            l1113 1104  
                                          l1105 10E4                                            l1131 1136  
                                          l1123 112A                                            l1107 10E8  
                                          l1051 103E                                            l1043 1030  
                                          l1133 114C                                            l1109 10FE  
                                          l1061 1062                                            l1045 1034  
                                          l1301 121C                                            l1143 115C  
                                          l1135 1150                                            l1119 110E  
                                          l1071 1072                                            l1063 1066  
                                          l1047 1036                                            l1311 122C  
                                          l1303 121E                                            l1153 1180  
                                          l1145 1160                                            l1137 1152  
                                          l1129 1132                                            l1081 1096  
                                          l1073 1076                                            l1065 1068  
                                          l1057 1048                                            l1049 103C  
                                          l1321 1250                                            l1313 1244  
                                          l1155 1184                                            l1147 1178  
                                          l1083 109A                                            l1075 108E  
                                          l1059 104C                                            l1341 1430  
                                          l1085 10B0                                            l1309 1228  
                                          l1343 143C                                            l1095 10C0  
                                          l1087 10B4                                            l1319 124C  
                                          l1431 13EC                                            l1273 152E  
                                          l1345 1448                                            l1097 10C4  
                                          l1089 10B6                                            l1281 11A6  
                                          l1441 1406                                            l1433 13EE  
                                          l1425 13D6                                            l1275 1524  
                                          l1347 1454                                            l1339 141C  
                                          l1099 10DC                                            l1291 11EA  
                                          l1283 11B6                                            l1443 1408  
                                          l1435 13F2                                            l1427 13E8  
                                          l1277 1538                                            l1293 11F2  
                                          l1285 11BE                                            l1445 140A  
                                          l1437 1402                                            l1429 13EA  
                                          l1295 1204                                            l1287 11D0  
                                          l1279 119E                                            l1439 1404  
                                          l1289 11D8                                            l1297 120C  
                                          l1299 1216                                            STR_1 1026  
                                          STR_2 101B                                            STR_3 100F  
                                          STR_4 1001                                            i2l56 00C2  
                                          i2l97 13B0                                   _EUSART1_Write 150E  
                                          _main 13D6                                   ?_EUSART1_Read 0001  
                                          btemp 0022                                            start 00D6  
                            __size_of_LCD_clear 0050                                    ___param_bank 000000  
                        __size_of_LCD_printchar 0052                         __size_of_LCD_initialize 016C  
                            __size_ofi2_LCD_pos 00CC                                           ?_main 0001  
                                         i2l100 13D4                                           i2l111 130E  
                                         i2l121 1384                                           i2l114 1332  
                                         i2l106 12D8                                           i2l205 14CC  
                                         i2l118 1360                                           i2l127 1492  
                                         i2l193 14F6                                           i2l196 1510  
                                         i2l189 14CE                                           i2l199 1522  
                                         i2l901 1336                                           i2l903 133A  
                                         i2l913 1346                                           i2l905 133C  
                                         i2l923 136A                                           i2l915 134A  
                                         i2l907 133E                                           i2l941 14E0  
                                         i2l933 1510                                           i2l925 136E  
                                         i2l917 1362                                           i2l943 14EE  
                                         i2l935 151E                                           i2l951 138A  
                                         i2l945 14F4                                           i2l937 14CE  
                                         i2l961 139A                                           i2l953 138C  
                                         i2l939 14DC                                           i2l971 13BE  
                                         i2l963 13B2                                           i2l949 1386  
                                         i2l959 1396                                           i2l969 13BA  
                                         i2l899 1336                                           _PORTD 000F83  
                                         _TRISD 000F95                                  _EUSART1_Writes 1494  
                                ?_EUSART1_Write 0001                                           tablat 000FF5  
                                ??_EUSART1_Read 0001                                           ttemp5 0023  
                                         ttemp6 0026                                           ttemp7 002A  
                                         status 000FD8                                           wtemp8 0023  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 14F8  
                                  ?_interrupcao 0001                      __end_of_EUSART1_Initialize 145A  
                                  __end_of_main 141C                                          ??_main 0015  
                                 __activetblptr 000003                          __end_of_EUSART1_Writes 14CE  
                                     ??_LCD_pos 000F                               __end_of_LCD_clear 13D6  
                                 _LCD_printchar 1334                                          _ANSELA 000F38  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _ANSELD 000F3B                                          i2l1401 0036  
                                        i2l1331 1494                                          i2l1323 145A  
                                        i2l1411 0070                                          i2l1403 0048  
                                        i2l1333 1498                                          i2l1325 145E  
                                        i2l1421 00AA                                          i2l1405 004C  
                                        i2l1413 007C                                          i2l1335 14AA  
                                        i2l1327 1470                                          i2l1351 1272  
                                        i2l1423 00B6                                          i2l1415 008E  
                                        i2l1407 005A                                          i2l1337 14AE  
                                        i2l1329 1474                                          i2l1361 12B6  
                                        i2l1353 1282                                          i2l1417 0092  
                                        i2l1409 0064                                          i2l1371 12E8  
                                        i2l1363 12BE                                          i2l1355 128A  
                                        i2l1419 00A0                                          i2l1381 12F8  
                                        i2l1373 12EA                                          i2l1365 12D0  
                                        i2l1357 129C                                          i2l1349 126A  
                                        i2l1391 131C                                          i2l1383 1310  
                                        i2l1359 12A4                                          i2l1367 12D8  
                                        i2l1369 12E2                                          i2l1393 001A  
                                        i2l1379 12F4                                          i2l1395 0028  
                                        i2l1389 1318                                          i2l1397 002E  
                                        i2l1399 0030                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                               __end_ofi2_LCD_pos 1334  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        i2u1_40 1360                                          i2u1_41 135C  
                                        i2u2_40 1384                                          i2u2_41 1380  
                                        i2u3_40 151E                                          i2u3_41 151A  
                                        i2u4_40 14DC                                          i2u4_41 14D8  
                                        i2u5_40 14EE                                          i2u5_41 14EA  
                                        i2u6_40 13B0                                          i2u6_41 13AC  
                                        i2u7_40 13D4                                          i2u7_41 13D0  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                               LCD_initialize@i 000E                        ?_EUSART1_SetErrorHandler 000E  
                                        clear_0 14FE                ??_EUSART1_SetOverrunErrorHandler 0010  
               ?_EUSART1_SetOverrunErrorHandler 000E                                 ?_EUSART1_Writes 0002  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                               ??_EUSART1_Write 0001                                  ?_LCD_printchar 0001  
                                LCD_printchar@i 0002                                      __accesstop 0060  
                       __end_of__initialization 1504                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                                  _LCD_initialize 1030  
                          __end_of_EUSART1_Read 14F8                                    LCD_pos@linha 0012  
                                    __pnvCOMRAM 001C                        __size_of_LCD_printstring 003A  
               __end_of_EUSART1_SetErrorHandler 1542                          __end_of_LCD_initialize 119C  
                          __size_of_interrupcao 00CE          __end_of_EUSART1_SetFramingErrorHandler 1538  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 152E  
                                       _LCD_pos 119C                                 ??_LCD_printchar 0001  
                                       _OSCCON2 000FD2                                         i2u42_40 1492  
                                       i2u50_40 0028                                         i2u42_41 148E  
                                       i2u50_41 0024                                         i2u43_40 14CC  
                                       i2u51_40 0048                                         i2u43_41 14C8  
                                       i2u51_41 0044                                         i2u44_40 1282  
                                       i2u52_40 008E                                         i2u44_41 127E  
                                       i2u52_41 008A                                         i2u45_40 129C  
                                       i2u45_41 1298                                         i2u53_47 0052  
                                       i2u46_40 12B6                                         i2u46_41 12B2  
                                       _OSCTUNE 000F9B                                         i2u54_47 0098  
                                       i2u47_40 12D0                                         i2u47_41 12CC  
                                       i2u48_40 130E                                         i2u48_41 130A  
                                       i2u49_40 1332                                         i2u49_41 132E  
                                       _SPBRGH1 000FB0                                    i2LCD_pos@cte 0004  
                                  i2LCD_pos@pos 0003                                         __Hparam 0000  
                                       __Lparam 0000                                 ?_LCD_initialize 0001  
                                  __psmallconst 1000                                         __pcinit 14F8  
                                       __ramtop 1000                                         __ptext0 13D6  
                                       __ptext1 119C                                         __ptext2 1030  
                                       __ptext3 141C                                         __ptext4 1524  
                                       __ptext5 152E                                         __ptext6 1538  
                                       __ptext8 1268                                         __ptext9 145A  
                            _EUSART1_Initialize 141C                                         _rcvdata 0015  
                                     _LCD_clear 1386                            end_of_initialization 1504  
                           ?_EUSART1_Initialize 0001                          LCD_printchar@character 0001  
                   _EUSART1_OverrunErrorHandler 001E                                       i2_LCD_pos 1268  
                               EUSART1_Writes@s 0002                                         postinc0 000FEE  
                         __size_of_EUSART1_Read 002A                               ??_LCD_printstring 0006  
                              ??_EUSART1_Writes 0004                            ??_EUSART1_Initialize 0010  
                                     _PORTCbits 000F82                                       _TRISCbits 000F94  
                                i2LCD_pos@linha 0005                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0001                                      ?_LCD_clear 0001  
                                  _EUSART1_Read 14CE                                      ?i2_LCD_pos 0001  
                                    LCD_clear@i 0001                             start_initialization 14F8  
                                    LCD_pos@cte 0011                                      LCD_pos@pos 0010  
                         __end_of_EUSART1_Write 1524                                   LCD_pos@coluna 000E  
                                      ?_LCD_pos 000E                                     __pbssCOMRAM 0015  
                                   ??_LCD_clear 0001                                        LCD_pos@i 0013  
              ??_EUSART1_SetFramingErrorHandler 0010                 ?_EUSART1_SetFramingErrorHandler 000E  
                              ??_LCD_initialize 000E                                     ??i2_LCD_pos 0002  
                                 ??_interrupcao 0008                                       __pintcode 0008  
                                   __smallconst 1000                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                            _EUSART1_ErrorHandler 001C  
                       _EUSART1_SetErrorHandler 1538                           __end_of_LCD_printchar 1386  
                               _LCD_printstring 145A         EUSART1_SetErrorHandler@interruptHandler 000E  
                                      _PIE1bits 000F9D                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                             __end_of_interrupcao 00D6  
                              __size_of_LCD_pos 00CC                                        __Hrparam 0000  
                                      __Lrparam 0000                     __size_of_EUSART1_Initialize 003E  
                     ??_EUSART1_SetErrorHandler 0010                     _EUSART1_DefaultErrorHandler 000000  
                       __end_of_LCD_printstring 1494                                        __ptext10 1334  
                                      __ptext11 1386                                        __ptext12 1494  
                                      __ptext13 150E                                        __ptext14 14CE  
                                    i2LCD_pos@i 0006                                   __size_of_main 0046  
EUSART1_SetOverrunErrorHandler@interruptHandler 000E                                     _interrupcao 0008  
                                      int$flags 0022                     _EUSART1_FramingErrorHandler 0020  
                               interrupcao@data 000D                                      _INTCONbits 000FF2  
                       __size_of_EUSART1_Writes 003A                                        intlevel2 0000  
        __end_of_EUSART1_SetOverrunErrorHandler 152E         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1524                                      _RCSTA1bits 000FAB  
EUSART1_SetFramingErrorHandler@interruptHandler 000E                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 001A                                ?_LCD_printstring 0004  
                               i2LCD_pos@coluna 0001  
